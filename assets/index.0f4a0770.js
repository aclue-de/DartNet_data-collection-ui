var o8=Object.defineProperty,l8=Object.defineProperties;var u8=Object.getOwnPropertyDescriptors;var bf=Object.getOwnPropertySymbols;var jS=Object.prototype.hasOwnProperty,RS=Object.prototype.propertyIsEnumerable;var Xm=(t,e,r)=>e in t?o8(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,qf=(t,e)=>{for(var r in e||(e={}))jS.call(e,r)&&Xm(t,r,e[r]);if(bf)for(var r of bf(e))RS.call(e,r)&&Xm(t,r,e[r]);return t},VS=(t,e)=>l8(t,u8(e));var LS=(t,e)=>{var r={};for(var n in t)jS.call(t,n)&&e.indexOf(n)<0&&(r[n]=t[n]);if(t!=null&&bf)for(var n of bf(t))e.indexOf(n)<0&&RS.call(t,n)&&(r[n]=t[n]);return r};var Qm=(t,e,r)=>(Xm(t,typeof e!="symbol"?e+"":e,r),r);function c8(t,e){return e.forEach(function(r){r&&typeof r!="string"&&!Array.isArray(r)&&Object.keys(r).forEach(function(n){if(n!=="default"&&!(n in t)){var i=Object.getOwnPropertyDescriptor(r,n);Object.defineProperty(t,n,i.get?i:{enumerable:!0,get:function(){return r[n]}})}})}),Object.freeze(Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}))}const f8=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const a of i)if(a.type==="childList")for(const s of a.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&n(s)}).observe(document,{childList:!0,subtree:!0});function r(i){const a={};return i.integrity&&(a.integrity=i.integrity),i.referrerpolicy&&(a.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?a.credentials="include":i.crossorigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function n(i){if(i.ep)return;i.ep=!0;const a=r(i);fetch(i.href,a)}};f8();const d8={black:"#000",white:"#fff"};var Lu=d8;const p8={50:"#ffebee",100:"#ffcdd2",200:"#ef9a9a",300:"#e57373",400:"#ef5350",500:"#f44336",600:"#e53935",700:"#d32f2f",800:"#c62828",900:"#b71c1c",A100:"#ff8a80",A200:"#ff5252",A400:"#ff1744",A700:"#d50000"};var lo=p8;const h8={50:"#f3e5f5",100:"#e1bee7",200:"#ce93d8",300:"#ba68c8",400:"#ab47bc",500:"#9c27b0",600:"#8e24aa",700:"#7b1fa2",800:"#6a1b9a",900:"#4a148c",A100:"#ea80fc",A200:"#e040fb",A400:"#d500f9",A700:"#aa00ff"};var uo=h8;const m8={50:"#e3f2fd",100:"#bbdefb",200:"#90caf9",300:"#64b5f6",400:"#42a5f5",500:"#2196f3",600:"#1e88e5",700:"#1976d2",800:"#1565c0",900:"#0d47a1",A100:"#82b1ff",A200:"#448aff",A400:"#2979ff",A700:"#2962ff"};var co=m8;const v8={50:"#e1f5fe",100:"#b3e5fc",200:"#81d4fa",300:"#4fc3f7",400:"#29b6f6",500:"#03a9f4",600:"#039be5",700:"#0288d1",800:"#0277bd",900:"#01579b",A100:"#80d8ff",A200:"#40c4ff",A400:"#00b0ff",A700:"#0091ea"};var fo=v8;const y8={50:"#e8f5e9",100:"#c8e6c9",200:"#a5d6a7",300:"#81c784",400:"#66bb6a",500:"#4caf50",600:"#43a047",700:"#388e3c",800:"#2e7d32",900:"#1b5e20",A100:"#b9f6ca",A200:"#69f0ae",A400:"#00e676",A700:"#00c853"};var po=y8;const g8={50:"#fff3e0",100:"#ffe0b2",200:"#ffcc80",300:"#ffb74d",400:"#ffa726",500:"#ff9800",600:"#fb8c00",700:"#f57c00",800:"#ef6c00",900:"#e65100",A100:"#ffd180",A200:"#ffab40",A400:"#ff9100",A700:"#ff6d00"};var zl=g8;const A8={50:"#fafafa",100:"#f5f5f5",200:"#eeeeee",300:"#e0e0e0",400:"#bdbdbd",500:"#9e9e9e",600:"#757575",700:"#616161",800:"#424242",900:"#212121",A100:"#f5f5f5",A200:"#eeeeee",A400:"#bdbdbd",A700:"#616161"};var S8=A8;function Q(){return Q=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},Q.apply(this,arguments)}function Le(t,e){if(t==null)return{};var r={},n=Object.keys(t),i,a;for(a=0;a<n.length;a++)i=n[a],!(e.indexOf(i)>=0)&&(r[i]=t[i]);return r}function V2(t){if(t.__esModule)return t;var e=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(t).forEach(function(r){var n=Object.getOwnPropertyDescriptor(t,r);Object.defineProperty(e,r,n.get?n:{enumerable:!0,get:function(){return t[r]}})}),e}var Y={exports:{}},Ne={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var sc=Symbol.for("react.element"),x8=Symbol.for("react.portal"),P8=Symbol.for("react.fragment"),w8=Symbol.for("react.strict_mode"),k8=Symbol.for("react.profiler"),b8=Symbol.for("react.provider"),q8=Symbol.for("react.context"),T8=Symbol.for("react.forward_ref"),j8=Symbol.for("react.suspense"),R8=Symbol.for("react.memo"),V8=Symbol.for("react.lazy"),NS=Symbol.iterator;function L8(t){return t===null||typeof t!="object"?null:(t=NS&&t[NS]||t["@@iterator"],typeof t=="function"?t:null)}var L2={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},N2=Object.assign,W2={};function al(t,e,r){this.props=t,this.context=e,this.refs=W2,this.updater=r||L2}al.prototype.isReactComponent={};al.prototype.setState=function(t,e){if(typeof t!="object"&&typeof t!="function"&&t!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,t,e,"setState")};al.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")};function U2(){}U2.prototype=al.prototype;function Wg(t,e,r){this.props=t,this.context=e,this.refs=W2,this.updater=r||L2}var Ug=Wg.prototype=new U2;Ug.constructor=Wg;N2(Ug,al.prototype);Ug.isPureReactComponent=!0;var WS=Array.isArray,H2=Object.prototype.hasOwnProperty,Hg={current:null},M2={key:!0,ref:!0,__self:!0,__source:!0};function O2(t,e,r){var n,i={},a=null,s=null;if(e!=null)for(n in e.ref!==void 0&&(s=e.ref),e.key!==void 0&&(a=""+e.key),e)H2.call(e,n)&&!M2.hasOwnProperty(n)&&(i[n]=e[n]);var l=arguments.length-2;if(l===1)i.children=r;else if(1<l){for(var c=Array(l),f=0;f<l;f++)c[f]=arguments[f+2];i.children=c}if(t&&t.defaultProps)for(n in l=t.defaultProps,l)i[n]===void 0&&(i[n]=l[n]);return{$$typeof:sc,type:t,key:a,ref:s,props:i,_owner:Hg.current}}function N8(t,e){return{$$typeof:sc,type:t.type,key:e,ref:t.ref,props:t.props,_owner:t._owner}}function Mg(t){return typeof t=="object"&&t!==null&&t.$$typeof===sc}function W8(t){var e={"=":"=0",":":"=2"};return"$"+t.replace(/[=:]/g,function(r){return e[r]})}var US=/\/+/g;function _m(t,e){return typeof t=="object"&&t!==null&&t.key!=null?W8(""+t.key):e.toString(36)}function dd(t,e,r,n,i){var a=typeof t;(a==="undefined"||a==="boolean")&&(t=null);var s=!1;if(t===null)s=!0;else switch(a){case"string":case"number":s=!0;break;case"object":switch(t.$$typeof){case sc:case x8:s=!0}}if(s)return s=t,i=i(s),t=n===""?"."+_m(s,0):n,WS(i)?(r="",t!=null&&(r=t.replace(US,"$&/")+"/"),dd(i,e,r,"",function(f){return f})):i!=null&&(Mg(i)&&(i=N8(i,r+(!i.key||s&&s.key===i.key?"":(""+i.key).replace(US,"$&/")+"/")+t)),e.push(i)),1;if(s=0,n=n===""?".":n+":",WS(t))for(var l=0;l<t.length;l++){a=t[l];var c=n+_m(a,l);s+=dd(a,e,r,c,i)}else if(c=L8(t),typeof c=="function")for(t=c.call(t),l=0;!(a=t.next()).done;)a=a.value,c=n+_m(a,l++),s+=dd(a,e,r,c,i);else if(a==="object")throw e=String(t),Error("Objects are not valid as a React child (found: "+(e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e)+"). If you meant to render a collection of children, use an array instead.");return s}function Tf(t,e,r){if(t==null)return t;var n=[],i=0;return dd(t,n,"","",function(a){return e.call(r,a,i++)}),n}function U8(t){if(t._status===-1){var e=t._result;e=e(),e.then(function(r){(t._status===0||t._status===-1)&&(t._status=1,t._result=r)},function(r){(t._status===0||t._status===-1)&&(t._status=2,t._result=r)}),t._status===-1&&(t._status=0,t._result=e)}if(t._status===1)return t._result.default;throw t._result}var Rr={current:null},pd={transition:null},H8={ReactCurrentDispatcher:Rr,ReactCurrentBatchConfig:pd,ReactCurrentOwner:Hg};Ne.Children={map:Tf,forEach:function(t,e,r){Tf(t,function(){e.apply(this,arguments)},r)},count:function(t){var e=0;return Tf(t,function(){e++}),e},toArray:function(t){return Tf(t,function(e){return e})||[]},only:function(t){if(!Mg(t))throw Error("React.Children.only expected to receive a single React element child.");return t}};Ne.Component=al;Ne.Fragment=P8;Ne.Profiler=k8;Ne.PureComponent=Wg;Ne.StrictMode=w8;Ne.Suspense=j8;Ne.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=H8;Ne.cloneElement=function(t,e,r){if(t==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+t+".");var n=N2({},t.props),i=t.key,a=t.ref,s=t._owner;if(e!=null){if(e.ref!==void 0&&(a=e.ref,s=Hg.current),e.key!==void 0&&(i=""+e.key),t.type&&t.type.defaultProps)var l=t.type.defaultProps;for(c in e)H2.call(e,c)&&!M2.hasOwnProperty(c)&&(n[c]=e[c]===void 0&&l!==void 0?l[c]:e[c])}var c=arguments.length-2;if(c===1)n.children=r;else if(1<c){l=Array(c);for(var f=0;f<c;f++)l[f]=arguments[f+2];n.children=l}return{$$typeof:sc,type:t.type,key:i,ref:a,props:n,_owner:s}};Ne.createContext=function(t){return t={$$typeof:q8,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},t.Provider={$$typeof:b8,_context:t},t.Consumer=t};Ne.createElement=O2;Ne.createFactory=function(t){var e=O2.bind(null,t);return e.type=t,e};Ne.createRef=function(){return{current:null}};Ne.forwardRef=function(t){return{$$typeof:T8,render:t}};Ne.isValidElement=Mg;Ne.lazy=function(t){return{$$typeof:V8,_payload:{_status:-1,_result:t},_init:U8}};Ne.memo=function(t,e){return{$$typeof:R8,type:t,compare:e===void 0?null:e}};Ne.startTransition=function(t){var e=pd.transition;pd.transition={};try{t()}finally{pd.transition=e}};Ne.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")};Ne.useCallback=function(t,e){return Rr.current.useCallback(t,e)};Ne.useContext=function(t){return Rr.current.useContext(t)};Ne.useDebugValue=function(){};Ne.useDeferredValue=function(t){return Rr.current.useDeferredValue(t)};Ne.useEffect=function(t,e){return Rr.current.useEffect(t,e)};Ne.useId=function(){return Rr.current.useId()};Ne.useImperativeHandle=function(t,e,r){return Rr.current.useImperativeHandle(t,e,r)};Ne.useInsertionEffect=function(t,e){return Rr.current.useInsertionEffect(t,e)};Ne.useLayoutEffect=function(t,e){return Rr.current.useLayoutEffect(t,e)};Ne.useMemo=function(t,e){return Rr.current.useMemo(t,e)};Ne.useReducer=function(t,e,r){return Rr.current.useReducer(t,e,r)};Ne.useRef=function(t){return Rr.current.useRef(t)};Ne.useState=function(t){return Rr.current.useState(t)};Ne.useSyncExternalStore=function(t,e,r){return Rr.current.useSyncExternalStore(t,e,r)};Ne.useTransition=function(){return Rr.current.useTransition()};Ne.version="18.1.0";Y.exports=Ne;var St=Y.exports,Ns=c8({__proto__:null,default:St},[Y.exports]);function z2(t){var e=Object.create(null);return function(r){return e[r]===void 0&&(e[r]=t(r)),e[r]}}var M8=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,O8=z2(function(t){return M8.test(t)||t.charCodeAt(0)===111&&t.charCodeAt(1)===110&&t.charCodeAt(2)<91});function z8(t){if(t.sheet)return t.sheet;for(var e=0;e<document.styleSheets.length;e++)if(document.styleSheets[e].ownerNode===t)return document.styleSheets[e]}function Y8(t){var e=document.createElement("style");return e.setAttribute("data-emotion",t.key),t.nonce!==void 0&&e.setAttribute("nonce",t.nonce),e.appendChild(document.createTextNode("")),e.setAttribute("data-s",""),e}var C8=function(){function t(r){var n=this;this._insertTag=function(i){var a;n.tags.length===0?n.insertionPoint?a=n.insertionPoint.nextSibling:n.prepend?a=n.container.firstChild:a=n.before:a=n.tags[n.tags.length-1].nextSibling,n.container.insertBefore(i,a),n.tags.push(i)},this.isSpeedy=r.speedy===void 0?!0:r.speedy,this.tags=[],this.ctr=0,this.nonce=r.nonce,this.key=r.key,this.container=r.container,this.prepend=r.prepend,this.insertionPoint=r.insertionPoint,this.before=null}var e=t.prototype;return e.hydrate=function(n){n.forEach(this._insertTag)},e.insert=function(n){this.ctr%(this.isSpeedy?65e3:1)===0&&this._insertTag(Y8(this));var i=this.tags[this.tags.length-1];if(this.isSpeedy){var a=z8(i);try{a.insertRule(n,a.cssRules.length)}catch{}}else i.appendChild(document.createTextNode(n));this.ctr++},e.flush=function(){this.tags.forEach(function(n){return n.parentNode&&n.parentNode.removeChild(n)}),this.tags=[],this.ctr=0},t}(),mr="-ms-",Md="-moz-",Ye="-webkit-",Y2="comm",Og="rule",zg="decl",F8="@import",C2="@keyframes",I8=Math.abs,Rp=String.fromCharCode,E8=Object.assign;function J8(t,e){return(((e<<2^Yr(t,0))<<2^Yr(t,1))<<2^Yr(t,2))<<2^Yr(t,3)}function F2(t){return t.trim()}function D8(t,e){return(t=e.exec(t))?t[0]:t}function Ce(t,e,r){return t.replace(e,r)}function oy(t,e){return t.indexOf(e)}function Yr(t,e){return t.charCodeAt(e)|0}function Nu(t,e,r){return t.slice(e,r)}function ci(t){return t.length}function Yg(t){return t.length}function jf(t,e){return e.push(t),t}function G8(t,e){return t.map(e).join("")}var Vp=1,Zo=1,I2=0,Kr=0,Ht=0,sl="";function Lp(t,e,r,n,i,a,s){return{value:t,root:e,parent:r,type:n,props:i,children:a,line:Vp,column:Zo,length:s,return:""}}function Yl(t,e){return E8(Lp("",null,null,"",null,null,0),t,{length:-t.length},e)}function K8(){return Ht}function B8(){return Ht=Kr>0?Yr(sl,--Kr):0,Zo--,Ht===10&&(Zo=1,Vp--),Ht}function nn(){return Ht=Kr<I2?Yr(sl,Kr++):0,Zo++,Ht===10&&(Zo=1,Vp++),Ht}function vi(){return Yr(sl,Kr)}function hd(){return Kr}function oc(t,e){return Nu(sl,t,e)}function Wu(t){switch(t){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function E2(t){return Vp=Zo=1,I2=ci(sl=t),Kr=0,[]}function J2(t){return sl="",t}function md(t){return F2(oc(Kr-1,ly(t===91?t+2:t===40?t+1:t)))}function Z8(t){for(;(Ht=vi())&&Ht<33;)nn();return Wu(t)>2||Wu(Ht)>3?"":" "}function X8(t,e){for(;--e&&nn()&&!(Ht<48||Ht>102||Ht>57&&Ht<65||Ht>70&&Ht<97););return oc(t,hd()+(e<6&&vi()==32&&nn()==32))}function ly(t){for(;nn();)switch(Ht){case t:return Kr;case 34:case 39:t!==34&&t!==39&&ly(Ht);break;case 40:t===41&&ly(t);break;case 92:nn();break}return Kr}function Q8(t,e){for(;nn()&&t+Ht!==47+10;)if(t+Ht===42+42&&vi()===47)break;return"/*"+oc(e,Kr-1)+"*"+Rp(t===47?t:nn())}function _8(t){for(;!Wu(vi());)nn();return oc(t,Kr)}function $8(t){return J2(vd("",null,null,null,[""],t=E2(t),0,[0],t))}function vd(t,e,r,n,i,a,s,l,c){for(var f=0,p=0,h=s,m=0,g=0,y=0,k=1,q=1,P=1,x=0,b="",j=i,R=a,V=n,N=b;q;)switch(y=x,x=nn()){case 40:if(y!=108&&N.charCodeAt(h-1)==58){oy(N+=Ce(md(x),"&","&\f"),"&\f")!=-1&&(P=-1);break}case 34:case 39:case 91:N+=md(x);break;case 9:case 10:case 13:case 32:N+=Z8(y);break;case 92:N+=X8(hd()-1,7);continue;case 47:switch(vi()){case 42:case 47:jf(eR(Q8(nn(),hd()),e,r),c);break;default:N+="/"}break;case 123*k:l[f++]=ci(N)*P;case 125*k:case 59:case 0:switch(x){case 0:case 125:q=0;case 59+p:g>0&&ci(N)-h&&jf(g>32?MS(N+";",n,r,h-1):MS(Ce(N," ","")+";",n,r,h-2),c);break;case 59:N+=";";default:if(jf(V=HS(N,e,r,f,p,i,l,b,j=[],R=[],h),a),x===123)if(p===0)vd(N,e,V,V,j,a,h,l,R);else switch(m){case 100:case 109:case 115:vd(t,V,V,n&&jf(HS(t,V,V,0,0,i,l,b,i,j=[],h),R),i,R,h,l,n?j:R);break;default:vd(N,V,V,V,[""],R,0,l,R)}}f=p=g=0,k=P=1,b=N="",h=s;break;case 58:h=1+ci(N),g=y;default:if(k<1){if(x==123)--k;else if(x==125&&k++==0&&B8()==125)continue}switch(N+=Rp(x),x*k){case 38:P=p>0?1:(N+="\f",-1);break;case 44:l[f++]=(ci(N)-1)*P,P=1;break;case 64:vi()===45&&(N+=md(nn())),m=vi(),p=h=ci(b=N+=_8(hd())),x++;break;case 45:y===45&&ci(N)==2&&(k=0)}}return a}function HS(t,e,r,n,i,a,s,l,c,f,p){for(var h=i-1,m=i===0?a:[""],g=Yg(m),y=0,k=0,q=0;y<n;++y)for(var P=0,x=Nu(t,h+1,h=I8(k=s[y])),b=t;P<g;++P)(b=F2(k>0?m[P]+" "+x:Ce(x,/&\f/g,m[P])))&&(c[q++]=b);return Lp(t,e,r,i===0?Og:l,c,f,p)}function eR(t,e,r){return Lp(t,e,r,Y2,Rp(K8()),Nu(t,2,-2),0)}function MS(t,e,r,n){return Lp(t,e,r,zg,Nu(t,0,n),Nu(t,n+1,-1),n)}function D2(t,e){switch(J8(t,e)){case 5103:return Ye+"print-"+t+t;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return Ye+t+t;case 5349:case 4246:case 4810:case 6968:case 2756:return Ye+t+Md+t+mr+t+t;case 6828:case 4268:return Ye+t+mr+t+t;case 6165:return Ye+t+mr+"flex-"+t+t;case 5187:return Ye+t+Ce(t,/(\w+).+(:[^]+)/,Ye+"box-$1$2"+mr+"flex-$1$2")+t;case 5443:return Ye+t+mr+"flex-item-"+Ce(t,/flex-|-self/,"")+t;case 4675:return Ye+t+mr+"flex-line-pack"+Ce(t,/align-content|flex-|-self/,"")+t;case 5548:return Ye+t+mr+Ce(t,"shrink","negative")+t;case 5292:return Ye+t+mr+Ce(t,"basis","preferred-size")+t;case 6060:return Ye+"box-"+Ce(t,"-grow","")+Ye+t+mr+Ce(t,"grow","positive")+t;case 4554:return Ye+Ce(t,/([^-])(transform)/g,"$1"+Ye+"$2")+t;case 6187:return Ce(Ce(Ce(t,/(zoom-|grab)/,Ye+"$1"),/(image-set)/,Ye+"$1"),t,"")+t;case 5495:case 3959:return Ce(t,/(image-set\([^]*)/,Ye+"$1$`$1");case 4968:return Ce(Ce(t,/(.+:)(flex-)?(.*)/,Ye+"box-pack:$3"+mr+"flex-pack:$3"),/s.+-b[^;]+/,"justify")+Ye+t+t;case 4095:case 3583:case 4068:case 2532:return Ce(t,/(.+)-inline(.+)/,Ye+"$1$2")+t;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(ci(t)-1-e>6)switch(Yr(t,e+1)){case 109:if(Yr(t,e+4)!==45)break;case 102:return Ce(t,/(.+:)(.+)-([^]+)/,"$1"+Ye+"$2-$3$1"+Md+(Yr(t,e+3)==108?"$3":"$2-$3"))+t;case 115:return~oy(t,"stretch")?D2(Ce(t,"stretch","fill-available"),e)+t:t}break;case 4949:if(Yr(t,e+1)!==115)break;case 6444:switch(Yr(t,ci(t)-3-(~oy(t,"!important")&&10))){case 107:return Ce(t,":",":"+Ye)+t;case 101:return Ce(t,/(.+:)([^;!]+)(;|!.+)?/,"$1"+Ye+(Yr(t,14)===45?"inline-":"")+"box$3$1"+Ye+"$2$3$1"+mr+"$2box$3")+t}break;case 5936:switch(Yr(t,e+11)){case 114:return Ye+t+mr+Ce(t,/[svh]\w+-[tblr]{2}/,"tb")+t;case 108:return Ye+t+mr+Ce(t,/[svh]\w+-[tblr]{2}/,"tb-rl")+t;case 45:return Ye+t+mr+Ce(t,/[svh]\w+-[tblr]{2}/,"lr")+t}return Ye+t+mr+t+t}return t}function Mo(t,e){for(var r="",n=Yg(t),i=0;i<n;i++)r+=e(t[i],i,t,e)||"";return r}function tR(t,e,r,n){switch(t.type){case F8:case zg:return t.return=t.return||t.value;case Y2:return"";case C2:return t.return=t.value+"{"+Mo(t.children,n)+"}";case Og:t.value=t.props.join(",")}return ci(r=Mo(t.children,n))?t.return=t.value+"{"+r+"}":""}function rR(t){var e=Yg(t);return function(r,n,i,a){for(var s="",l=0;l<e;l++)s+=t[l](r,n,i,a)||"";return s}}function nR(t){return function(e){e.root||(e=e.return)&&t(e)}}function iR(t,e,r,n){if(t.length>-1&&!t.return)switch(t.type){case zg:t.return=D2(t.value,t.length);break;case C2:return Mo([Yl(t,{value:Ce(t.value,"@","@"+Ye)})],n);case Og:if(t.length)return G8(t.props,function(i){switch(D8(i,/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":return Mo([Yl(t,{props:[Ce(i,/:(read-\w+)/,":"+Md+"$1")]})],n);case"::placeholder":return Mo([Yl(t,{props:[Ce(i,/:(plac\w+)/,":"+Ye+"input-$1")]}),Yl(t,{props:[Ce(i,/:(plac\w+)/,":"+Md+"$1")]}),Yl(t,{props:[Ce(i,/:(plac\w+)/,mr+"input-$1")]})],n)}return""})}}var aR=function(e,r,n){for(var i=0,a=0;i=a,a=vi(),i===38&&a===12&&(r[n]=1),!Wu(a);)nn();return oc(e,Kr)},sR=function(e,r){var n=-1,i=44;do switch(Wu(i)){case 0:i===38&&vi()===12&&(r[n]=1),e[n]+=aR(Kr-1,r,n);break;case 2:e[n]+=md(i);break;case 4:if(i===44){e[++n]=vi()===58?"&\f":"",r[n]=e[n].length;break}default:e[n]+=Rp(i)}while(i=nn());return e},oR=function(e,r){return J2(sR(E2(e),r))},OS=new WeakMap,lR=function(e){if(!(e.type!=="rule"||!e.parent||e.length<1)){for(var r=e.value,n=e.parent,i=e.column===n.column&&e.line===n.line;n.type!=="rule";)if(n=n.parent,!n)return;if(!(e.props.length===1&&r.charCodeAt(0)!==58&&!OS.get(n))&&!i){OS.set(e,!0);for(var a=[],s=oR(r,a),l=n.props,c=0,f=0;c<s.length;c++)for(var p=0;p<l.length;p++,f++)e.props[f]=a[c]?s[c].replace(/&\f/g,l[p]):l[p]+" "+s[c]}}},uR=function(e){if(e.type==="decl"){var r=e.value;r.charCodeAt(0)===108&&r.charCodeAt(2)===98&&(e.return="",e.value="")}},cR=[iR],fR=function(e){var r=e.key;if(r==="css"){var n=document.querySelectorAll("style[data-emotion]:not([data-s])");Array.prototype.forEach.call(n,function(k){var q=k.getAttribute("data-emotion");q.indexOf(" ")!==-1&&(document.head.appendChild(k),k.setAttribute("data-s",""))})}var i=e.stylisPlugins||cR,a={},s,l=[];s=e.container||document.head,Array.prototype.forEach.call(document.querySelectorAll('style[data-emotion^="'+r+' "]'),function(k){for(var q=k.getAttribute("data-emotion").split(" "),P=1;P<q.length;P++)a[q[P]]=!0;l.push(k)});var c,f=[lR,uR];{var p,h=[tR,nR(function(k){p.insert(k)})],m=rR(f.concat(i,h)),g=function(q){return Mo($8(q),m)};c=function(q,P,x,b){p=x,g(q?q+"{"+P.styles+"}":P.styles),b&&(y.inserted[P.name]=!0)}}var y={key:r,sheet:new C8({key:r,container:s,nonce:e.nonce,speedy:e.speedy,prepend:e.prepend,insertionPoint:e.insertionPoint}),nonce:e.nonce,inserted:a,registered:{},insert:c};return y.sheet.hydrate(l),y},G2={exports:{}},Ge={};/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Qt=typeof Symbol=="function"&&Symbol.for,Cg=Qt?Symbol.for("react.element"):60103,Fg=Qt?Symbol.for("react.portal"):60106,Np=Qt?Symbol.for("react.fragment"):60107,Wp=Qt?Symbol.for("react.strict_mode"):60108,Up=Qt?Symbol.for("react.profiler"):60114,Hp=Qt?Symbol.for("react.provider"):60109,Mp=Qt?Symbol.for("react.context"):60110,Ig=Qt?Symbol.for("react.async_mode"):60111,Op=Qt?Symbol.for("react.concurrent_mode"):60111,zp=Qt?Symbol.for("react.forward_ref"):60112,Yp=Qt?Symbol.for("react.suspense"):60113,dR=Qt?Symbol.for("react.suspense_list"):60120,Cp=Qt?Symbol.for("react.memo"):60115,Fp=Qt?Symbol.for("react.lazy"):60116,pR=Qt?Symbol.for("react.block"):60121,hR=Qt?Symbol.for("react.fundamental"):60117,mR=Qt?Symbol.for("react.responder"):60118,vR=Qt?Symbol.for("react.scope"):60119;function un(t){if(typeof t=="object"&&t!==null){var e=t.$$typeof;switch(e){case Cg:switch(t=t.type,t){case Ig:case Op:case Np:case Up:case Wp:case Yp:return t;default:switch(t=t&&t.$$typeof,t){case Mp:case zp:case Fp:case Cp:case Hp:return t;default:return e}}case Fg:return e}}}function K2(t){return un(t)===Op}Ge.AsyncMode=Ig;Ge.ConcurrentMode=Op;Ge.ContextConsumer=Mp;Ge.ContextProvider=Hp;Ge.Element=Cg;Ge.ForwardRef=zp;Ge.Fragment=Np;Ge.Lazy=Fp;Ge.Memo=Cp;Ge.Portal=Fg;Ge.Profiler=Up;Ge.StrictMode=Wp;Ge.Suspense=Yp;Ge.isAsyncMode=function(t){return K2(t)||un(t)===Ig};Ge.isConcurrentMode=K2;Ge.isContextConsumer=function(t){return un(t)===Mp};Ge.isContextProvider=function(t){return un(t)===Hp};Ge.isElement=function(t){return typeof t=="object"&&t!==null&&t.$$typeof===Cg};Ge.isForwardRef=function(t){return un(t)===zp};Ge.isFragment=function(t){return un(t)===Np};Ge.isLazy=function(t){return un(t)===Fp};Ge.isMemo=function(t){return un(t)===Cp};Ge.isPortal=function(t){return un(t)===Fg};Ge.isProfiler=function(t){return un(t)===Up};Ge.isStrictMode=function(t){return un(t)===Wp};Ge.isSuspense=function(t){return un(t)===Yp};Ge.isValidElementType=function(t){return typeof t=="string"||typeof t=="function"||t===Np||t===Op||t===Up||t===Wp||t===Yp||t===dR||typeof t=="object"&&t!==null&&(t.$$typeof===Fp||t.$$typeof===Cp||t.$$typeof===Hp||t.$$typeof===Mp||t.$$typeof===zp||t.$$typeof===hR||t.$$typeof===mR||t.$$typeof===vR||t.$$typeof===pR)};Ge.typeOf=un;G2.exports=Ge;var B2=G2.exports,yR={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},gR={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},Z2={};Z2[B2.ForwardRef]=yR;Z2[B2.Memo]=gR;var AR=!0;function SR(t,e,r){var n="";return r.split(" ").forEach(function(i){t[i]!==void 0?e.push(t[i]+";"):n+=i+" "}),n}var X2=function(e,r,n){var i=e.key+"-"+r.name;(n===!1||AR===!1)&&e.registered[i]===void 0&&(e.registered[i]=r.styles)},Q2=function(e,r,n){X2(e,r,n);var i=e.key+"-"+r.name;if(e.inserted[r.name]===void 0){var a=r;do e.insert(r===a?"."+i:"",a,e.sheet,!0),a=a.next;while(a!==void 0)}};function xR(t){for(var e=0,r,n=0,i=t.length;i>=4;++n,i-=4)r=t.charCodeAt(n)&255|(t.charCodeAt(++n)&255)<<8|(t.charCodeAt(++n)&255)<<16|(t.charCodeAt(++n)&255)<<24,r=(r&65535)*1540483477+((r>>>16)*59797<<16),r^=r>>>24,e=(r&65535)*1540483477+((r>>>16)*59797<<16)^(e&65535)*1540483477+((e>>>16)*59797<<16);switch(i){case 3:e^=(t.charCodeAt(n+2)&255)<<16;case 2:e^=(t.charCodeAt(n+1)&255)<<8;case 1:e^=t.charCodeAt(n)&255,e=(e&65535)*1540483477+((e>>>16)*59797<<16)}return e^=e>>>13,e=(e&65535)*1540483477+((e>>>16)*59797<<16),((e^e>>>15)>>>0).toString(36)}var PR={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},wR=/[A-Z]|^ms/g,kR=/_EMO_([^_]+?)_([^]*?)_EMO_/g,_2=function(e){return e.charCodeAt(1)===45},zS=function(e){return e!=null&&typeof e!="boolean"},$m=z2(function(t){return _2(t)?t:t.replace(wR,"-$&").toLowerCase()}),YS=function(e,r){switch(e){case"animation":case"animationName":if(typeof r=="string")return r.replace(kR,function(n,i,a){return fi={name:i,styles:a,next:fi},i})}return PR[e]!==1&&!_2(e)&&typeof r=="number"&&r!==0?r+"px":r};function Uu(t,e,r){if(r==null)return"";if(r.__emotion_styles!==void 0)return r;switch(typeof r){case"boolean":return"";case"object":{if(r.anim===1)return fi={name:r.name,styles:r.styles,next:fi},r.name;if(r.styles!==void 0){var n=r.next;if(n!==void 0)for(;n!==void 0;)fi={name:n.name,styles:n.styles,next:fi},n=n.next;var i=r.styles+";";return i}return bR(t,e,r)}case"function":{if(t!==void 0){var a=fi,s=r(t);return fi=a,Uu(t,e,s)}break}}if(e==null)return r;var l=e[r];return l!==void 0?l:r}function bR(t,e,r){var n="";if(Array.isArray(r))for(var i=0;i<r.length;i++)n+=Uu(t,e,r[i])+";";else for(var a in r){var s=r[a];if(typeof s!="object")e!=null&&e[s]!==void 0?n+=a+"{"+e[s]+"}":zS(s)&&(n+=$m(a)+":"+YS(a,s)+";");else if(Array.isArray(s)&&typeof s[0]=="string"&&(e==null||e[s[0]]===void 0))for(var l=0;l<s.length;l++)zS(s[l])&&(n+=$m(a)+":"+YS(a,s[l])+";");else{var c=Uu(t,e,s);switch(a){case"animation":case"animationName":{n+=$m(a)+":"+c+";";break}default:n+=a+"{"+c+"}"}}}return n}var CS=/label:\s*([^\s;\n{]+)\s*(;|$)/g,fi,Eg=function(e,r,n){if(e.length===1&&typeof e[0]=="object"&&e[0]!==null&&e[0].styles!==void 0)return e[0];var i=!0,a="";fi=void 0;var s=e[0];s==null||s.raw===void 0?(i=!1,a+=Uu(n,r,s)):a+=s[0];for(var l=1;l<e.length;l++)a+=Uu(n,r,e[l]),i&&(a+=s[l]);CS.lastIndex=0;for(var c="",f;(f=CS.exec(a))!==null;)c+="-"+f[1];var p=xR(a)+c;return{name:p,styles:a,next:fi}},$2=Y.exports.createContext(typeof HTMLElement!="undefined"?fR({key:"css"}):null);$2.Provider;var ek=function(e){return Y.exports.forwardRef(function(r,n){var i=Y.exports.useContext($2);return e(r,i,n)})},Jg=Y.exports.createContext({});Ns["useInsertionEffect"]&&Ns["useInsertionEffect"];var FS=Ns["useInsertionEffect"]?Ns["useInsertionEffect"]:Y.exports.useLayoutEffect,qR=ek(function(t,e){var r=t.styles,n=Eg([r],void 0,Y.exports.useContext(Jg)),i=Y.exports.useRef();return FS(function(){var a=e.key+"-global",s=new e.sheet.constructor({key:a,nonce:e.sheet.nonce,container:e.sheet.container,speedy:e.sheet.isSpeedy}),l=!1,c=document.querySelector('style[data-emotion="'+a+" "+n.name+'"]');return e.sheet.tags.length&&(s.before=e.sheet.tags[0]),c!==null&&(l=!0,c.setAttribute("data-emotion",a),s.hydrate([c])),i.current=[s,l],function(){s.flush()}},[e]),FS(function(){var a=i.current,s=a[0],l=a[1];if(l){a[1]=!1;return}if(n.next!==void 0&&Q2(e,n.next,!0),s.tags.length){var c=s.tags[s.tags.length-1].nextElementSibling;s.before=c,s.flush()}e.insert("",n,s,!1)},[e,n.name]),null});function Dg(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return Eg(e)}var lc=function(){var e=Dg.apply(void 0,arguments),r="animation-"+e.name;return{name:r,styles:"@keyframes "+r+"{"+e.styles+"}",anim:1,toString:function(){return"_EMO_"+this.name+"_"+this.styles+"_EMO_"}}},TR=O8,jR=function(e){return e!=="theme"},IS=function(e){return typeof e=="string"&&e.charCodeAt(0)>96?TR:jR},ES=function(e,r,n){var i;if(r){var a=r.shouldForwardProp;i=e.__emotion_forwardProp&&a?function(s){return e.__emotion_forwardProp(s)&&a(s)}:a}return typeof i!="function"&&n&&(i=e.__emotion_forwardProp),i},RR=Ns["useInsertionEffect"]?Ns["useInsertionEffect"]:function(e){e()};function VR(t){RR(t)}var LR=function(e){var r=e.cache,n=e.serialized,i=e.isStringTag;return X2(r,n,i),VR(function(){return Q2(r,n,i)}),null},NR=function t(e,r){var n=e.__emotion_real===e,i=n&&e.__emotion_base||e,a,s;r!==void 0&&(a=r.label,s=r.target);var l=ES(e,r,n),c=l||IS(i),f=!c("as");return function(){var p=arguments,h=n&&e.__emotion_styles!==void 0?e.__emotion_styles.slice(0):[];if(a!==void 0&&h.push("label:"+a+";"),p[0]==null||p[0].raw===void 0)h.push.apply(h,p);else{h.push(p[0][0]);for(var m=p.length,g=1;g<m;g++)h.push(p[g],p[0][g])}var y=ek(function(k,q,P){var x=f&&k.as||i,b="",j=[],R=k;if(k.theme==null){R={};for(var V in k)R[V]=k[V];R.theme=Y.exports.useContext(Jg)}typeof k.className=="string"?b=SR(q.registered,j,k.className):k.className!=null&&(b=k.className+" ");var N=Eg(h.concat(j),q.registered,R);b+=q.key+"-"+N.name,s!==void 0&&(b+=" "+s);var H=f&&l===void 0?IS(x):c,O={};for(var M in k)f&&M==="as"||H(M)&&(O[M]=k[M]);return O.className=b,O.ref=P,Y.exports.createElement(Y.exports.Fragment,null,Y.exports.createElement(LR,{cache:q,serialized:N,isStringTag:typeof x=="string"}),Y.exports.createElement(x,O))});return y.displayName=a!==void 0?a:"Styled("+(typeof i=="string"?i:i.displayName||i.name||"Component")+")",y.defaultProps=e.defaultProps,y.__emotion_real=y,y.__emotion_base=i,y.__emotion_styles=h,y.__emotion_forwardProp=l,Object.defineProperty(y,"toString",{value:function(){return"."+s}}),y.withComponent=function(k,q){return t(k,Q({},r,q,{shouldForwardProp:ES(y,q,!0)})).apply(void 0,h)},y}},WR=["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"],uy=NR.bind();WR.forEach(function(t){uy[t]=uy(t)});var UR=uy,Ip={exports:{}},Ep={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var HR=Y.exports,MR=Symbol.for("react.element"),OR=Symbol.for("react.fragment"),zR=Object.prototype.hasOwnProperty,YR=HR.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,CR={key:!0,ref:!0,__self:!0,__source:!0};function tk(t,e,r){var n,i={},a=null,s=null;r!==void 0&&(a=""+r),e.key!==void 0&&(a=""+e.key),e.ref!==void 0&&(s=e.ref);for(n in e)zR.call(e,n)&&!CR.hasOwnProperty(n)&&(i[n]=e[n]);if(t&&t.defaultProps)for(n in e=t.defaultProps,e)i[n]===void 0&&(i[n]=e[n]);return{$$typeof:MR,type:t,key:a,ref:s,props:i,_owner:YR.current}}Ep.Fragment=OR;Ep.jsx=tk;Ep.jsxs=tk;Ip.exports=Ep;const $=Ip.exports.jsx,Fe=Ip.exports.jsxs,cy=Ip.exports.Fragment;var FR=Object.freeze(Object.defineProperty({__proto__:null,jsx:$,jsxs:Fe,Fragment:cy},Symbol.toStringTag,{value:"Module"}));function IR(t){return t==null||Object.keys(t).length===0}function ER(t){const{styles:e,defaultTheme:r={}}=t;return $(qR,{styles:typeof e=="function"?i=>e(IR(i)?r:i):e})}/** @license MUI v5.8.0
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */function rk(t,e){return UR(t,e)}function ru(t){return t!==null&&typeof t=="object"&&t.constructor===Object}function yi(t,e,r={clone:!0}){const n=r.clone?Q({},t):t;return ru(t)&&ru(e)&&Object.keys(e).forEach(i=>{i!=="__proto__"&&(ru(e[i])&&i in t&&ru(t[i])?n[i]=yi(t[i],e[i],r):n[i]=e[i])}),n}function Hu(t){let e="https://mui.com/production-error/?code="+t;for(let r=1;r<arguments.length;r+=1)e+="&args[]="+encodeURIComponent(arguments[r]);return"Minified MUI error #"+t+"; visit "+e+" for the full message."}var nt={};/** @license React v17.0.2
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Jp=60103,Dp=60106,uc=60107,cc=60108,fc=60114,dc=60109,pc=60110,hc=60112,mc=60113,Gg=60120,vc=60115,yc=60116,nk=60121,ik=60122,ak=60117,sk=60129,ok=60131;if(typeof Symbol=="function"&&Symbol.for){var rr=Symbol.for;Jp=rr("react.element"),Dp=rr("react.portal"),uc=rr("react.fragment"),cc=rr("react.strict_mode"),fc=rr("react.profiler"),dc=rr("react.provider"),pc=rr("react.context"),hc=rr("react.forward_ref"),mc=rr("react.suspense"),Gg=rr("react.suspense_list"),vc=rr("react.memo"),yc=rr("react.lazy"),nk=rr("react.block"),ik=rr("react.server.block"),ak=rr("react.fundamental"),sk=rr("react.debug_trace_mode"),ok=rr("react.legacy_hidden")}function Kn(t){if(typeof t=="object"&&t!==null){var e=t.$$typeof;switch(e){case Jp:switch(t=t.type,t){case uc:case fc:case cc:case mc:case Gg:return t;default:switch(t=t&&t.$$typeof,t){case pc:case hc:case yc:case vc:case dc:return t;default:return e}}case Dp:return e}}}var JR=dc,DR=Jp,GR=hc,KR=uc,BR=yc,ZR=vc,XR=Dp,QR=fc,_R=cc,$R=mc;nt.ContextConsumer=pc;nt.ContextProvider=JR;nt.Element=DR;nt.ForwardRef=GR;nt.Fragment=KR;nt.Lazy=BR;nt.Memo=ZR;nt.Portal=XR;nt.Profiler=QR;nt.StrictMode=_R;nt.Suspense=$R;nt.isAsyncMode=function(){return!1};nt.isConcurrentMode=function(){return!1};nt.isContextConsumer=function(t){return Kn(t)===pc};nt.isContextProvider=function(t){return Kn(t)===dc};nt.isElement=function(t){return typeof t=="object"&&t!==null&&t.$$typeof===Jp};nt.isForwardRef=function(t){return Kn(t)===hc};nt.isFragment=function(t){return Kn(t)===uc};nt.isLazy=function(t){return Kn(t)===yc};nt.isMemo=function(t){return Kn(t)===vc};nt.isPortal=function(t){return Kn(t)===Dp};nt.isProfiler=function(t){return Kn(t)===fc};nt.isStrictMode=function(t){return Kn(t)===cc};nt.isSuspense=function(t){return Kn(t)===mc};nt.isValidElementType=function(t){return typeof t=="string"||typeof t=="function"||t===uc||t===fc||t===sk||t===cc||t===mc||t===Gg||t===ok||typeof t=="object"&&t!==null&&(t.$$typeof===yc||t.$$typeof===vc||t.$$typeof===dc||t.$$typeof===pc||t.$$typeof===hc||t.$$typeof===ak||t.$$typeof===nk||t[0]===ik)};nt.typeOf=Kn;function Se(t){if(typeof t!="string")throw new Error(Hu(7));return t.charAt(0).toUpperCase()+t.slice(1)}function fy(...t){return t.reduce((e,r)=>r==null?e:function(...i){e.apply(this,i),r.apply(this,i)},()=>{})}function eV(t,e=166){let r;function n(...i){const a=()=>{t.apply(this,i)};clearTimeout(r),r=setTimeout(a,e)}return n.clear=()=>{clearTimeout(r)},n}function tV(t,e){return()=>null}function lk(t,e){return Y.exports.isValidElement(t)&&e.indexOf(t.type.muiName)!==-1}function Fa(t){return t&&t.ownerDocument||document}function Gp(t){return Fa(t).defaultView||window}function rV(t,e){return()=>null}function Mu(t,e){typeof t=="function"?t(e):t&&(t.current=e)}const nV=typeof window!="undefined"?Y.exports.useLayoutEffect:Y.exports.useEffect;var Od=nV;let JS=0;function iV(t){const[e,r]=Y.exports.useState(t),n=t||e;return Y.exports.useEffect(()=>{e==null&&(JS+=1,r(`mui-${JS}`))},[e]),n}const DS=Ns["useId"];function uk(t){if(DS!==void 0){const e=DS();return t!=null?t:e}return iV(t)}function aV(t,e,r,n,i){return null}function sV({controlled:t,default:e,name:r,state:n="value"}){const{current:i}=Y.exports.useRef(t!==void 0),[a,s]=Y.exports.useState(e),l=i?t:a,c=Y.exports.useCallback(f=>{i||s(f)},[]);return[l,c]}function ws(t){const e=Y.exports.useRef(t);return Od(()=>{e.current=t}),Y.exports.useCallback((...r)=>(0,e.current)(...r),[])}function gi(t,e){return Y.exports.useMemo(()=>t==null&&e==null?null:r=>{Mu(t,r),Mu(e,r)},[t,e])}let Kp=!0,dy=!1,GS;const oV={text:!0,search:!0,url:!0,tel:!0,email:!0,password:!0,number:!0,date:!0,month:!0,week:!0,time:!0,datetime:!0,"datetime-local":!0};function lV(t){const{type:e,tagName:r}=t;return!!(r==="INPUT"&&oV[e]&&!t.readOnly||r==="TEXTAREA"&&!t.readOnly||t.isContentEditable)}function uV(t){t.metaKey||t.altKey||t.ctrlKey||(Kp=!0)}function ev(){Kp=!1}function cV(){this.visibilityState==="hidden"&&dy&&(Kp=!0)}function fV(t){t.addEventListener("keydown",uV,!0),t.addEventListener("mousedown",ev,!0),t.addEventListener("pointerdown",ev,!0),t.addEventListener("touchstart",ev,!0),t.addEventListener("visibilitychange",cV,!0)}function dV(t){const{target:e}=t;try{return e.matches(":focus-visible")}catch{}return Kp||lV(e)}function Kg(){const t=Y.exports.useCallback(i=>{i!=null&&fV(i.ownerDocument)},[]),e=Y.exports.useRef(!1);function r(){return e.current?(dy=!0,window.clearTimeout(GS),GS=window.setTimeout(()=>{dy=!1},100),e.current=!1,!0):!1}function n(i){return dV(i)?(e.current=!0,!0):!1}return{isFocusVisibleRef:e,onFocus:n,onBlur:r,ref:t}}function pV(t){const e=t.documentElement.clientWidth;return Math.abs(window.innerWidth-e)}function ck(t,e){const r=Q({},e);return Object.keys(t).forEach(n=>{r[n]===void 0&&(r[n]=t[n])}),r}function zt(t,e,r){const n={};return Object.keys(t).forEach(i=>{n[i]=t[i].reduce((a,s)=>(s&&(r&&r[s]&&a.push(r[s]),a.push(e(s))),a),[]).join(" ")}),n}const KS=t=>t,hV=()=>{let t=KS;return{configure(e){t=e},generate(e){return t(e)},reset(){t=KS}}},mV=hV();var Bg=mV;const vV={active:"Mui-active",checked:"Mui-checked",completed:"Mui-completed",disabled:"Mui-disabled",error:"Mui-error",expanded:"Mui-expanded",focused:"Mui-focused",focusVisible:"Mui-focusVisible",required:"Mui-required",selected:"Mui-selected"};function Wt(t,e){return vV[e]||`${Bg.generate(t)}-${e}`}function Yt(t,e){const r={};return e.forEach(n=>{r[n]=Wt(t,n)}),r}function hu(t,e){return e?yi(t,e,{clone:!1}):t}const Zg={xs:0,sm:600,md:900,lg:1200,xl:1536},BS={keys:["xs","sm","md","lg","xl"],up:t=>`@media (min-width:${Zg[t]}px)`};function Pi(t,e,r){const n=t.theme||{};if(Array.isArray(e)){const a=n.breakpoints||BS;return e.reduce((s,l,c)=>(s[a.up(a.keys[c])]=r(e[c]),s),{})}if(typeof e=="object"){const a=n.breakpoints||BS;return Object.keys(e).reduce((s,l)=>{if(Object.keys(a.values||Zg).indexOf(l)!==-1){const c=a.up(l);s[c]=r(e[l],l)}else{const c=l;s[c]=e[c]}return s},{})}return r(e)}function yV(t={}){var e;return(t==null||(e=t.keys)==null?void 0:e.reduce((n,i)=>{const a=t.up(i);return n[a]={},n},{}))||{}}function gV(t,e){return t.reduce((r,n)=>{const i=r[n];return(!i||Object.keys(i).length===0)&&delete r[n],r},e)}function AV(t,e){if(typeof t!="object")return{};const r={},n=Object.keys(e);return Array.isArray(t)?n.forEach((i,a)=>{a<t.length&&(r[i]=!0)}):n.forEach(i=>{t[i]!=null&&(r[i]=!0)}),r}function tv({values:t,breakpoints:e,base:r}){const n=r||AV(t,e),i=Object.keys(n);if(i.length===0)return t;let a;return i.reduce((s,l,c)=>(Array.isArray(t)?(s[l]=t[c]!=null?t[c]:t[a],a=c):(s[l]=t[l]!=null?t[l]:t[a]||t,a=l),s),{})}function Bp(t,e,r=!0){if(!e||typeof e!="string")return null;if(t&&t.vars&&r){const n=`vars.${e}`.split(".").reduce((i,a)=>i&&i[a]?i[a]:null,t);if(n!=null)return n}return e.split(".").reduce((n,i)=>n&&n[i]!=null?n[i]:null,t)}function ZS(t,e,r,n=r){let i;return typeof t=="function"?i=t(r):Array.isArray(t)?i=t[r]||n:i=Bp(t,r)||n,e&&(i=e(i)),i}function ge(t){const{prop:e,cssProperty:r=t.prop,themeKey:n,transform:i}=t,a=s=>{if(s[e]==null)return null;const l=s[e],c=s.theme,f=Bp(c,n)||{};return Pi(s,l,h=>{let m=ZS(f,i,h);return h===m&&typeof h=="string"&&(m=ZS(f,i,`${e}${h==="default"?"":Se(h)}`,h)),r===!1?m:{[r]:m}})};return a.propTypes={},a.filterProps=[e],a}function Xa(...t){const e=t.reduce((n,i)=>(i.filterProps.forEach(a=>{n[a]=i}),n),{}),r=n=>Object.keys(n).reduce((i,a)=>e[a]?hu(i,e[a](n)):i,{});return r.propTypes={},r.filterProps=t.reduce((n,i)=>n.concat(i.filterProps),[]),r}function SV(t){const e={};return r=>(e[r]===void 0&&(e[r]=t(r)),e[r])}const xV={m:"margin",p:"padding"},PV={t:"Top",r:"Right",b:"Bottom",l:"Left",x:["Left","Right"],y:["Top","Bottom"]},XS={marginX:"mx",marginY:"my",paddingX:"px",paddingY:"py"},wV=SV(t=>{if(t.length>2)if(XS[t])t=XS[t];else return[t];const[e,r]=t.split(""),n=xV[e],i=PV[r]||"";return Array.isArray(i)?i.map(a=>n+a):[n+i]}),kV=["m","mt","mr","mb","ml","mx","my","margin","marginTop","marginRight","marginBottom","marginLeft","marginX","marginY","marginInline","marginInlineStart","marginInlineEnd","marginBlock","marginBlockStart","marginBlockEnd"],bV=["p","pt","pr","pb","pl","px","py","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingX","paddingY","paddingInline","paddingInlineStart","paddingInlineEnd","paddingBlock","paddingBlockStart","paddingBlockEnd"],fk=[...kV,...bV];function gc(t,e,r,n){var i;const a=(i=Bp(t,e,!1))!=null?i:r;return typeof a=="number"?s=>typeof s=="string"?s:a*s:Array.isArray(a)?s=>typeof s=="string"?s:a[s]:typeof a=="function"?a:()=>{}}function Xg(t){return gc(t,"spacing",8)}function ol(t,e){if(typeof e=="string"||e==null)return e;const r=Math.abs(e),n=t(r);return e>=0?n:typeof n=="number"?-n:`-${n}`}function qV(t,e){return r=>t.reduce((n,i)=>(n[i]=ol(e,r),n),{})}function TV(t,e,r,n){if(e.indexOf(r)===-1)return null;const i=wV(r),a=qV(i,n),s=t[r];return Pi(t,s,a)}function jV(t,e){const r=Xg(t.theme);return Object.keys(t).map(n=>TV(t,e,n,r)).reduce(hu,{})}function Zp(t){return jV(t,fk)}Zp.propTypes={};Zp.filterProps=fk;function Ac(t){return typeof t!="number"?t:`${t}px solid`}const RV=ge({prop:"border",themeKey:"borders",transform:Ac}),VV=ge({prop:"borderTop",themeKey:"borders",transform:Ac}),LV=ge({prop:"borderRight",themeKey:"borders",transform:Ac}),NV=ge({prop:"borderBottom",themeKey:"borders",transform:Ac}),WV=ge({prop:"borderLeft",themeKey:"borders",transform:Ac}),UV=ge({prop:"borderColor",themeKey:"palette"}),HV=ge({prop:"borderTopColor",themeKey:"palette"}),MV=ge({prop:"borderRightColor",themeKey:"palette"}),OV=ge({prop:"borderBottomColor",themeKey:"palette"}),zV=ge({prop:"borderLeftColor",themeKey:"palette"}),Qg=t=>{if(t.borderRadius!==void 0&&t.borderRadius!==null){const e=gc(t.theme,"shape.borderRadius",4),r=n=>({borderRadius:ol(e,n)});return Pi(t,t.borderRadius,r)}return null};Qg.propTypes={};Qg.filterProps=["borderRadius"];const YV=Xa(RV,VV,LV,NV,WV,UV,HV,MV,OV,zV,Qg);var dk=YV;const CV=ge({prop:"displayPrint",cssProperty:!1,transform:t=>({"@media print":{display:t}})}),FV=ge({prop:"display"}),IV=ge({prop:"overflow"}),EV=ge({prop:"textOverflow"}),JV=ge({prop:"visibility"}),DV=ge({prop:"whiteSpace"});var pk=Xa(CV,FV,IV,EV,JV,DV);const GV=ge({prop:"flexBasis"}),KV=ge({prop:"flexDirection"}),BV=ge({prop:"flexWrap"}),ZV=ge({prop:"justifyContent"}),XV=ge({prop:"alignItems"}),QV=ge({prop:"alignContent"}),_V=ge({prop:"order"}),$V=ge({prop:"flex"}),eL=ge({prop:"flexGrow"}),tL=ge({prop:"flexShrink"}),rL=ge({prop:"alignSelf"}),nL=ge({prop:"justifyItems"}),iL=ge({prop:"justifySelf"}),aL=Xa(GV,KV,BV,ZV,XV,QV,_V,$V,eL,tL,rL,nL,iL);var hk=aL;const _g=t=>{if(t.gap!==void 0&&t.gap!==null){const e=gc(t.theme,"spacing",8),r=n=>({gap:ol(e,n)});return Pi(t,t.gap,r)}return null};_g.propTypes={};_g.filterProps=["gap"];const $g=t=>{if(t.columnGap!==void 0&&t.columnGap!==null){const e=gc(t.theme,"spacing",8),r=n=>({columnGap:ol(e,n)});return Pi(t,t.columnGap,r)}return null};$g.propTypes={};$g.filterProps=["columnGap"];const e0=t=>{if(t.rowGap!==void 0&&t.rowGap!==null){const e=gc(t.theme,"spacing",8),r=n=>({rowGap:ol(e,n)});return Pi(t,t.rowGap,r)}return null};e0.propTypes={};e0.filterProps=["rowGap"];const sL=ge({prop:"gridColumn"}),oL=ge({prop:"gridRow"}),lL=ge({prop:"gridAutoFlow"}),uL=ge({prop:"gridAutoColumns"}),cL=ge({prop:"gridAutoRows"}),fL=ge({prop:"gridTemplateColumns"}),dL=ge({prop:"gridTemplateRows"}),pL=ge({prop:"gridTemplateAreas"}),hL=ge({prop:"gridArea"}),mL=Xa(_g,$g,e0,sL,oL,lL,uL,cL,fL,dL,pL,hL);var mk=mL;const vL=ge({prop:"color",themeKey:"palette"}),yL=ge({prop:"bgcolor",cssProperty:"backgroundColor",themeKey:"palette"}),gL=ge({prop:"backgroundColor",themeKey:"palette"}),AL=Xa(vL,yL,gL);var vk=AL;const SL=ge({prop:"position"}),xL=ge({prop:"zIndex",themeKey:"zIndex"}),PL=ge({prop:"top"}),wL=ge({prop:"right"}),kL=ge({prop:"bottom"}),bL=ge({prop:"left"});var yk=Xa(SL,xL,PL,wL,kL,bL);const qL=ge({prop:"boxShadow",themeKey:"shadows"});var gk=qL;function Qa(t){return t<=1&&t!==0?`${t*100}%`:t}const TL=ge({prop:"width",transform:Qa}),Ak=t=>{if(t.maxWidth!==void 0&&t.maxWidth!==null){const e=r=>{var n,i,a;return{maxWidth:((n=t.theme)==null||(i=n.breakpoints)==null||(a=i.values)==null?void 0:a[r])||Zg[r]||Qa(r)}};return Pi(t,t.maxWidth,e)}return null};Ak.filterProps=["maxWidth"];const jL=ge({prop:"minWidth",transform:Qa}),RL=ge({prop:"height",transform:Qa}),VL=ge({prop:"maxHeight",transform:Qa}),LL=ge({prop:"minHeight",transform:Qa});ge({prop:"size",cssProperty:"width",transform:Qa});ge({prop:"size",cssProperty:"height",transform:Qa});const NL=ge({prop:"boxSizing"}),WL=Xa(TL,Ak,jL,RL,VL,LL,NL);var Sk=WL;const UL=ge({prop:"fontFamily",themeKey:"typography"}),HL=ge({prop:"fontSize",themeKey:"typography"}),ML=ge({prop:"fontStyle",themeKey:"typography"}),OL=ge({prop:"fontWeight",themeKey:"typography"}),zL=ge({prop:"letterSpacing"}),YL=ge({prop:"textTransform"}),CL=ge({prop:"lineHeight"}),FL=ge({prop:"textAlign"}),IL=ge({prop:"typography",cssProperty:!1,themeKey:"typography"}),EL=Xa(IL,UL,HL,ML,OL,zL,CL,FL,YL);var xk=EL;const QS={borders:dk.filterProps,display:pk.filterProps,flexbox:hk.filterProps,grid:mk.filterProps,positions:yk.filterProps,palette:vk.filterProps,shadows:gk.filterProps,sizing:Sk.filterProps,spacing:Zp.filterProps,typography:xk.filterProps},Pk={borders:dk,display:pk,flexbox:hk,grid:mk,positions:yk,palette:vk,shadows:gk,sizing:Sk,spacing:Zp,typography:xk},JL=Object.keys(QS).reduce((t,e)=>(QS[e].forEach(r=>{t[r]=Pk[e]}),t),{});function DL(...t){const e=t.reduce((n,i)=>n.concat(Object.keys(i)),[]),r=new Set(e);return t.every(n=>r.size===Object.keys(n).length)}function GL(t,e){return typeof t=="function"?t(e):t}function KL(t=Pk){const e=Object.keys(t).reduce((i,a)=>(t[a].filterProps.forEach(s=>{i[s]=t[a]}),i),{});function r(i,a,s){const l={[i]:a,theme:s},c=e[i];return c?c(l):{[i]:a}}function n(i){const{sx:a,theme:s={}}=i||{};if(!a)return null;function l(c){let f=c;if(typeof c=="function")f=c(s);else if(typeof c!="object")return c;if(!f)return null;const p=yV(s.breakpoints),h=Object.keys(p);let m=p;return Object.keys(f).forEach(g=>{const y=GL(f[g],s);if(y!=null)if(typeof y=="object")if(e[g])m=hu(m,r(g,y,s));else{const k=Pi({theme:s},y,q=>({[g]:q}));DL(k,y)?m[g]=n({sx:y,theme:s}):m=hu(m,k)}else m=hu(m,r(g,y,s))}),gV(h,m)}return Array.isArray(a)?a.map(l):l(a)}return n}const wk=KL();wk.filterProps=["sx"];var kk=wk;const BL=["sx"],ZL=t=>{const e={systemProps:{},otherProps:{}};return Object.keys(t).forEach(r=>{JL[r]?e.systemProps[r]=t[r]:e.otherProps[r]=t[r]}),e};function t0(t){const{sx:e}=t,r=Le(t,BL),{systemProps:n,otherProps:i}=ZL(r);let a;return Array.isArray(e)?a=[n,...e]:typeof e=="function"?a=(...s)=>{const l=e(...s);return ru(l)?Q({},n,l):n}:a=Q({},n,e),Q({},i,{sx:a})}function bk(t){var e,r,n="";if(typeof t=="string"||typeof t=="number")n+=t;else if(typeof t=="object")if(Array.isArray(t))for(e=0;e<t.length;e++)t[e]&&(r=bk(t[e]))&&(n&&(n+=" "),n+=r);else for(e in t)t[e]&&(n&&(n+=" "),n+=e);return n}function We(){for(var t=0,e,r,n="";t<arguments.length;)(e=arguments[t++])&&(r=bk(e))&&(n&&(n+=" "),n+=r);return n}const XL=["values","unit","step"],QL=t=>{const e=Object.keys(t).map(r=>({key:r,val:t[r]}))||[];return e.sort((r,n)=>r.val-n.val),e.reduce((r,n)=>Q({},r,{[n.key]:n.val}),{})};function _L(t){const{values:e={xs:0,sm:600,md:900,lg:1200,xl:1536},unit:r="px",step:n=5}=t,i=Le(t,XL),a=QL(e),s=Object.keys(a);function l(m){return`@media (min-width:${typeof e[m]=="number"?e[m]:m}${r})`}function c(m){return`@media (max-width:${(typeof e[m]=="number"?e[m]:m)-n/100}${r})`}function f(m,g){const y=s.indexOf(g);return`@media (min-width:${typeof e[m]=="number"?e[m]:m}${r}) and (max-width:${(y!==-1&&typeof e[s[y]]=="number"?e[s[y]]:g)-n/100}${r})`}function p(m){return s.indexOf(m)+1<s.length?f(m,s[s.indexOf(m)+1]):l(m)}function h(m){const g=s.indexOf(m);return g===0?l(s[1]):g===s.length-1?c(s[g]):f(m,s[s.indexOf(m)+1]).replace("@media","@media not all and")}return Q({keys:s,values:a,up:l,down:c,between:f,only:p,not:h,unit:r},i)}const $L={borderRadius:4};var eN=$L;function tN(t=8){if(t.mui)return t;const e=Xg({spacing:t}),r=(...n)=>(n.length===0?[1]:n).map(a=>{const s=e(a);return typeof s=="number"?`${s}px`:s}).join(" ");return r.mui=!0,r}const rN=["breakpoints","palette","spacing","shape"];function Xp(t={},...e){const{breakpoints:r={},palette:n={},spacing:i,shape:a={}}=t,s=Le(t,rN),l=_L(r),c=tN(i);let f=yi({breakpoints:l,direction:"ltr",components:{},palette:Q({mode:"light"},n),spacing:c,shape:Q({},eN,a)},s);return f=e.reduce((p,h)=>yi(p,h),f),f}const nN=Y.exports.createContext(null);var qk=nN;function Tk(){return Y.exports.useContext(qk)}const iN=typeof Symbol=="function"&&Symbol.for;var aN=iN?Symbol.for("mui.nested"):"__THEME_NESTED__";function sN(t,e){return typeof e=="function"?e(t):Q({},t,e)}function oN(t){const{children:e,theme:r}=t,n=Tk(),i=Y.exports.useMemo(()=>{const a=n===null?r:sN(n,r);return a!=null&&(a[aN]=n!==null),a},[r,n]);return $(qk.Provider,{value:i,children:e})}function lN(t){return Object.keys(t).length===0}function uN(t=null){const e=Tk();return!e||lN(e)?t:e}const cN=Xp();function Qp(t=cN){return uN(t)}const fN=["className","component"];function dN(t={}){const{defaultTheme:e,defaultClassName:r="MuiBox-root",generateClassName:n,styleFunctionSx:i=kk}=t,a=rk("div")(i);return Y.exports.forwardRef(function(c,f){const p=Qp(e),h=t0(c),{className:m,component:g="div"}=h,y=Le(h,fN);return $(a,Q({as:g,ref:f,className:We(m,n?n(r):r),theme:p},y))})}const pN=["variant"];function _S(t){return t.length===0}function jk(t){const{variant:e}=t,r=Le(t,pN);let n=e||"";return Object.keys(r).sort().forEach(i=>{i==="color"?n+=_S(n)?t[i]:Se(t[i]):n+=`${_S(n)?i:Se(i)}${Se(t[i].toString())}`}),n}const hN=["name","slot","skipVariantsResolver","skipSx","overridesResolver"],mN=["theme"],vN=["theme"];function Cl(t){return Object.keys(t).length===0}const yN=(t,e)=>e.components&&e.components[t]&&e.components[t].styleOverrides?e.components[t].styleOverrides:null,gN=(t,e)=>{let r=[];e&&e.components&&e.components[t]&&e.components[t].variants&&(r=e.components[t].variants);const n={};return r.forEach(i=>{const a=jk(i.props);n[a]=i.style}),n},AN=(t,e,r,n)=>{var i,a;const{ownerState:s={}}=t,l=[],c=r==null||(i=r.components)==null||(a=i[n])==null?void 0:a.variants;return c&&c.forEach(f=>{let p=!0;Object.keys(f.props).forEach(h=>{s[h]!==f.props[h]&&t[h]!==f.props[h]&&(p=!1)}),p&&l.push(e[jk(f.props)])}),l};function yd(t){return t!=="ownerState"&&t!=="theme"&&t!=="sx"&&t!=="as"}const SN=Xp();function Rk(t={}){const{defaultTheme:e=SN,rootShouldForwardProp:r=yd,slotShouldForwardProp:n=yd,styleFunctionSx:i=kk}=t;return(a,s={})=>{const{name:l,slot:c,skipVariantsResolver:f,skipSx:p,overridesResolver:h}=s,m=Le(s,hN),g=f!==void 0?f:c&&c!=="Root"||!1,y=p||!1;let k,q=yd;c==="Root"?q=r:c&&(q=n);const P=rk(a,Q({shouldForwardProp:q,label:k},m)),x=(b,...j)=>{const R=j?j.map(O=>typeof O=="function"&&O.__emotion_real!==O?M=>{let{theme:F}=M,J=Le(M,mN);return O(Q({theme:Cl(F)?e:F},J))}:O):[];let V=b;l&&h&&R.push(O=>{const M=Cl(O.theme)?e:O.theme,F=yN(l,M);if(F){const J={};return Object.entries(F).forEach(([X,re])=>{J[X]=typeof re=="function"?re(Q({},O,{theme:M})):re}),h(O,J)}return null}),l&&!g&&R.push(O=>{const M=Cl(O.theme)?e:O.theme;return AN(O,gN(l,M),M,l)}),y||R.push(O=>{const M=Cl(O.theme)?e:O.theme;return i(Q({},O,{theme:M}))});const N=R.length-j.length;if(Array.isArray(b)&&N>0){const O=new Array(N).fill("");V=[...b,...O],V.raw=[...b.raw,...O]}else typeof b=="function"&&b.__emotion_real!==b&&(V=O=>{let{theme:M}=O,F=Le(O,vN);return b(Q({theme:Cl(M)?e:M},F))});return P(V,...R)};return P.withConfig&&(x.withConfig=P.withConfig),x}}const xN=Rk();var PN=xN;function wN(t){const{theme:e,name:r,props:n}=t;return!e||!e.components||!e.components[r]||!e.components[r].defaultProps?n:ck(e.components[r].defaultProps,n)}function Vk({props:t,name:e,defaultTheme:r}){const n=Qp(r);return wN({theme:n,name:e,props:t})}function r0(t,e=0,r=1){return Math.min(Math.max(e,t),r)}function kN(t){t=t.slice(1);const e=new RegExp(`.{1,${t.length>=6?2:1}}`,"g");let r=t.match(e);return r&&r[0].length===1&&(r=r.map(n=>n+n)),r?`rgb${r.length===4?"a":""}(${r.map((n,i)=>i<3?parseInt(n,16):Math.round(parseInt(n,16)/255*1e3)/1e3).join(", ")})`:""}function Ws(t){if(t.type)return t;if(t.charAt(0)==="#")return Ws(kN(t));const e=t.indexOf("("),r=t.substring(0,e);if(["rgb","rgba","hsl","hsla","color"].indexOf(r)===-1)throw new Error(Hu(9,t));let n=t.substring(e+1,t.length-1),i;if(r==="color"){if(n=n.split(" "),i=n.shift(),n.length===4&&n[3].charAt(0)==="/"&&(n[3]=n[3].slice(1)),["srgb","display-p3","a98-rgb","prophoto-rgb","rec-2020"].indexOf(i)===-1)throw new Error(Hu(10,i))}else n=n.split(",");return n=n.map(a=>parseFloat(a)),{type:r,values:n,colorSpace:i}}function _p(t){const{type:e,colorSpace:r}=t;let{values:n}=t;return e.indexOf("rgb")!==-1?n=n.map((i,a)=>a<3?parseInt(i,10):i):e.indexOf("hsl")!==-1&&(n[1]=`${n[1]}%`,n[2]=`${n[2]}%`),e.indexOf("color")!==-1?n=`${r} ${n.join(" ")}`:n=`${n.join(", ")}`,`${e}(${n})`}function bN(t){t=Ws(t);const{values:e}=t,r=e[0],n=e[1]/100,i=e[2]/100,a=n*Math.min(i,1-i),s=(f,p=(f+r/30)%12)=>i-a*Math.max(Math.min(p-3,9-p,1),-1);let l="rgb";const c=[Math.round(s(0)*255),Math.round(s(8)*255),Math.round(s(4)*255)];return t.type==="hsla"&&(l+="a",c.push(e[3])),_p({type:l,values:c})}function py(t){t=Ws(t);let e=t.type==="hsl"?Ws(bN(t)).values:t.values;return e=e.map(r=>(t.type!=="color"&&(r/=255),r<=.03928?r/12.92:((r+.055)/1.055)**2.4)),Number((.2126*e[0]+.7152*e[1]+.0722*e[2]).toFixed(3))}function qN(t,e){const r=py(t),n=py(e);return(Math.max(r,n)+.05)/(Math.min(r,n)+.05)}function hi(t,e){return t=Ws(t),e=r0(e),(t.type==="rgb"||t.type==="hsl")&&(t.type+="a"),t.type==="color"?t.values[3]=`/${e}`:t.values[3]=e,_p(t)}function Lk(t,e){if(t=Ws(t),e=r0(e),t.type.indexOf("hsl")!==-1)t.values[2]*=1-e;else if(t.type.indexOf("rgb")!==-1||t.type.indexOf("color")!==-1)for(let r=0;r<3;r+=1)t.values[r]*=1-e;return _p(t)}function Nk(t,e){if(t=Ws(t),e=r0(e),t.type.indexOf("hsl")!==-1)t.values[2]+=(100-t.values[2])*e;else if(t.type.indexOf("rgb")!==-1)for(let r=0;r<3;r+=1)t.values[r]+=(255-t.values[r])*e;else if(t.type.indexOf("color")!==-1)for(let r=0;r<3;r+=1)t.values[r]+=(1-t.values[r])*e;return _p(t)}function $S(t,e=.15){return py(t)>.5?Lk(t,e):Nk(t,e)}function TN(t){const e=Qp();return $(Jg.Provider,{value:typeof e=="object"?e:{},children:t.children})}function jN(t){const{children:e,theme:r}=t;return $(oN,{theme:r,children:$(TN,{children:e})})}const RN=["className","component","disableGutters","fixed","maxWidth","classes"],VN=Xp(),LN=PN("div",{name:"MuiContainer",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.root,e[`maxWidth${Se(String(r.maxWidth))}`],r.fixed&&e.fixed,r.disableGutters&&e.disableGutters]}}),NN=t=>Vk({props:t,name:"MuiContainer",defaultTheme:VN}),WN=(t,e)=>{const r=c=>Wt(e,c),{classes:n,fixed:i,disableGutters:a,maxWidth:s}=t,l={root:["root",s&&`maxWidth${Se(String(s))}`,i&&"fixed",a&&"disableGutters"]};return zt(l,r,n)};function UN(t={}){const{createStyledComponent:e=LN,useThemeProps:r=NN,componentName:n="MuiContainer"}=t,i=e(({theme:s,ownerState:l})=>Q({width:"100%",marginLeft:"auto",boxSizing:"border-box",marginRight:"auto",display:"block"},!l.disableGutters&&{paddingLeft:s.spacing(2),paddingRight:s.spacing(2),[s.breakpoints.up("sm")]:{paddingLeft:s.spacing(3),paddingRight:s.spacing(3)}}),({theme:s,ownerState:l})=>l.fixed&&Object.keys(s.breakpoints.values).reduce((c,f)=>{const p=f,h=s.breakpoints.values[p];return h!==0&&(c[s.breakpoints.up(p)]={maxWidth:`${h}${s.breakpoints.unit}`}),c},{}),({theme:s,ownerState:l})=>Q({},l.maxWidth==="xs"&&{[s.breakpoints.up("xs")]:{maxWidth:Math.max(s.breakpoints.values.xs,444)}},l.maxWidth&&l.maxWidth!=="xs"&&{[s.breakpoints.up(l.maxWidth)]:{maxWidth:`${s.breakpoints.values[l.maxWidth]}${s.breakpoints.unit}`}}));return Y.exports.forwardRef(function(l,c){const f=r(l),{className:p,component:h="div",disableGutters:m=!1,fixed:g=!1,maxWidth:y="lg"}=f,k=Le(f,RN),q=Q({},f,{component:h,disableGutters:m,fixed:g,maxWidth:y}),P=WN(q,n);return $(i,Q({as:h,ownerState:q,className:We(P.root,p),ref:c},k))})}function Wk(t){return typeof t=="string"}var ll={exports:{}},cn={},Oo={exports:{}},Uk={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(t){function e(K,oe){var ne=K.length;K.push(oe);e:for(;0<ne;){var ue=ne-1>>>1,pe=K[ue];if(0<i(pe,oe))K[ue]=oe,K[ne]=pe,ne=ue;else break e}}function r(K){return K.length===0?null:K[0]}function n(K){if(K.length===0)return null;var oe=K[0],ne=K.pop();if(ne!==oe){K[0]=ne;e:for(var ue=0,pe=K.length,Pe=pe>>>1;ue<Pe;){var be=2*(ue+1)-1,Be=K[be],Ze=be+1,vt=K[Ze];if(0>i(Be,ne))Ze<pe&&0>i(vt,Be)?(K[ue]=vt,K[Ze]=ne,ue=Ze):(K[ue]=Be,K[be]=ne,ue=be);else if(Ze<pe&&0>i(vt,ne))K[ue]=vt,K[Ze]=ne,ue=Ze;else break e}}return oe}function i(K,oe){var ne=K.sortIndex-oe.sortIndex;return ne!==0?ne:K.id-oe.id}if(typeof performance=="object"&&typeof performance.now=="function"){var a=performance;t.unstable_now=function(){return a.now()}}else{var s=Date,l=s.now();t.unstable_now=function(){return s.now()-l}}var c=[],f=[],p=1,h=null,m=3,g=!1,y=!1,k=!1,q=typeof setTimeout=="function"?setTimeout:null,P=typeof clearTimeout=="function"?clearTimeout:null,x=typeof setImmediate!="undefined"?setImmediate:null;typeof navigator!="undefined"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function b(K){for(var oe=r(f);oe!==null;){if(oe.callback===null)n(f);else if(oe.startTime<=K)n(f),oe.sortIndex=oe.expirationTime,e(c,oe);else break;oe=r(f)}}function j(K){if(k=!1,b(K),!y)if(r(c)!==null)y=!0,te(R);else{var oe=r(f);oe!==null&&ie(j,oe.startTime-K)}}function R(K,oe){y=!1,k&&(k=!1,P(H),H=-1),g=!0;var ne=m;try{for(b(oe),h=r(c);h!==null&&(!(h.expirationTime>oe)||K&&!F());){var ue=h.callback;if(typeof ue=="function"){h.callback=null,m=h.priorityLevel;var pe=ue(h.expirationTime<=oe);oe=t.unstable_now(),typeof pe=="function"?h.callback=pe:h===r(c)&&n(c),b(oe)}else n(c);h=r(c)}if(h!==null)var Pe=!0;else{var be=r(f);be!==null&&ie(j,be.startTime-oe),Pe=!1}return Pe}finally{h=null,m=ne,g=!1}}var V=!1,N=null,H=-1,O=5,M=-1;function F(){return!(t.unstable_now()-M<O)}function J(){if(N!==null){var K=t.unstable_now();M=K;var oe=!0;try{oe=N(!0,K)}finally{oe?X():(V=!1,N=null)}}else V=!1}var X;if(typeof x=="function")X=function(){x(J)};else if(typeof MessageChannel!="undefined"){var re=new MessageChannel,ae=re.port2;re.port1.onmessage=J,X=function(){ae.postMessage(null)}}else X=function(){q(J,0)};function te(K){N=K,V||(V=!0,X())}function ie(K,oe){H=q(function(){K(t.unstable_now())},oe)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(K){K.callback=null},t.unstable_continueExecution=function(){y||g||(y=!0,te(R))},t.unstable_forceFrameRate=function(K){0>K||125<K?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):O=0<K?Math.floor(1e3/K):5},t.unstable_getCurrentPriorityLevel=function(){return m},t.unstable_getFirstCallbackNode=function(){return r(c)},t.unstable_next=function(K){switch(m){case 1:case 2:case 3:var oe=3;break;default:oe=m}var ne=m;m=oe;try{return K()}finally{m=ne}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(K,oe){switch(K){case 1:case 2:case 3:case 4:case 5:break;default:K=3}var ne=m;m=K;try{return oe()}finally{m=ne}},t.unstable_scheduleCallback=function(K,oe,ne){var ue=t.unstable_now();switch(typeof ne=="object"&&ne!==null?(ne=ne.delay,ne=typeof ne=="number"&&0<ne?ue+ne:ue):ne=ue,K){case 1:var pe=-1;break;case 2:pe=250;break;case 5:pe=1073741823;break;case 4:pe=1e4;break;default:pe=5e3}return pe=ne+pe,K={id:p++,callback:oe,priorityLevel:K,startTime:ne,expirationTime:pe,sortIndex:-1},ne>ue?(K.sortIndex=ne,e(f,K),r(c)===null&&K===r(f)&&(k?(P(H),H=-1):k=!0,ie(j,ne-ue))):(K.sortIndex=pe,e(c,K),y||g||(y=!0,te(R))),K},t.unstable_shouldYield=F,t.unstable_wrapCallback=function(K){var oe=m;return function(){var ne=m;m=oe;try{return K.apply(this,arguments)}finally{m=ne}}}})(Uk);Oo.exports=Uk;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Hk=Y.exports,on=Oo.exports;function le(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,r=1;r<arguments.length;r++)e+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var Mk=new Set,Ou={};function Cs(t,e){Xo(t,e),Xo(t+"Capture",e)}function Xo(t,e){for(Ou[t]=e,t=0;t<e.length;t++)Mk.add(e[t])}var Bi=!(typeof window=="undefined"||typeof window.document=="undefined"||typeof window.document.createElement=="undefined"),hy=Object.prototype.hasOwnProperty,HN=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,ex={},tx={};function MN(t){return hy.call(tx,t)?!0:hy.call(ex,t)?!1:HN.test(t)?tx[t]=!0:(ex[t]=!0,!1)}function ON(t,e,r,n){if(r!==null&&r.type===0)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return n?!1:r!==null?!r.acceptsBooleans:(t=t.toLowerCase().slice(0,5),t!=="data-"&&t!=="aria-");default:return!1}}function zN(t,e,r,n){if(e===null||typeof e=="undefined"||ON(t,e,r,n))return!0;if(n)return!1;if(r!==null)switch(r.type){case 3:return!e;case 4:return e===!1;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}function Vr(t,e,r,n,i,a,s){this.acceptsBooleans=e===2||e===3||e===4,this.attributeName=n,this.attributeNamespace=i,this.mustUseProperty=r,this.propertyName=t,this.type=e,this.sanitizeURL=a,this.removeEmptyString=s}var sr={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(t){sr[t]=new Vr(t,0,!1,t,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(t){var e=t[0];sr[e]=new Vr(e,1,!1,t[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(t){sr[t]=new Vr(t,2,!1,t.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(t){sr[t]=new Vr(t,2,!1,t,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(t){sr[t]=new Vr(t,3,!1,t.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(t){sr[t]=new Vr(t,3,!0,t,null,!1,!1)});["capture","download"].forEach(function(t){sr[t]=new Vr(t,4,!1,t,null,!1,!1)});["cols","rows","size","span"].forEach(function(t){sr[t]=new Vr(t,6,!1,t,null,!1,!1)});["rowSpan","start"].forEach(function(t){sr[t]=new Vr(t,5,!1,t.toLowerCase(),null,!1,!1)});var n0=/[\-:]([a-z])/g;function i0(t){return t[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(t){var e=t.replace(n0,i0);sr[e]=new Vr(e,1,!1,t,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(t){var e=t.replace(n0,i0);sr[e]=new Vr(e,1,!1,t,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(t){var e=t.replace(n0,i0);sr[e]=new Vr(e,1,!1,t,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(t){sr[t]=new Vr(t,1,!1,t.toLowerCase(),null,!1,!1)});sr.xlinkHref=new Vr("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(t){sr[t]=new Vr(t,1,!1,t.toLowerCase(),null,!0,!0)});function a0(t,e,r,n){var i=sr.hasOwnProperty(e)?sr[e]:null;(i!==null?i.type!==0:n||!(2<e.length)||e[0]!=="o"&&e[0]!=="O"||e[1]!=="n"&&e[1]!=="N")&&(zN(e,r,i,n)&&(r=null),n||i===null?MN(e)&&(r===null?t.removeAttribute(e):t.setAttribute(e,""+r)):i.mustUseProperty?t[i.propertyName]=r===null?i.type===3?!1:"":r:(e=i.attributeName,n=i.attributeNamespace,r===null?t.removeAttribute(e):(i=i.type,r=i===3||i===4&&r===!0?"":""+r,n?t.setAttributeNS(n,e,r):t.setAttribute(e,r))))}var _i=Hk.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Rf=Symbol.for("react.element"),Po=Symbol.for("react.portal"),wo=Symbol.for("react.fragment"),s0=Symbol.for("react.strict_mode"),my=Symbol.for("react.profiler"),Ok=Symbol.for("react.provider"),zk=Symbol.for("react.context"),o0=Symbol.for("react.forward_ref"),vy=Symbol.for("react.suspense"),yy=Symbol.for("react.suspense_list"),l0=Symbol.for("react.memo"),xa=Symbol.for("react.lazy"),Yk=Symbol.for("react.offscreen"),rx=Symbol.iterator;function Fl(t){return t===null||typeof t!="object"?null:(t=rx&&t[rx]||t["@@iterator"],typeof t=="function"?t:null)}var Pt=Object.assign,rv;function nu(t){if(rv===void 0)try{throw Error()}catch(r){var e=r.stack.trim().match(/\n( *(at )?)/);rv=e&&e[1]||""}return`
`+rv+t}var nv=!1;function iv(t,e){if(!t||nv)return"";nv=!0;var r=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(e)if(e=function(){throw Error()},Object.defineProperty(e.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(e,[])}catch(f){var n=f}Reflect.construct(t,[],e)}else{try{e.call()}catch(f){n=f}t.call(e.prototype)}else{try{throw Error()}catch(f){n=f}t()}}catch(f){if(f&&n&&typeof f.stack=="string"){for(var i=f.stack.split(`
`),a=n.stack.split(`
`),s=i.length-1,l=a.length-1;1<=s&&0<=l&&i[s]!==a[l];)l--;for(;1<=s&&0<=l;s--,l--)if(i[s]!==a[l]){if(s!==1||l!==1)do if(s--,l--,0>l||i[s]!==a[l]){var c=`
`+i[s].replace(" at new "," at ");return t.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",t.displayName)),c}while(1<=s&&0<=l);break}}}finally{nv=!1,Error.prepareStackTrace=r}return(t=t?t.displayName||t.name:"")?nu(t):""}function YN(t){switch(t.tag){case 5:return nu(t.type);case 16:return nu("Lazy");case 13:return nu("Suspense");case 19:return nu("SuspenseList");case 0:case 2:case 15:return t=iv(t.type,!1),t;case 11:return t=iv(t.type.render,!1),t;case 1:return t=iv(t.type,!0),t;default:return""}}function gy(t){if(t==null)return null;if(typeof t=="function")return t.displayName||t.name||null;if(typeof t=="string")return t;switch(t){case wo:return"Fragment";case Po:return"Portal";case my:return"Profiler";case s0:return"StrictMode";case vy:return"Suspense";case yy:return"SuspenseList"}if(typeof t=="object")switch(t.$$typeof){case zk:return(t.displayName||"Context")+".Consumer";case Ok:return(t._context.displayName||"Context")+".Provider";case o0:var e=t.render;return t=t.displayName,t||(t=e.displayName||e.name||"",t=t!==""?"ForwardRef("+t+")":"ForwardRef"),t;case l0:return e=t.displayName||null,e!==null?e:gy(t.type)||"Memo";case xa:e=t._payload,t=t._init;try{return gy(t(e))}catch{}}return null}function CN(t){var e=t.type;switch(t.tag){case 24:return"Cache";case 9:return(e.displayName||"Context")+".Consumer";case 10:return(e._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return t=e.render,t=t.displayName||t.name||"",e.displayName||(t!==""?"ForwardRef("+t+")":"ForwardRef");case 7:return"Fragment";case 5:return e;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return gy(e);case 8:return e===s0?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e}return null}function Ia(t){switch(typeof t){case"boolean":case"number":case"string":case"undefined":return t;case"object":return t;default:return""}}function Ck(t){var e=t.type;return(t=t.nodeName)&&t.toLowerCase()==="input"&&(e==="checkbox"||e==="radio")}function FN(t){var e=Ck(t)?"checked":"value",r=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),n=""+t[e];if(!t.hasOwnProperty(e)&&typeof r!="undefined"&&typeof r.get=="function"&&typeof r.set=="function"){var i=r.get,a=r.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return i.call(this)},set:function(s){n=""+s,a.call(this,s)}}),Object.defineProperty(t,e,{enumerable:r.enumerable}),{getValue:function(){return n},setValue:function(s){n=""+s},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}function Vf(t){t._valueTracker||(t._valueTracker=FN(t))}function Fk(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var r=e.getValue(),n="";return t&&(n=Ck(t)?t.checked?"true":"false":t.value),t=n,t!==r?(e.setValue(t),!0):!1}function zd(t){if(t=t||(typeof document!="undefined"?document:void 0),typeof t=="undefined")return null;try{return t.activeElement||t.body}catch{return t.body}}function Ay(t,e){var r=e.checked;return Pt({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:r!=null?r:t._wrapperState.initialChecked})}function nx(t,e){var r=e.defaultValue==null?"":e.defaultValue,n=e.checked!=null?e.checked:e.defaultChecked;r=Ia(e.value!=null?e.value:r),t._wrapperState={initialChecked:n,initialValue:r,controlled:e.type==="checkbox"||e.type==="radio"?e.checked!=null:e.value!=null}}function Ik(t,e){e=e.checked,e!=null&&a0(t,"checked",e,!1)}function Sy(t,e){Ik(t,e);var r=Ia(e.value),n=e.type;if(r!=null)n==="number"?(r===0&&t.value===""||t.value!=r)&&(t.value=""+r):t.value!==""+r&&(t.value=""+r);else if(n==="submit"||n==="reset"){t.removeAttribute("value");return}e.hasOwnProperty("value")?xy(t,e.type,r):e.hasOwnProperty("defaultValue")&&xy(t,e.type,Ia(e.defaultValue)),e.checked==null&&e.defaultChecked!=null&&(t.defaultChecked=!!e.defaultChecked)}function ix(t,e,r){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var n=e.type;if(!(n!=="submit"&&n!=="reset"||e.value!==void 0&&e.value!==null))return;e=""+t._wrapperState.initialValue,r||e===t.value||(t.value=e),t.defaultValue=e}r=t.name,r!==""&&(t.name=""),t.defaultChecked=!!t._wrapperState.initialChecked,r!==""&&(t.name=r)}function xy(t,e,r){(e!=="number"||zd(t.ownerDocument)!==t)&&(r==null?t.defaultValue=""+t._wrapperState.initialValue:t.defaultValue!==""+r&&(t.defaultValue=""+r))}var iu=Array.isArray;function zo(t,e,r,n){if(t=t.options,e){e={};for(var i=0;i<r.length;i++)e["$"+r[i]]=!0;for(r=0;r<t.length;r++)i=e.hasOwnProperty("$"+t[r].value),t[r].selected!==i&&(t[r].selected=i),i&&n&&(t[r].defaultSelected=!0)}else{for(r=""+Ia(r),e=null,i=0;i<t.length;i++){if(t[i].value===r){t[i].selected=!0,n&&(t[i].defaultSelected=!0);return}e!==null||t[i].disabled||(e=t[i])}e!==null&&(e.selected=!0)}}function Py(t,e){if(e.dangerouslySetInnerHTML!=null)throw Error(le(91));return Pt({},e,{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue})}function ax(t,e){var r=e.value;if(r==null){if(r=e.children,e=e.defaultValue,r!=null){if(e!=null)throw Error(le(92));if(iu(r)){if(1<r.length)throw Error(le(93));r=r[0]}e=r}e==null&&(e=""),r=e}t._wrapperState={initialValue:Ia(r)}}function Ek(t,e){var r=Ia(e.value),n=Ia(e.defaultValue);r!=null&&(r=""+r,r!==t.value&&(t.value=r),e.defaultValue==null&&t.defaultValue!==r&&(t.defaultValue=r)),n!=null&&(t.defaultValue=""+n)}function sx(t){var e=t.textContent;e===t._wrapperState.initialValue&&e!==""&&e!==null&&(t.value=e)}function Jk(t){switch(t){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function wy(t,e){return t==null||t==="http://www.w3.org/1999/xhtml"?Jk(e):t==="http://www.w3.org/2000/svg"&&e==="foreignObject"?"http://www.w3.org/1999/xhtml":t}var Lf,Dk=function(t){return typeof MSApp!="undefined"&&MSApp.execUnsafeLocalFunction?function(e,r,n,i){MSApp.execUnsafeLocalFunction(function(){return t(e,r,n,i)})}:t}(function(t,e){if(t.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in t)t.innerHTML=e;else{for(Lf=Lf||document.createElement("div"),Lf.innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=Lf.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;e.firstChild;)t.appendChild(e.firstChild)}});function zu(t,e){if(e){var r=t.firstChild;if(r&&r===t.lastChild&&r.nodeType===3){r.nodeValue=e;return}}t.textContent=e}var mu={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},IN=["Webkit","ms","Moz","O"];Object.keys(mu).forEach(function(t){IN.forEach(function(e){e=e+t.charAt(0).toUpperCase()+t.substring(1),mu[e]=mu[t]})});function Gk(t,e,r){return e==null||typeof e=="boolean"||e===""?"":r||typeof e!="number"||e===0||mu.hasOwnProperty(t)&&mu[t]?(""+e).trim():e+"px"}function Kk(t,e){t=t.style;for(var r in e)if(e.hasOwnProperty(r)){var n=r.indexOf("--")===0,i=Gk(r,e[r],n);r==="float"&&(r="cssFloat"),n?t.setProperty(r,i):t[r]=i}}var EN=Pt({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ky(t,e){if(e){if(EN[t]&&(e.children!=null||e.dangerouslySetInnerHTML!=null))throw Error(le(137,t));if(e.dangerouslySetInnerHTML!=null){if(e.children!=null)throw Error(le(60));if(typeof e.dangerouslySetInnerHTML!="object"||!("__html"in e.dangerouslySetInnerHTML))throw Error(le(61))}if(e.style!=null&&typeof e.style!="object")throw Error(le(62))}}function by(t,e){if(t.indexOf("-")===-1)return typeof e.is=="string";switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var qy=null;function u0(t){return t=t.target||t.srcElement||window,t.correspondingUseElement&&(t=t.correspondingUseElement),t.nodeType===3?t.parentNode:t}var Ty=null,Yo=null,Co=null;function ox(t){if(t=Pc(t)){if(typeof Ty!="function")throw Error(le(280));var e=t.stateNode;e&&(e=nh(e),Ty(t.stateNode,t.type,e))}}function Bk(t){Yo?Co?Co.push(t):Co=[t]:Yo=t}function Zk(){if(Yo){var t=Yo,e=Co;if(Co=Yo=null,ox(t),e)for(t=0;t<e.length;t++)ox(e[t])}}function Xk(t,e){return t(e)}function Qk(){}var av=!1;function _k(t,e,r){if(av)return t(e,r);av=!0;try{return Xk(t,e,r)}finally{av=!1,(Yo!==null||Co!==null)&&(Qk(),Zk())}}function Yu(t,e){var r=t.stateNode;if(r===null)return null;var n=nh(r);if(n===null)return null;r=n[e];e:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(n=!n.disabled)||(t=t.type,n=!(t==="button"||t==="input"||t==="select"||t==="textarea")),t=!n;break e;default:t=!1}if(t)return null;if(r&&typeof r!="function")throw Error(le(231,e,typeof r));return r}var jy=!1;if(Bi)try{var Il={};Object.defineProperty(Il,"passive",{get:function(){jy=!0}}),window.addEventListener("test",Il,Il),window.removeEventListener("test",Il,Il)}catch{jy=!1}function JN(t,e,r,n,i,a,s,l,c){var f=Array.prototype.slice.call(arguments,3);try{e.apply(r,f)}catch(p){this.onError(p)}}var vu=!1,Yd=null,Cd=!1,Ry=null,DN={onError:function(t){vu=!0,Yd=t}};function GN(t,e,r,n,i,a,s,l,c){vu=!1,Yd=null,JN.apply(DN,arguments)}function KN(t,e,r,n,i,a,s,l,c){if(GN.apply(this,arguments),vu){if(vu){var f=Yd;vu=!1,Yd=null}else throw Error(le(198));Cd||(Cd=!0,Ry=f)}}function Fs(t){var e=t,r=t;if(t.alternate)for(;e.return;)e=e.return;else{t=e;do e=t,(e.flags&4098)!==0&&(r=e.return),t=e.return;while(t)}return e.tag===3?r:null}function $k(t){if(t.tag===13){var e=t.memoizedState;if(e===null&&(t=t.alternate,t!==null&&(e=t.memoizedState)),e!==null)return e.dehydrated}return null}function lx(t){if(Fs(t)!==t)throw Error(le(188))}function BN(t){var e=t.alternate;if(!e){if(e=Fs(t),e===null)throw Error(le(188));return e!==t?null:t}for(var r=t,n=e;;){var i=r.return;if(i===null)break;var a=i.alternate;if(a===null){if(n=i.return,n!==null){r=n;continue}break}if(i.child===a.child){for(a=i.child;a;){if(a===r)return lx(i),t;if(a===n)return lx(i),e;a=a.sibling}throw Error(le(188))}if(r.return!==n.return)r=i,n=a;else{for(var s=!1,l=i.child;l;){if(l===r){s=!0,r=i,n=a;break}if(l===n){s=!0,n=i,r=a;break}l=l.sibling}if(!s){for(l=a.child;l;){if(l===r){s=!0,r=a,n=i;break}if(l===n){s=!0,n=a,r=i;break}l=l.sibling}if(!s)throw Error(le(189))}}if(r.alternate!==n)throw Error(le(190))}if(r.tag!==3)throw Error(le(188));return r.stateNode.current===r?t:e}function eb(t){return t=BN(t),t!==null?tb(t):null}function tb(t){if(t.tag===5||t.tag===6)return t;for(t=t.child;t!==null;){var e=tb(t);if(e!==null)return e;t=t.sibling}return null}var rb=on.unstable_scheduleCallback,ux=on.unstable_cancelCallback,ZN=on.unstable_shouldYield,XN=on.unstable_requestPaint,Nt=on.unstable_now,QN=on.unstable_getCurrentPriorityLevel,c0=on.unstable_ImmediatePriority,nb=on.unstable_UserBlockingPriority,Fd=on.unstable_NormalPriority,_N=on.unstable_LowPriority,ib=on.unstable_IdlePriority,$p=null,Ai=null;function $N(t){if(Ai&&typeof Ai.onCommitFiberRoot=="function")try{Ai.onCommitFiberRoot($p,t,void 0,(t.current.flags&128)===128)}catch{}}var En=Math.clz32?Math.clz32:rW,eW=Math.log,tW=Math.LN2;function rW(t){return t>>>=0,t===0?32:31-(eW(t)/tW|0)|0}var Nf=64,Wf=4194304;function au(t){switch(t&-t){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return t&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return t}}function Id(t,e){var r=t.pendingLanes;if(r===0)return 0;var n=0,i=t.suspendedLanes,a=t.pingedLanes,s=r&268435455;if(s!==0){var l=s&~i;l!==0?n=au(l):(a&=s,a!==0&&(n=au(a)))}else s=r&~i,s!==0?n=au(s):a!==0&&(n=au(a));if(n===0)return 0;if(e!==0&&e!==n&&(e&i)===0&&(i=n&-n,a=e&-e,i>=a||i===16&&(a&4194240)!==0))return e;if((n&4)!==0&&(n|=r&16),e=t.entangledLanes,e!==0)for(t=t.entanglements,e&=n;0<e;)r=31-En(e),i=1<<r,n|=t[r],e&=~i;return n}function nW(t,e){switch(t){case 1:case 2:case 4:return e+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function iW(t,e){for(var r=t.suspendedLanes,n=t.pingedLanes,i=t.expirationTimes,a=t.pendingLanes;0<a;){var s=31-En(a),l=1<<s,c=i[s];c===-1?((l&r)===0||(l&n)!==0)&&(i[s]=nW(l,e)):c<=e&&(t.expiredLanes|=l),a&=~l}}function Vy(t){return t=t.pendingLanes&-1073741825,t!==0?t:t&1073741824?1073741824:0}function ab(){var t=Nf;return Nf<<=1,(Nf&4194240)===0&&(Nf=64),t}function sv(t){for(var e=[],r=0;31>r;r++)e.push(t);return e}function Sc(t,e,r){t.pendingLanes|=e,e!==536870912&&(t.suspendedLanes=0,t.pingedLanes=0),t=t.eventTimes,e=31-En(e),t[e]=r}function aW(t,e){var r=t.pendingLanes&~e;t.pendingLanes=e,t.suspendedLanes=0,t.pingedLanes=0,t.expiredLanes&=e,t.mutableReadLanes&=e,t.entangledLanes&=e,e=t.entanglements;var n=t.eventTimes;for(t=t.expirationTimes;0<r;){var i=31-En(r),a=1<<i;e[i]=0,n[i]=-1,t[i]=-1,r&=~a}}function f0(t,e){var r=t.entangledLanes|=e;for(t=t.entanglements;r;){var n=31-En(r),i=1<<n;i&e|t[n]&e&&(t[n]|=e),r&=~i}}var De=0;function sb(t){return t&=-t,1<t?4<t?(t&268435455)!==0?16:536870912:4:1}var ob,d0,lb,ub,cb,Ly=!1,Uf=[],La=null,Na=null,Wa=null,Cu=new Map,Fu=new Map,ka=[],sW="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function cx(t,e){switch(t){case"focusin":case"focusout":La=null;break;case"dragenter":case"dragleave":Na=null;break;case"mouseover":case"mouseout":Wa=null;break;case"pointerover":case"pointerout":Cu.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":Fu.delete(e.pointerId)}}function El(t,e,r,n,i,a){return t===null||t.nativeEvent!==a?(t={blockedOn:e,domEventName:r,eventSystemFlags:n,nativeEvent:a,targetContainers:[i]},e!==null&&(e=Pc(e),e!==null&&d0(e)),t):(t.eventSystemFlags|=n,e=t.targetContainers,i!==null&&e.indexOf(i)===-1&&e.push(i),t)}function oW(t,e,r,n,i){switch(e){case"focusin":return La=El(La,t,e,r,n,i),!0;case"dragenter":return Na=El(Na,t,e,r,n,i),!0;case"mouseover":return Wa=El(Wa,t,e,r,n,i),!0;case"pointerover":var a=i.pointerId;return Cu.set(a,El(Cu.get(a)||null,t,e,r,n,i)),!0;case"gotpointercapture":return a=i.pointerId,Fu.set(a,El(Fu.get(a)||null,t,e,r,n,i)),!0}return!1}function fb(t){var e=ks(t.target);if(e!==null){var r=Fs(e);if(r!==null){if(e=r.tag,e===13){if(e=$k(r),e!==null){t.blockedOn=e,cb(t.priority,function(){lb(r)});return}}else if(e===3&&r.stateNode.current.memoizedState.isDehydrated){t.blockedOn=r.tag===3?r.stateNode.containerInfo:null;return}}}t.blockedOn=null}function gd(t){if(t.blockedOn!==null)return!1;for(var e=t.targetContainers;0<e.length;){var r=Ny(t.domEventName,t.eventSystemFlags,e[0],t.nativeEvent);if(r===null){r=t.nativeEvent;var n=new r.constructor(r.type,r);qy=n,r.target.dispatchEvent(n),qy=null}else return e=Pc(r),e!==null&&d0(e),t.blockedOn=r,!1;e.shift()}return!0}function fx(t,e,r){gd(t)&&r.delete(e)}function lW(){Ly=!1,La!==null&&gd(La)&&(La=null),Na!==null&&gd(Na)&&(Na=null),Wa!==null&&gd(Wa)&&(Wa=null),Cu.forEach(fx),Fu.forEach(fx)}function Jl(t,e){t.blockedOn===e&&(t.blockedOn=null,Ly||(Ly=!0,on.unstable_scheduleCallback(on.unstable_NormalPriority,lW)))}function Iu(t){function e(i){return Jl(i,t)}if(0<Uf.length){Jl(Uf[0],t);for(var r=1;r<Uf.length;r++){var n=Uf[r];n.blockedOn===t&&(n.blockedOn=null)}}for(La!==null&&Jl(La,t),Na!==null&&Jl(Na,t),Wa!==null&&Jl(Wa,t),Cu.forEach(e),Fu.forEach(e),r=0;r<ka.length;r++)n=ka[r],n.blockedOn===t&&(n.blockedOn=null);for(;0<ka.length&&(r=ka[0],r.blockedOn===null);)fb(r),r.blockedOn===null&&ka.shift()}var Fo=_i.ReactCurrentBatchConfig,Ed=!0;function uW(t,e,r,n){var i=De,a=Fo.transition;Fo.transition=null;try{De=1,p0(t,e,r,n)}finally{De=i,Fo.transition=a}}function cW(t,e,r,n){var i=De,a=Fo.transition;Fo.transition=null;try{De=4,p0(t,e,r,n)}finally{De=i,Fo.transition=a}}function p0(t,e,r,n){if(Ed){var i=Ny(t,e,r,n);if(i===null)vv(t,e,n,Jd,r),cx(t,n);else if(oW(i,t,e,r,n))n.stopPropagation();else if(cx(t,n),e&4&&-1<sW.indexOf(t)){for(;i!==null;){var a=Pc(i);if(a!==null&&ob(a),a=Ny(t,e,r,n),a===null&&vv(t,e,n,Jd,r),a===i)break;i=a}i!==null&&n.stopPropagation()}else vv(t,e,n,null,r)}}var Jd=null;function Ny(t,e,r,n){if(Jd=null,t=u0(n),t=ks(t),t!==null)if(e=Fs(t),e===null)t=null;else if(r=e.tag,r===13){if(t=$k(e),t!==null)return t;t=null}else if(r===3){if(e.stateNode.current.memoizedState.isDehydrated)return e.tag===3?e.stateNode.containerInfo:null;t=null}else e!==t&&(t=null);return Jd=t,null}function db(t){switch(t){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(QN()){case c0:return 1;case nb:return 4;case Fd:case _N:return 16;case ib:return 536870912;default:return 16}default:return 16}}var Ra=null,h0=null,Ad=null;function pb(){if(Ad)return Ad;var t,e=h0,r=e.length,n,i="value"in Ra?Ra.value:Ra.textContent,a=i.length;for(t=0;t<r&&e[t]===i[t];t++);var s=r-t;for(n=1;n<=s&&e[r-n]===i[a-n];n++);return Ad=i.slice(t,1<n?1-n:void 0)}function Sd(t){var e=t.keyCode;return"charCode"in t?(t=t.charCode,t===0&&e===13&&(t=13)):t=e,t===10&&(t=13),32<=t||t===13?t:0}function Hf(){return!0}function dx(){return!1}function fn(t){function e(r,n,i,a,s){this._reactName=r,this._targetInst=i,this.type=n,this.nativeEvent=a,this.target=s,this.currentTarget=null;for(var l in t)t.hasOwnProperty(l)&&(r=t[l],this[l]=r?r(a):a[l]);return this.isDefaultPrevented=(a.defaultPrevented!=null?a.defaultPrevented:a.returnValue===!1)?Hf:dx,this.isPropagationStopped=dx,this}return Pt(e.prototype,{preventDefault:function(){this.defaultPrevented=!0;var r=this.nativeEvent;r&&(r.preventDefault?r.preventDefault():typeof r.returnValue!="unknown"&&(r.returnValue=!1),this.isDefaultPrevented=Hf)},stopPropagation:function(){var r=this.nativeEvent;r&&(r.stopPropagation?r.stopPropagation():typeof r.cancelBubble!="unknown"&&(r.cancelBubble=!0),this.isPropagationStopped=Hf)},persist:function(){},isPersistent:Hf}),e}var ul={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},m0=fn(ul),xc=Pt({},ul,{view:0,detail:0}),fW=fn(xc),ov,lv,Dl,eh=Pt({},xc,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:v0,button:0,buttons:0,relatedTarget:function(t){return t.relatedTarget===void 0?t.fromElement===t.srcElement?t.toElement:t.fromElement:t.relatedTarget},movementX:function(t){return"movementX"in t?t.movementX:(t!==Dl&&(Dl&&t.type==="mousemove"?(ov=t.screenX-Dl.screenX,lv=t.screenY-Dl.screenY):lv=ov=0,Dl=t),ov)},movementY:function(t){return"movementY"in t?t.movementY:lv}}),px=fn(eh),dW=Pt({},eh,{dataTransfer:0}),pW=fn(dW),hW=Pt({},xc,{relatedTarget:0}),uv=fn(hW),mW=Pt({},ul,{animationName:0,elapsedTime:0,pseudoElement:0}),vW=fn(mW),yW=Pt({},ul,{clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),gW=fn(yW),AW=Pt({},ul,{data:0}),hx=fn(AW),SW={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},xW={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},PW={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function wW(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):(t=PW[t])?!!e[t]:!1}function v0(){return wW}var kW=Pt({},xc,{key:function(t){if(t.key){var e=SW[t.key]||t.key;if(e!=="Unidentified")return e}return t.type==="keypress"?(t=Sd(t),t===13?"Enter":String.fromCharCode(t)):t.type==="keydown"||t.type==="keyup"?xW[t.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:v0,charCode:function(t){return t.type==="keypress"?Sd(t):0},keyCode:function(t){return t.type==="keydown"||t.type==="keyup"?t.keyCode:0},which:function(t){return t.type==="keypress"?Sd(t):t.type==="keydown"||t.type==="keyup"?t.keyCode:0}}),bW=fn(kW),qW=Pt({},eh,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),mx=fn(qW),TW=Pt({},xc,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:v0}),jW=fn(TW),RW=Pt({},ul,{propertyName:0,elapsedTime:0,pseudoElement:0}),VW=fn(RW),LW=Pt({},eh,{deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:0,deltaMode:0}),NW=fn(LW),WW=[9,13,27,32],y0=Bi&&"CompositionEvent"in window,yu=null;Bi&&"documentMode"in document&&(yu=document.documentMode);var UW=Bi&&"TextEvent"in window&&!yu,hb=Bi&&(!y0||yu&&8<yu&&11>=yu),vx=String.fromCharCode(32),yx=!1;function mb(t,e){switch(t){case"keyup":return WW.indexOf(e.keyCode)!==-1;case"keydown":return e.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function vb(t){return t=t.detail,typeof t=="object"&&"data"in t?t.data:null}var ko=!1;function HW(t,e){switch(t){case"compositionend":return vb(e);case"keypress":return e.which!==32?null:(yx=!0,vx);case"textInput":return t=e.data,t===vx&&yx?null:t;default:return null}}function MW(t,e){if(ko)return t==="compositionend"||!y0&&mb(t,e)?(t=pb(),Ad=h0=Ra=null,ko=!1,t):null;switch(t){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return hb&&e.locale!=="ko"?null:e.data;default:return null}}var OW={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function gx(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e==="input"?!!OW[t.type]:e==="textarea"}function yb(t,e,r,n){Bk(n),e=Dd(e,"onChange"),0<e.length&&(r=new m0("onChange","change",null,r,n),t.push({event:r,listeners:e}))}var gu=null,Eu=null;function zW(t){jb(t,0)}function th(t){var e=To(t);if(Fk(e))return t}function YW(t,e){if(t==="change")return e}var gb=!1;if(Bi){var cv;if(Bi){var fv="oninput"in document;if(!fv){var Ax=document.createElement("div");Ax.setAttribute("oninput","return;"),fv=typeof Ax.oninput=="function"}cv=fv}else cv=!1;gb=cv&&(!document.documentMode||9<document.documentMode)}function Sx(){gu&&(gu.detachEvent("onpropertychange",Ab),Eu=gu=null)}function Ab(t){if(t.propertyName==="value"&&th(Eu)){var e=[];yb(e,Eu,t,u0(t)),_k(zW,e)}}function CW(t,e,r){t==="focusin"?(Sx(),gu=e,Eu=r,gu.attachEvent("onpropertychange",Ab)):t==="focusout"&&Sx()}function FW(t){if(t==="selectionchange"||t==="keyup"||t==="keydown")return th(Eu)}function IW(t,e){if(t==="click")return th(e)}function EW(t,e){if(t==="input"||t==="change")return th(e)}function JW(t,e){return t===e&&(t!==0||1/t===1/e)||t!==t&&e!==e}var Jn=typeof Object.is=="function"?Object.is:JW;function Ju(t,e){if(Jn(t,e))return!0;if(typeof t!="object"||t===null||typeof e!="object"||e===null)return!1;var r=Object.keys(t),n=Object.keys(e);if(r.length!==n.length)return!1;for(n=0;n<r.length;n++){var i=r[n];if(!hy.call(e,i)||!Jn(t[i],e[i]))return!1}return!0}function xx(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function Px(t,e){var r=xx(t);t=0;for(var n;r;){if(r.nodeType===3){if(n=t+r.textContent.length,t<=e&&n>=e)return{node:r,offset:e-t};t=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=xx(r)}}function Sb(t,e){return t&&e?t===e?!0:t&&t.nodeType===3?!1:e&&e.nodeType===3?Sb(t,e.parentNode):"contains"in t?t.contains(e):t.compareDocumentPosition?!!(t.compareDocumentPosition(e)&16):!1:!1}function xb(){for(var t=window,e=zd();e instanceof t.HTMLIFrameElement;){try{var r=typeof e.contentWindow.location.href=="string"}catch{r=!1}if(r)t=e.contentWindow;else break;e=zd(t.document)}return e}function g0(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&(e==="input"&&(t.type==="text"||t.type==="search"||t.type==="tel"||t.type==="url"||t.type==="password")||e==="textarea"||t.contentEditable==="true")}function DW(t){var e=xb(),r=t.focusedElem,n=t.selectionRange;if(e!==r&&r&&r.ownerDocument&&Sb(r.ownerDocument.documentElement,r)){if(n!==null&&g0(r)){if(e=n.start,t=n.end,t===void 0&&(t=e),"selectionStart"in r)r.selectionStart=e,r.selectionEnd=Math.min(t,r.value.length);else if(t=(e=r.ownerDocument||document)&&e.defaultView||window,t.getSelection){t=t.getSelection();var i=r.textContent.length,a=Math.min(n.start,i);n=n.end===void 0?a:Math.min(n.end,i),!t.extend&&a>n&&(i=n,n=a,a=i),i=Px(r,a);var s=Px(r,n);i&&s&&(t.rangeCount!==1||t.anchorNode!==i.node||t.anchorOffset!==i.offset||t.focusNode!==s.node||t.focusOffset!==s.offset)&&(e=e.createRange(),e.setStart(i.node,i.offset),t.removeAllRanges(),a>n?(t.addRange(e),t.extend(s.node,s.offset)):(e.setEnd(s.node,s.offset),t.addRange(e)))}}for(e=[],t=r;t=t.parentNode;)t.nodeType===1&&e.push({element:t,left:t.scrollLeft,top:t.scrollTop});for(typeof r.focus=="function"&&r.focus(),r=0;r<e.length;r++)t=e[r],t.element.scrollLeft=t.left,t.element.scrollTop=t.top}}var GW=Bi&&"documentMode"in document&&11>=document.documentMode,bo=null,Wy=null,Au=null,Uy=!1;function wx(t,e,r){var n=r.window===r?r.document:r.nodeType===9?r:r.ownerDocument;Uy||bo==null||bo!==zd(n)||(n=bo,"selectionStart"in n&&g0(n)?n={start:n.selectionStart,end:n.selectionEnd}:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection(),n={anchorNode:n.anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}),Au&&Ju(Au,n)||(Au=n,n=Dd(Wy,"onSelect"),0<n.length&&(e=new m0("onSelect","select",null,e,r),t.push({event:e,listeners:n}),e.target=bo)))}function Mf(t,e){var r={};return r[t.toLowerCase()]=e.toLowerCase(),r["Webkit"+t]="webkit"+e,r["Moz"+t]="moz"+e,r}var qo={animationend:Mf("Animation","AnimationEnd"),animationiteration:Mf("Animation","AnimationIteration"),animationstart:Mf("Animation","AnimationStart"),transitionend:Mf("Transition","TransitionEnd")},dv={},Pb={};Bi&&(Pb=document.createElement("div").style,"AnimationEvent"in window||(delete qo.animationend.animation,delete qo.animationiteration.animation,delete qo.animationstart.animation),"TransitionEvent"in window||delete qo.transitionend.transition);function rh(t){if(dv[t])return dv[t];if(!qo[t])return t;var e=qo[t],r;for(r in e)if(e.hasOwnProperty(r)&&r in Pb)return dv[t]=e[r];return t}var wb=rh("animationend"),kb=rh("animationiteration"),bb=rh("animationstart"),qb=rh("transitionend"),Tb=new Map,kx="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function _a(t,e){Tb.set(t,e),Cs(e,[t])}for(var pv=0;pv<kx.length;pv++){var hv=kx[pv],KW=hv.toLowerCase(),BW=hv[0].toUpperCase()+hv.slice(1);_a(KW,"on"+BW)}_a(wb,"onAnimationEnd");_a(kb,"onAnimationIteration");_a(bb,"onAnimationStart");_a("dblclick","onDoubleClick");_a("focusin","onFocus");_a("focusout","onBlur");_a(qb,"onTransitionEnd");Xo("onMouseEnter",["mouseout","mouseover"]);Xo("onMouseLeave",["mouseout","mouseover"]);Xo("onPointerEnter",["pointerout","pointerover"]);Xo("onPointerLeave",["pointerout","pointerover"]);Cs("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));Cs("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));Cs("onBeforeInput",["compositionend","keypress","textInput","paste"]);Cs("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));Cs("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));Cs("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var su="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ZW=new Set("cancel close invalid load scroll toggle".split(" ").concat(su));function bx(t,e,r){var n=t.type||"unknown-event";t.currentTarget=r,KN(n,e,void 0,t),t.currentTarget=null}function jb(t,e){e=(e&4)!==0;for(var r=0;r<t.length;r++){var n=t[r],i=n.event;n=n.listeners;e:{var a=void 0;if(e)for(var s=n.length-1;0<=s;s--){var l=n[s],c=l.instance,f=l.currentTarget;if(l=l.listener,c!==a&&i.isPropagationStopped())break e;bx(i,l,f),a=c}else for(s=0;s<n.length;s++){if(l=n[s],c=l.instance,f=l.currentTarget,l=l.listener,c!==a&&i.isPropagationStopped())break e;bx(i,l,f),a=c}}}if(Cd)throw t=Ry,Cd=!1,Ry=null,t}function ot(t,e){var r=e[Yy];r===void 0&&(r=e[Yy]=new Set);var n=t+"__bubble";r.has(n)||(Rb(e,t,2,!1),r.add(n))}function mv(t,e,r){var n=0;e&&(n|=4),Rb(r,t,n,e)}var Of="_reactListening"+Math.random().toString(36).slice(2);function Du(t){if(!t[Of]){t[Of]=!0,Mk.forEach(function(r){r!=="selectionchange"&&(ZW.has(r)||mv(r,!1,t),mv(r,!0,t))});var e=t.nodeType===9?t:t.ownerDocument;e===null||e[Of]||(e[Of]=!0,mv("selectionchange",!1,e))}}function Rb(t,e,r,n){switch(db(e)){case 1:var i=uW;break;case 4:i=cW;break;default:i=p0}r=i.bind(null,e,r,t),i=void 0,!jy||e!=="touchstart"&&e!=="touchmove"&&e!=="wheel"||(i=!0),n?i!==void 0?t.addEventListener(e,r,{capture:!0,passive:i}):t.addEventListener(e,r,!0):i!==void 0?t.addEventListener(e,r,{passive:i}):t.addEventListener(e,r,!1)}function vv(t,e,r,n,i){var a=n;if((e&1)===0&&(e&2)===0&&n!==null)e:for(;;){if(n===null)return;var s=n.tag;if(s===3||s===4){var l=n.stateNode.containerInfo;if(l===i||l.nodeType===8&&l.parentNode===i)break;if(s===4)for(s=n.return;s!==null;){var c=s.tag;if((c===3||c===4)&&(c=s.stateNode.containerInfo,c===i||c.nodeType===8&&c.parentNode===i))return;s=s.return}for(;l!==null;){if(s=ks(l),s===null)return;if(c=s.tag,c===5||c===6){n=a=s;continue e}l=l.parentNode}}n=n.return}_k(function(){var f=a,p=u0(r),h=[];e:{var m=Tb.get(t);if(m!==void 0){var g=m0,y=t;switch(t){case"keypress":if(Sd(r)===0)break e;case"keydown":case"keyup":g=bW;break;case"focusin":y="focus",g=uv;break;case"focusout":y="blur",g=uv;break;case"beforeblur":case"afterblur":g=uv;break;case"click":if(r.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":g=px;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":g=pW;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":g=jW;break;case wb:case kb:case bb:g=vW;break;case qb:g=VW;break;case"scroll":g=fW;break;case"wheel":g=NW;break;case"copy":case"cut":case"paste":g=gW;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":g=mx}var k=(e&4)!==0,q=!k&&t==="scroll",P=k?m!==null?m+"Capture":null:m;k=[];for(var x=f,b;x!==null;){b=x;var j=b.stateNode;if(b.tag===5&&j!==null&&(b=j,P!==null&&(j=Yu(x,P),j!=null&&k.push(Gu(x,j,b)))),q)break;x=x.return}0<k.length&&(m=new g(m,y,null,r,p),h.push({event:m,listeners:k}))}}if((e&7)===0){e:{if(m=t==="mouseover"||t==="pointerover",g=t==="mouseout"||t==="pointerout",m&&r!==qy&&(y=r.relatedTarget||r.fromElement)&&(ks(y)||y[Zi]))break e;if((g||m)&&(m=p.window===p?p:(m=p.ownerDocument)?m.defaultView||m.parentWindow:window,g?(y=r.relatedTarget||r.toElement,g=f,y=y?ks(y):null,y!==null&&(q=Fs(y),y!==q||y.tag!==5&&y.tag!==6)&&(y=null)):(g=null,y=f),g!==y)){if(k=px,j="onMouseLeave",P="onMouseEnter",x="mouse",(t==="pointerout"||t==="pointerover")&&(k=mx,j="onPointerLeave",P="onPointerEnter",x="pointer"),q=g==null?m:To(g),b=y==null?m:To(y),m=new k(j,x+"leave",g,r,p),m.target=q,m.relatedTarget=b,j=null,ks(p)===f&&(k=new k(P,x+"enter",y,r,p),k.target=b,k.relatedTarget=q,j=k),q=j,g&&y)t:{for(k=g,P=y,x=0,b=k;b;b=ho(b))x++;for(b=0,j=P;j;j=ho(j))b++;for(;0<x-b;)k=ho(k),x--;for(;0<b-x;)P=ho(P),b--;for(;x--;){if(k===P||P!==null&&k===P.alternate)break t;k=ho(k),P=ho(P)}k=null}else k=null;g!==null&&qx(h,m,g,k,!1),y!==null&&q!==null&&qx(h,q,y,k,!0)}}e:{if(m=f?To(f):window,g=m.nodeName&&m.nodeName.toLowerCase(),g==="select"||g==="input"&&m.type==="file")var R=YW;else if(gx(m))if(gb)R=EW;else{R=FW;var V=CW}else(g=m.nodeName)&&g.toLowerCase()==="input"&&(m.type==="checkbox"||m.type==="radio")&&(R=IW);if(R&&(R=R(t,f))){yb(h,R,r,p);break e}V&&V(t,m,f),t==="focusout"&&(V=m._wrapperState)&&V.controlled&&m.type==="number"&&xy(m,"number",m.value)}switch(V=f?To(f):window,t){case"focusin":(gx(V)||V.contentEditable==="true")&&(bo=V,Wy=f,Au=null);break;case"focusout":Au=Wy=bo=null;break;case"mousedown":Uy=!0;break;case"contextmenu":case"mouseup":case"dragend":Uy=!1,wx(h,r,p);break;case"selectionchange":if(GW)break;case"keydown":case"keyup":wx(h,r,p)}var N;if(y0)e:{switch(t){case"compositionstart":var H="onCompositionStart";break e;case"compositionend":H="onCompositionEnd";break e;case"compositionupdate":H="onCompositionUpdate";break e}H=void 0}else ko?mb(t,r)&&(H="onCompositionEnd"):t==="keydown"&&r.keyCode===229&&(H="onCompositionStart");H&&(hb&&r.locale!=="ko"&&(ko||H!=="onCompositionStart"?H==="onCompositionEnd"&&ko&&(N=pb()):(Ra=p,h0="value"in Ra?Ra.value:Ra.textContent,ko=!0)),V=Dd(f,H),0<V.length&&(H=new hx(H,t,null,r,p),h.push({event:H,listeners:V}),N?H.data=N:(N=vb(r),N!==null&&(H.data=N)))),(N=UW?HW(t,r):MW(t,r))&&(f=Dd(f,"onBeforeInput"),0<f.length&&(p=new hx("onBeforeInput","beforeinput",null,r,p),h.push({event:p,listeners:f}),p.data=N))}jb(h,e)})}function Gu(t,e,r){return{instance:t,listener:e,currentTarget:r}}function Dd(t,e){for(var r=e+"Capture",n=[];t!==null;){var i=t,a=i.stateNode;i.tag===5&&a!==null&&(i=a,a=Yu(t,r),a!=null&&n.unshift(Gu(t,a,i)),a=Yu(t,e),a!=null&&n.push(Gu(t,a,i))),t=t.return}return n}function ho(t){if(t===null)return null;do t=t.return;while(t&&t.tag!==5);return t||null}function qx(t,e,r,n,i){for(var a=e._reactName,s=[];r!==null&&r!==n;){var l=r,c=l.alternate,f=l.stateNode;if(c!==null&&c===n)break;l.tag===5&&f!==null&&(l=f,i?(c=Yu(r,a),c!=null&&s.unshift(Gu(r,c,l))):i||(c=Yu(r,a),c!=null&&s.push(Gu(r,c,l)))),r=r.return}s.length!==0&&t.push({event:e,listeners:s})}var XW=/\r\n?/g,QW=/\u0000|\uFFFD/g;function Tx(t){return(typeof t=="string"?t:""+t).replace(XW,`
`).replace(QW,"")}function zf(t,e,r){if(e=Tx(e),Tx(t)!==e&&r)throw Error(le(425))}function Gd(){}var Hy=null,My=null;function Oy(t,e){return t==="textarea"||t==="noscript"||typeof e.children=="string"||typeof e.children=="number"||typeof e.dangerouslySetInnerHTML=="object"&&e.dangerouslySetInnerHTML!==null&&e.dangerouslySetInnerHTML.__html!=null}var zy=typeof setTimeout=="function"?setTimeout:void 0,_W=typeof clearTimeout=="function"?clearTimeout:void 0,jx=typeof Promise=="function"?Promise:void 0,$W=typeof queueMicrotask=="function"?queueMicrotask:typeof jx!="undefined"?function(t){return jx.resolve(null).then(t).catch(eU)}:zy;function eU(t){setTimeout(function(){throw t})}function yv(t,e){var r=e,n=0;do{var i=r.nextSibling;if(t.removeChild(r),i&&i.nodeType===8)if(r=i.data,r==="/$"){if(n===0){t.removeChild(i),Iu(e);return}n--}else r!=="$"&&r!=="$?"&&r!=="$!"||n++;r=i}while(r);Iu(e)}function Ii(t){for(;t!=null;t=t.nextSibling){var e=t.nodeType;if(e===1||e===3)break;if(e===8){if(e=t.data,e==="$"||e==="$!"||e==="$?")break;if(e==="/$")return null}}return t}function Rx(t){t=t.previousSibling;for(var e=0;t;){if(t.nodeType===8){var r=t.data;if(r==="$"||r==="$!"||r==="$?"){if(e===0)return t;e--}else r==="/$"&&e++}t=t.previousSibling}return null}var cl=Math.random().toString(36).slice(2),di="__reactFiber$"+cl,Ku="__reactProps$"+cl,Zi="__reactContainer$"+cl,Yy="__reactEvents$"+cl,tU="__reactListeners$"+cl,rU="__reactHandles$"+cl;function ks(t){var e=t[di];if(e)return e;for(var r=t.parentNode;r;){if(e=r[Zi]||r[di]){if(r=e.alternate,e.child!==null||r!==null&&r.child!==null)for(t=Rx(t);t!==null;){if(r=t[di])return r;t=Rx(t)}return e}t=r,r=t.parentNode}return null}function Pc(t){return t=t[di]||t[Zi],!t||t.tag!==5&&t.tag!==6&&t.tag!==13&&t.tag!==3?null:t}function To(t){if(t.tag===5||t.tag===6)return t.stateNode;throw Error(le(33))}function nh(t){return t[Ku]||null}var Cy=[],jo=-1;function $a(t){return{current:t}}function lt(t){0>jo||(t.current=Cy[jo],Cy[jo]=null,jo--)}function rt(t,e){jo++,Cy[jo]=t.current,t.current=e}var Ea={},xr=$a(Ea),Er=$a(!1),Us=Ea;function Qo(t,e){var r=t.type.contextTypes;if(!r)return Ea;var n=t.stateNode;if(n&&n.__reactInternalMemoizedUnmaskedChildContext===e)return n.__reactInternalMemoizedMaskedChildContext;var i={},a;for(a in r)i[a]=e[a];return n&&(t=t.stateNode,t.__reactInternalMemoizedUnmaskedChildContext=e,t.__reactInternalMemoizedMaskedChildContext=i),i}function Jr(t){return t=t.childContextTypes,t!=null}function Kd(){lt(Er),lt(xr)}function Vx(t,e,r){if(xr.current!==Ea)throw Error(le(168));rt(xr,e),rt(Er,r)}function Vb(t,e,r){var n=t.stateNode;if(e=e.childContextTypes,typeof n.getChildContext!="function")return r;n=n.getChildContext();for(var i in n)if(!(i in e))throw Error(le(108,CN(t)||"Unknown",i));return Pt({},r,n)}function Bd(t){return t=(t=t.stateNode)&&t.__reactInternalMemoizedMergedChildContext||Ea,Us=xr.current,rt(xr,t),rt(Er,Er.current),!0}function Lx(t,e,r){var n=t.stateNode;if(!n)throw Error(le(169));r?(t=Vb(t,e,Us),n.__reactInternalMemoizedMergedChildContext=t,lt(Er),lt(xr),rt(xr,t)):lt(Er),rt(Er,r)}var Yi=null,ih=!1,gv=!1;function Lb(t){Yi===null?Yi=[t]:Yi.push(t)}function nU(t){ih=!0,Lb(t)}function es(){if(!gv&&Yi!==null){gv=!0;var t=0,e=De;try{var r=Yi;for(De=1;t<r.length;t++){var n=r[t];do n=n(!0);while(n!==null)}Yi=null,ih=!1}catch(i){throw Yi!==null&&(Yi=Yi.slice(t+1)),rb(c0,es),i}finally{De=e,gv=!1}}return null}var iU=_i.ReactCurrentBatchConfig;function Yn(t,e){if(t&&t.defaultProps){e=Pt({},e),t=t.defaultProps;for(var r in t)e[r]===void 0&&(e[r]=t[r]);return e}return e}var Zd=$a(null),Xd=null,Ro=null,A0=null;function S0(){A0=Ro=Xd=null}function x0(t){var e=Zd.current;lt(Zd),t._currentValue=e}function Fy(t,e,r){for(;t!==null;){var n=t.alternate;if((t.childLanes&e)!==e?(t.childLanes|=e,n!==null&&(n.childLanes|=e)):n!==null&&(n.childLanes&e)!==e&&(n.childLanes|=e),t===r)break;t=t.return}}function Io(t,e){Xd=t,A0=Ro=null,t=t.dependencies,t!==null&&t.firstContext!==null&&((t.lanes&e)!==0&&(Ir=!0),t.firstContext=null)}function jn(t){var e=t._currentValue;if(A0!==t)if(t={context:t,memoizedValue:e,next:null},Ro===null){if(Xd===null)throw Error(le(308));Ro=t,Xd.dependencies={lanes:0,firstContext:t}}else Ro=Ro.next=t;return e}var In=null,Pa=!1;function P0(t){t.updateQueue={baseState:t.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Nb(t,e){t=t.updateQueue,e.updateQueue===t&&(e.updateQueue={baseState:t.baseState,firstBaseUpdate:t.firstBaseUpdate,lastBaseUpdate:t.lastBaseUpdate,shared:t.shared,effects:t.effects})}function Di(t,e){return{eventTime:t,lane:e,tag:0,payload:null,callback:null,next:null}}function Ua(t,e){var r=t.updateQueue;r!==null&&(r=r.shared,xq(t)?(t=r.interleaved,t===null?(e.next=e,In===null?In=[r]:In.push(r)):(e.next=t.next,t.next=e),r.interleaved=e):(t=r.pending,t===null?e.next=e:(e.next=t.next,t.next=e),r.pending=e))}function xd(t,e,r){if(e=e.updateQueue,e!==null&&(e=e.shared,(r&4194240)!==0)){var n=e.lanes;n&=t.pendingLanes,r|=n,e.lanes=r,f0(t,r)}}function Nx(t,e){var r=t.updateQueue,n=t.alternate;if(n!==null&&(n=n.updateQueue,r===n)){var i=null,a=null;if(r=r.firstBaseUpdate,r!==null){do{var s={eventTime:r.eventTime,lane:r.lane,tag:r.tag,payload:r.payload,callback:r.callback,next:null};a===null?i=a=s:a=a.next=s,r=r.next}while(r!==null);a===null?i=a=e:a=a.next=e}else i=a=e;r={baseState:n.baseState,firstBaseUpdate:i,lastBaseUpdate:a,shared:n.shared,effects:n.effects},t.updateQueue=r;return}t=r.lastBaseUpdate,t===null?r.firstBaseUpdate=e:t.next=e,r.lastBaseUpdate=e}function Qd(t,e,r,n){var i=t.updateQueue;Pa=!1;var a=i.firstBaseUpdate,s=i.lastBaseUpdate,l=i.shared.pending;if(l!==null){i.shared.pending=null;var c=l,f=c.next;c.next=null,s===null?a=f:s.next=f,s=c;var p=t.alternate;p!==null&&(p=p.updateQueue,l=p.lastBaseUpdate,l!==s&&(l===null?p.firstBaseUpdate=f:l.next=f,p.lastBaseUpdate=c))}if(a!==null){var h=i.baseState;s=0,p=f=c=null,l=a;do{var m=l.lane,g=l.eventTime;if((n&m)===m){p!==null&&(p=p.next={eventTime:g,lane:0,tag:l.tag,payload:l.payload,callback:l.callback,next:null});e:{var y=t,k=l;switch(m=e,g=r,k.tag){case 1:if(y=k.payload,typeof y=="function"){h=y.call(g,h,m);break e}h=y;break e;case 3:y.flags=y.flags&-65537|128;case 0:if(y=k.payload,m=typeof y=="function"?y.call(g,h,m):y,m==null)break e;h=Pt({},h,m);break e;case 2:Pa=!0}}l.callback!==null&&l.lane!==0&&(t.flags|=64,m=i.effects,m===null?i.effects=[l]:m.push(l))}else g={eventTime:g,lane:m,tag:l.tag,payload:l.payload,callback:l.callback,next:null},p===null?(f=p=g,c=h):p=p.next=g,s|=m;if(l=l.next,l===null){if(l=i.shared.pending,l===null)break;m=l,l=m.next,m.next=null,i.lastBaseUpdate=m,i.shared.pending=null}}while(1);if(p===null&&(c=h),i.baseState=c,i.firstBaseUpdate=f,i.lastBaseUpdate=p,e=i.shared.interleaved,e!==null){i=e;do s|=i.lane,i=i.next;while(i!==e)}else a===null&&(i.shared.lanes=0);Os|=s,t.lanes=s,t.memoizedState=h}}function Wx(t,e,r){if(t=e.effects,e.effects=null,t!==null)for(e=0;e<t.length;e++){var n=t[e],i=n.callback;if(i!==null){if(n.callback=null,n=r,typeof i!="function")throw Error(le(191,i));i.call(n)}}}var Wb=new Hk.Component().refs;function Iy(t,e,r,n){e=t.memoizedState,r=r(n,e),r=r==null?e:Pt({},e,r),t.memoizedState=r,t.lanes===0&&(t.updateQueue.baseState=r)}var ah={isMounted:function(t){return(t=t._reactInternals)?Fs(t)===t:!1},enqueueSetState:function(t,e,r){t=t._reactInternals;var n=jr(),i=Ma(t),a=Di(n,i);a.payload=e,r!=null&&(a.callback=r),Ua(t,a),e=Tn(t,i,n),e!==null&&xd(e,t,i)},enqueueReplaceState:function(t,e,r){t=t._reactInternals;var n=jr(),i=Ma(t),a=Di(n,i);a.tag=1,a.payload=e,r!=null&&(a.callback=r),Ua(t,a),e=Tn(t,i,n),e!==null&&xd(e,t,i)},enqueueForceUpdate:function(t,e){t=t._reactInternals;var r=jr(),n=Ma(t),i=Di(r,n);i.tag=2,e!=null&&(i.callback=e),Ua(t,i),e=Tn(t,n,r),e!==null&&xd(e,t,n)}};function Ux(t,e,r,n,i,a,s){return t=t.stateNode,typeof t.shouldComponentUpdate=="function"?t.shouldComponentUpdate(n,a,s):e.prototype&&e.prototype.isPureReactComponent?!Ju(r,n)||!Ju(i,a):!0}function Ub(t,e,r){var n=!1,i=Ea,a=e.contextType;return typeof a=="object"&&a!==null?a=jn(a):(i=Jr(e)?Us:xr.current,n=e.contextTypes,a=(n=n!=null)?Qo(t,i):Ea),e=new e(r,a),t.memoizedState=e.state!==null&&e.state!==void 0?e.state:null,e.updater=ah,t.stateNode=e,e._reactInternals=t,n&&(t=t.stateNode,t.__reactInternalMemoizedUnmaskedChildContext=i,t.__reactInternalMemoizedMaskedChildContext=a),e}function Hx(t,e,r,n){t=e.state,typeof e.componentWillReceiveProps=="function"&&e.componentWillReceiveProps(r,n),typeof e.UNSAFE_componentWillReceiveProps=="function"&&e.UNSAFE_componentWillReceiveProps(r,n),e.state!==t&&ah.enqueueReplaceState(e,e.state,null)}function Ey(t,e,r,n){var i=t.stateNode;i.props=r,i.state=t.memoizedState,i.refs=Wb,P0(t);var a=e.contextType;typeof a=="object"&&a!==null?i.context=jn(a):(a=Jr(e)?Us:xr.current,i.context=Qo(t,a)),i.state=t.memoizedState,a=e.getDerivedStateFromProps,typeof a=="function"&&(Iy(t,e,a,r),i.state=t.memoizedState),typeof e.getDerivedStateFromProps=="function"||typeof i.getSnapshotBeforeUpdate=="function"||typeof i.UNSAFE_componentWillMount!="function"&&typeof i.componentWillMount!="function"||(e=i.state,typeof i.componentWillMount=="function"&&i.componentWillMount(),typeof i.UNSAFE_componentWillMount=="function"&&i.UNSAFE_componentWillMount(),e!==i.state&&ah.enqueueReplaceState(i,i.state,null),Qd(t,r,i,n),i.state=t.memoizedState),typeof i.componentDidMount=="function"&&(t.flags|=4194308)}var Vo=[],Lo=0,_d=null,$d=0,Pn=[],wn=0,Hs=null,Ei=1,Ji="";function gs(t,e){Vo[Lo++]=$d,Vo[Lo++]=_d,_d=t,$d=e}function Hb(t,e,r){Pn[wn++]=Ei,Pn[wn++]=Ji,Pn[wn++]=Hs,Hs=t;var n=Ei;t=Ji;var i=32-En(n)-1;n&=~(1<<i),r+=1;var a=32-En(e)+i;if(30<a){var s=i-i%5;a=(n&(1<<s)-1).toString(32),n>>=s,i-=s,Ei=1<<32-En(e)+i|r<<i|n,Ji=a+t}else Ei=1<<a|r<<i|n,Ji=t}function w0(t){t.return!==null&&(gs(t,1),Hb(t,1,0))}function k0(t){for(;t===_d;)_d=Vo[--Lo],Vo[Lo]=null,$d=Vo[--Lo],Vo[Lo]=null;for(;t===Hs;)Hs=Pn[--wn],Pn[wn]=null,Ji=Pn[--wn],Pn[wn]=null,Ei=Pn[--wn],Pn[wn]=null}var an=null,Fr=null,mt=!1,Fn=null;function Mb(t,e){var r=bn(5,null,null,0);r.elementType="DELETED",r.stateNode=e,r.return=t,e=t.deletions,e===null?(t.deletions=[r],t.flags|=16):e.push(r)}function Mx(t,e){switch(t.tag){case 5:var r=t.type;return e=e.nodeType!==1||r.toLowerCase()!==e.nodeName.toLowerCase()?null:e,e!==null?(t.stateNode=e,an=t,Fr=Ii(e.firstChild),!0):!1;case 6:return e=t.pendingProps===""||e.nodeType!==3?null:e,e!==null?(t.stateNode=e,an=t,Fr=null,!0):!1;case 13:return e=e.nodeType!==8?null:e,e!==null?(r=Hs!==null?{id:Ei,overflow:Ji}:null,t.memoizedState={dehydrated:e,treeContext:r,retryLane:1073741824},r=bn(18,null,null,0),r.stateNode=e,r.return=t,t.child=r,an=t,Fr=null,!0):!1;default:return!1}}function Jy(t){return(t.mode&1)!==0&&(t.flags&128)===0}function Dy(t){if(mt){var e=Fr;if(e){var r=e;if(!Mx(t,e)){if(Jy(t))throw Error(le(418));e=Ii(r.nextSibling);var n=an;e&&Mx(t,e)?Mb(n,r):(t.flags=t.flags&-4097|2,mt=!1,an=t)}}else{if(Jy(t))throw Error(le(418));t.flags=t.flags&-4097|2,mt=!1,an=t}}}function Ox(t){for(t=t.return;t!==null&&t.tag!==5&&t.tag!==3&&t.tag!==13;)t=t.return;an=t}function Gl(t){if(t!==an)return!1;if(!mt)return Ox(t),mt=!0,!1;var e;if((e=t.tag!==3)&&!(e=t.tag!==5)&&(e=t.type,e=e!=="head"&&e!=="body"&&!Oy(t.type,t.memoizedProps)),e&&(e=Fr)){if(Jy(t)){for(t=Fr;t;)t=Ii(t.nextSibling);throw Error(le(418))}for(;e;)Mb(t,e),e=Ii(e.nextSibling)}if(Ox(t),t.tag===13){if(t=t.memoizedState,t=t!==null?t.dehydrated:null,!t)throw Error(le(317));e:{for(t=t.nextSibling,e=0;t;){if(t.nodeType===8){var r=t.data;if(r==="/$"){if(e===0){Fr=Ii(t.nextSibling);break e}e--}else r!=="$"&&r!=="$!"&&r!=="$?"||e++}t=t.nextSibling}Fr=null}}else Fr=an?Ii(t.stateNode.nextSibling):null;return!0}function _o(){Fr=an=null,mt=!1}function b0(t){Fn===null?Fn=[t]:Fn.push(t)}function Kl(t,e,r){if(t=r.ref,t!==null&&typeof t!="function"&&typeof t!="object"){if(r._owner){if(r=r._owner,r){if(r.tag!==1)throw Error(le(309));var n=r.stateNode}if(!n)throw Error(le(147,t));var i=n,a=""+t;return e!==null&&e.ref!==null&&typeof e.ref=="function"&&e.ref._stringRef===a?e.ref:(e=function(s){var l=i.refs;l===Wb&&(l=i.refs={}),s===null?delete l[a]:l[a]=s},e._stringRef=a,e)}if(typeof t!="string")throw Error(le(284));if(!r._owner)throw Error(le(290,t))}return t}function Yf(t,e){throw t=Object.prototype.toString.call(e),Error(le(31,t==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":t))}function zx(t){var e=t._init;return e(t._payload)}function Ob(t){function e(P,x){if(t){var b=P.deletions;b===null?(P.deletions=[x],P.flags|=16):b.push(x)}}function r(P,x){if(!t)return null;for(;x!==null;)e(P,x),x=x.sibling;return null}function n(P,x){for(P=new Map;x!==null;)x.key!==null?P.set(x.key,x):P.set(x.index,x),x=x.sibling;return P}function i(P,x){return P=Ja(P,x),P.index=0,P.sibling=null,P}function a(P,x,b){return P.index=b,t?(b=P.alternate,b!==null?(b=b.index,b<x?(P.flags|=2,x):b):(P.flags|=2,x)):(P.flags|=1048576,x)}function s(P){return t&&P.alternate===null&&(P.flags|=2),P}function l(P,x,b,j){return x===null||x.tag!==6?(x=kv(b,P.mode,j),x.return=P,x):(x=i(x,b),x.return=P,x)}function c(P,x,b,j){var R=b.type;return R===wo?p(P,x,b.props.children,j,b.key):x!==null&&(x.elementType===R||typeof R=="object"&&R!==null&&R.$$typeof===xa&&zx(R)===x.type)?(j=i(x,b.props),j.ref=Kl(P,x,b),j.return=P,j):(j=qd(b.type,b.key,b.props,null,P.mode,j),j.ref=Kl(P,x,b),j.return=P,j)}function f(P,x,b,j){return x===null||x.tag!==4||x.stateNode.containerInfo!==b.containerInfo||x.stateNode.implementation!==b.implementation?(x=bv(b,P.mode,j),x.return=P,x):(x=i(x,b.children||[]),x.return=P,x)}function p(P,x,b,j,R){return x===null||x.tag!==7?(x=Vs(b,P.mode,j,R),x.return=P,x):(x=i(x,b),x.return=P,x)}function h(P,x,b){if(typeof x=="string"&&x!==""||typeof x=="number")return x=kv(""+x,P.mode,b),x.return=P,x;if(typeof x=="object"&&x!==null){switch(x.$$typeof){case Rf:return b=qd(x.type,x.key,x.props,null,P.mode,b),b.ref=Kl(P,null,x),b.return=P,b;case Po:return x=bv(x,P.mode,b),x.return=P,x;case xa:var j=x._init;return h(P,j(x._payload),b)}if(iu(x)||Fl(x))return x=Vs(x,P.mode,b,null),x.return=P,x;Yf(P,x)}return null}function m(P,x,b,j){var R=x!==null?x.key:null;if(typeof b=="string"&&b!==""||typeof b=="number")return R!==null?null:l(P,x,""+b,j);if(typeof b=="object"&&b!==null){switch(b.$$typeof){case Rf:return b.key===R?c(P,x,b,j):null;case Po:return b.key===R?f(P,x,b,j):null;case xa:return R=b._init,m(P,x,R(b._payload),j)}if(iu(b)||Fl(b))return R!==null?null:p(P,x,b,j,null);Yf(P,b)}return null}function g(P,x,b,j,R){if(typeof j=="string"&&j!==""||typeof j=="number")return P=P.get(b)||null,l(x,P,""+j,R);if(typeof j=="object"&&j!==null){switch(j.$$typeof){case Rf:return P=P.get(j.key===null?b:j.key)||null,c(x,P,j,R);case Po:return P=P.get(j.key===null?b:j.key)||null,f(x,P,j,R);case xa:var V=j._init;return g(P,x,b,V(j._payload),R)}if(iu(j)||Fl(j))return P=P.get(b)||null,p(x,P,j,R,null);Yf(x,j)}return null}function y(P,x,b,j){for(var R=null,V=null,N=x,H=x=0,O=null;N!==null&&H<b.length;H++){N.index>H?(O=N,N=null):O=N.sibling;var M=m(P,N,b[H],j);if(M===null){N===null&&(N=O);break}t&&N&&M.alternate===null&&e(P,N),x=a(M,x,H),V===null?R=M:V.sibling=M,V=M,N=O}if(H===b.length)return r(P,N),mt&&gs(P,H),R;if(N===null){for(;H<b.length;H++)N=h(P,b[H],j),N!==null&&(x=a(N,x,H),V===null?R=N:V.sibling=N,V=N);return mt&&gs(P,H),R}for(N=n(P,N);H<b.length;H++)O=g(N,P,H,b[H],j),O!==null&&(t&&O.alternate!==null&&N.delete(O.key===null?H:O.key),x=a(O,x,H),V===null?R=O:V.sibling=O,V=O);return t&&N.forEach(function(F){return e(P,F)}),mt&&gs(P,H),R}function k(P,x,b,j){var R=Fl(b);if(typeof R!="function")throw Error(le(150));if(b=R.call(b),b==null)throw Error(le(151));for(var V=R=null,N=x,H=x=0,O=null,M=b.next();N!==null&&!M.done;H++,M=b.next()){N.index>H?(O=N,N=null):O=N.sibling;var F=m(P,N,M.value,j);if(F===null){N===null&&(N=O);break}t&&N&&F.alternate===null&&e(P,N),x=a(F,x,H),V===null?R=F:V.sibling=F,V=F,N=O}if(M.done)return r(P,N),mt&&gs(P,H),R;if(N===null){for(;!M.done;H++,M=b.next())M=h(P,M.value,j),M!==null&&(x=a(M,x,H),V===null?R=M:V.sibling=M,V=M);return mt&&gs(P,H),R}for(N=n(P,N);!M.done;H++,M=b.next())M=g(N,P,H,M.value,j),M!==null&&(t&&M.alternate!==null&&N.delete(M.key===null?H:M.key),x=a(M,x,H),V===null?R=M:V.sibling=M,V=M);return t&&N.forEach(function(J){return e(P,J)}),mt&&gs(P,H),R}function q(P,x,b,j){if(typeof b=="object"&&b!==null&&b.type===wo&&b.key===null&&(b=b.props.children),typeof b=="object"&&b!==null){switch(b.$$typeof){case Rf:e:{for(var R=b.key,V=x;V!==null;){if(V.key===R){if(R=b.type,R===wo){if(V.tag===7){r(P,V.sibling),x=i(V,b.props.children),x.return=P,P=x;break e}}else if(V.elementType===R||typeof R=="object"&&R!==null&&R.$$typeof===xa&&zx(R)===V.type){r(P,V.sibling),x=i(V,b.props),x.ref=Kl(P,V,b),x.return=P,P=x;break e}r(P,V);break}else e(P,V);V=V.sibling}b.type===wo?(x=Vs(b.props.children,P.mode,j,b.key),x.return=P,P=x):(j=qd(b.type,b.key,b.props,null,P.mode,j),j.ref=Kl(P,x,b),j.return=P,P=j)}return s(P);case Po:e:{for(V=b.key;x!==null;){if(x.key===V)if(x.tag===4&&x.stateNode.containerInfo===b.containerInfo&&x.stateNode.implementation===b.implementation){r(P,x.sibling),x=i(x,b.children||[]),x.return=P,P=x;break e}else{r(P,x);break}else e(P,x);x=x.sibling}x=bv(b,P.mode,j),x.return=P,P=x}return s(P);case xa:return V=b._init,q(P,x,V(b._payload),j)}if(iu(b))return y(P,x,b,j);if(Fl(b))return k(P,x,b,j);Yf(P,b)}return typeof b=="string"&&b!==""||typeof b=="number"?(b=""+b,x!==null&&x.tag===6?(r(P,x.sibling),x=i(x,b),x.return=P,P=x):(r(P,x),x=kv(b,P.mode,j),x.return=P,P=x),s(P)):r(P,x)}return q}var $o=Ob(!0),zb=Ob(!1),wc={},Si=$a(wc),Bu=$a(wc),Zu=$a(wc);function bs(t){if(t===wc)throw Error(le(174));return t}function q0(t,e){switch(rt(Zu,e),rt(Bu,t),rt(Si,wc),t=e.nodeType,t){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:wy(null,"");break;default:t=t===8?e.parentNode:e,e=t.namespaceURI||null,t=t.tagName,e=wy(e,t)}lt(Si),rt(Si,e)}function el(){lt(Si),lt(Bu),lt(Zu)}function Yb(t){bs(Zu.current);var e=bs(Si.current),r=wy(e,t.type);e!==r&&(rt(Bu,t),rt(Si,r))}function T0(t){Bu.current===t&&(lt(Si),lt(Bu))}var At=$a(0);function ep(t){for(var e=t;e!==null;){if(e.tag===13){var r=e.memoizedState;if(r!==null&&(r=r.dehydrated,r===null||r.data==="$?"||r.data==="$!"))return e}else if(e.tag===19&&e.memoizedProps.revealOrder!==void 0){if((e.flags&128)!==0)return e}else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break;for(;e.sibling===null;){if(e.return===null||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}var Av=[];function j0(){for(var t=0;t<Av.length;t++)Av[t]._workInProgressVersionPrimary=null;Av.length=0}var Pd=_i.ReactCurrentDispatcher,Sv=_i.ReactCurrentBatchConfig,Ms=0,xt=null,Et=null,Xt=null,tp=!1,Su=!1,Xu=0,aU=0;function pr(){throw Error(le(321))}function R0(t,e){if(e===null)return!1;for(var r=0;r<e.length&&r<t.length;r++)if(!Jn(t[r],e[r]))return!1;return!0}function V0(t,e,r,n,i,a){if(Ms=a,xt=e,e.memoizedState=null,e.updateQueue=null,e.lanes=0,Pd.current=t===null||t.memoizedState===null?uU:cU,t=r(n,i),Su){a=0;do{if(Su=!1,Xu=0,25<=a)throw Error(le(301));a+=1,Xt=Et=null,e.updateQueue=null,Pd.current=fU,t=r(n,i)}while(Su)}if(Pd.current=rp,e=Et!==null&&Et.next!==null,Ms=0,Xt=Et=xt=null,tp=!1,e)throw Error(le(300));return t}function L0(){var t=Xu!==0;return Xu=0,t}function ui(){var t={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Xt===null?xt.memoizedState=Xt=t:Xt=Xt.next=t,Xt}function Rn(){if(Et===null){var t=xt.alternate;t=t!==null?t.memoizedState:null}else t=Et.next;var e=Xt===null?xt.memoizedState:Xt.next;if(e!==null)Xt=e,Et=t;else{if(t===null)throw Error(le(310));Et=t,t={memoizedState:Et.memoizedState,baseState:Et.baseState,baseQueue:Et.baseQueue,queue:Et.queue,next:null},Xt===null?xt.memoizedState=Xt=t:Xt=Xt.next=t}return Xt}function Qu(t,e){return typeof e=="function"?e(t):e}function xv(t){var e=Rn(),r=e.queue;if(r===null)throw Error(le(311));r.lastRenderedReducer=t;var n=Et,i=n.baseQueue,a=r.pending;if(a!==null){if(i!==null){var s=i.next;i.next=a.next,a.next=s}n.baseQueue=i=a,r.pending=null}if(i!==null){a=i.next,n=n.baseState;var l=s=null,c=null,f=a;do{var p=f.lane;if((Ms&p)===p)c!==null&&(c=c.next={lane:0,action:f.action,hasEagerState:f.hasEagerState,eagerState:f.eagerState,next:null}),n=f.hasEagerState?f.eagerState:t(n,f.action);else{var h={lane:p,action:f.action,hasEagerState:f.hasEagerState,eagerState:f.eagerState,next:null};c===null?(l=c=h,s=n):c=c.next=h,xt.lanes|=p,Os|=p}f=f.next}while(f!==null&&f!==a);c===null?s=n:c.next=l,Jn(n,e.memoizedState)||(Ir=!0),e.memoizedState=n,e.baseState=s,e.baseQueue=c,r.lastRenderedState=n}if(t=r.interleaved,t!==null){i=t;do a=i.lane,xt.lanes|=a,Os|=a,i=i.next;while(i!==t)}else i===null&&(r.lanes=0);return[e.memoizedState,r.dispatch]}function Pv(t){var e=Rn(),r=e.queue;if(r===null)throw Error(le(311));r.lastRenderedReducer=t;var n=r.dispatch,i=r.pending,a=e.memoizedState;if(i!==null){r.pending=null;var s=i=i.next;do a=t(a,s.action),s=s.next;while(s!==i);Jn(a,e.memoizedState)||(Ir=!0),e.memoizedState=a,e.baseQueue===null&&(e.baseState=a),r.lastRenderedState=a}return[a,n]}function Cb(){}function Fb(t,e){var r=xt,n=Rn(),i=e(),a=!Jn(n.memoizedState,i);if(a&&(n.memoizedState=i,Ir=!0),n=n.queue,N0(Jb.bind(null,r,n,t),[t]),n.getSnapshot!==e||a||Xt!==null&&Xt.memoizedState.tag&1){if(r.flags|=2048,_u(9,Eb.bind(null,r,n,i,e),void 0,null),Dt===null)throw Error(le(349));(Ms&30)!==0||Ib(r,e,i)}return i}function Ib(t,e,r){t.flags|=16384,t={getSnapshot:e,value:r},e=xt.updateQueue,e===null?(e={lastEffect:null,stores:null},xt.updateQueue=e,e.stores=[t]):(r=e.stores,r===null?e.stores=[t]:r.push(t))}function Eb(t,e,r,n){e.value=r,e.getSnapshot=n,Db(e)&&Tn(t,1,-1)}function Jb(t,e,r){return r(function(){Db(e)&&Tn(t,1,-1)})}function Db(t){var e=t.getSnapshot;t=t.value;try{var r=e();return!Jn(t,r)}catch{return!0}}function Yx(t){var e=ui();return typeof t=="function"&&(t=t()),e.memoizedState=e.baseState=t,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Qu,lastRenderedState:t},e.queue=t,t=t.dispatch=lU.bind(null,xt,t),[e.memoizedState,t]}function _u(t,e,r,n){return t={tag:t,create:e,destroy:r,deps:n,next:null},e=xt.updateQueue,e===null?(e={lastEffect:null,stores:null},xt.updateQueue=e,e.lastEffect=t.next=t):(r=e.lastEffect,r===null?e.lastEffect=t.next=t:(n=r.next,r.next=t,t.next=n,e.lastEffect=t)),t}function Gb(){return Rn().memoizedState}function wd(t,e,r,n){var i=ui();xt.flags|=t,i.memoizedState=_u(1|e,r,void 0,n===void 0?null:n)}function sh(t,e,r,n){var i=Rn();n=n===void 0?null:n;var a=void 0;if(Et!==null){var s=Et.memoizedState;if(a=s.destroy,n!==null&&R0(n,s.deps)){i.memoizedState=_u(e,r,a,n);return}}xt.flags|=t,i.memoizedState=_u(1|e,r,a,n)}function Cx(t,e){return wd(8390656,8,t,e)}function N0(t,e){return sh(2048,8,t,e)}function Kb(t,e){return sh(4,2,t,e)}function Bb(t,e){return sh(4,4,t,e)}function Zb(t,e){if(typeof e=="function")return t=t(),e(t),function(){e(null)};if(e!=null)return t=t(),e.current=t,function(){e.current=null}}function Xb(t,e,r){return r=r!=null?r.concat([t]):null,sh(4,4,Zb.bind(null,e,t),r)}function W0(){}function Qb(t,e){var r=Rn();e=e===void 0?null:e;var n=r.memoizedState;return n!==null&&e!==null&&R0(e,n[1])?n[0]:(r.memoizedState=[t,e],t)}function _b(t,e){var r=Rn();e=e===void 0?null:e;var n=r.memoizedState;return n!==null&&e!==null&&R0(e,n[1])?n[0]:(t=t(),r.memoizedState=[t,e],t)}function $b(t,e,r){return(Ms&21)===0?(t.baseState&&(t.baseState=!1,Ir=!0),t.memoizedState=r):(Jn(r,e)||(r=ab(),xt.lanes|=r,Os|=r,t.baseState=!0),e)}function sU(t,e){var r=De;De=r!==0&&4>r?r:4,t(!0);var n=Sv.transition;Sv.transition={};try{t(!1),e()}finally{De=r,Sv.transition=n}}function eq(){return Rn().memoizedState}function oU(t,e,r){var n=Ma(t);r={lane:n,action:r,hasEagerState:!1,eagerState:null,next:null},tq(t)?rq(e,r):(nq(t,e,r),r=jr(),t=Tn(t,n,r),t!==null&&iq(t,e,n))}function lU(t,e,r){var n=Ma(t),i={lane:n,action:r,hasEagerState:!1,eagerState:null,next:null};if(tq(t))rq(e,i);else{nq(t,e,i);var a=t.alternate;if(t.lanes===0&&(a===null||a.lanes===0)&&(a=e.lastRenderedReducer,a!==null))try{var s=e.lastRenderedState,l=a(s,r);if(i.hasEagerState=!0,i.eagerState=l,Jn(l,s))return}catch{}finally{}r=jr(),t=Tn(t,n,r),t!==null&&iq(t,e,n)}}function tq(t){var e=t.alternate;return t===xt||e!==null&&e===xt}function rq(t,e){Su=tp=!0;var r=t.pending;r===null?e.next=e:(e.next=r.next,r.next=e),t.pending=e}function nq(t,e,r){xq(t)?(t=e.interleaved,t===null?(r.next=r,In===null?In=[e]:In.push(e)):(r.next=t.next,t.next=r),e.interleaved=r):(t=e.pending,t===null?r.next=r:(r.next=t.next,t.next=r),e.pending=r)}function iq(t,e,r){if((r&4194240)!==0){var n=e.lanes;n&=t.pendingLanes,r|=n,e.lanes=r,f0(t,r)}}var rp={readContext:jn,useCallback:pr,useContext:pr,useEffect:pr,useImperativeHandle:pr,useInsertionEffect:pr,useLayoutEffect:pr,useMemo:pr,useReducer:pr,useRef:pr,useState:pr,useDebugValue:pr,useDeferredValue:pr,useTransition:pr,useMutableSource:pr,useSyncExternalStore:pr,useId:pr,unstable_isNewReconciler:!1},uU={readContext:jn,useCallback:function(t,e){return ui().memoizedState=[t,e===void 0?null:e],t},useContext:jn,useEffect:Cx,useImperativeHandle:function(t,e,r){return r=r!=null?r.concat([t]):null,wd(4194308,4,Zb.bind(null,e,t),r)},useLayoutEffect:function(t,e){return wd(4194308,4,t,e)},useInsertionEffect:function(t,e){return wd(4,2,t,e)},useMemo:function(t,e){var r=ui();return e=e===void 0?null:e,t=t(),r.memoizedState=[t,e],t},useReducer:function(t,e,r){var n=ui();return e=r!==void 0?r(e):e,n.memoizedState=n.baseState=e,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:t,lastRenderedState:e},n.queue=t,t=t.dispatch=oU.bind(null,xt,t),[n.memoizedState,t]},useRef:function(t){var e=ui();return t={current:t},e.memoizedState=t},useState:Yx,useDebugValue:W0,useDeferredValue:function(t){return ui().memoizedState=t},useTransition:function(){var t=Yx(!1),e=t[0];return t=sU.bind(null,t[1]),ui().memoizedState=t,[e,t]},useMutableSource:function(){},useSyncExternalStore:function(t,e,r){var n=xt,i=ui();if(mt){if(r===void 0)throw Error(le(407));r=r()}else{if(r=e(),Dt===null)throw Error(le(349));(Ms&30)!==0||Ib(n,e,r)}i.memoizedState=r;var a={value:r,getSnapshot:e};return i.queue=a,Cx(Jb.bind(null,n,a,t),[t]),n.flags|=2048,_u(9,Eb.bind(null,n,a,r,e),void 0,null),r},useId:function(){var t=ui(),e=Dt.identifierPrefix;if(mt){var r=Ji,n=Ei;r=(n&~(1<<32-En(n)-1)).toString(32)+r,e=":"+e+"R"+r,r=Xu++,0<r&&(e+="H"+r.toString(32)),e+=":"}else r=aU++,e=":"+e+"r"+r.toString(32)+":";return t.memoizedState=e},unstable_isNewReconciler:!1},cU={readContext:jn,useCallback:Qb,useContext:jn,useEffect:N0,useImperativeHandle:Xb,useInsertionEffect:Kb,useLayoutEffect:Bb,useMemo:_b,useReducer:xv,useRef:Gb,useState:function(){return xv(Qu)},useDebugValue:W0,useDeferredValue:function(t){var e=Rn();return $b(e,Et.memoizedState,t)},useTransition:function(){var t=xv(Qu)[0],e=Rn().memoizedState;return[t,e]},useMutableSource:Cb,useSyncExternalStore:Fb,useId:eq,unstable_isNewReconciler:!1},fU={readContext:jn,useCallback:Qb,useContext:jn,useEffect:N0,useImperativeHandle:Xb,useInsertionEffect:Kb,useLayoutEffect:Bb,useMemo:_b,useReducer:Pv,useRef:Gb,useState:function(){return Pv(Qu)},useDebugValue:W0,useDeferredValue:function(t){var e=Rn();return Et===null?e.memoizedState=t:$b(e,Et.memoizedState,t)},useTransition:function(){var t=Pv(Qu)[0],e=Rn().memoizedState;return[t,e]},useMutableSource:Cb,useSyncExternalStore:Fb,useId:eq,unstable_isNewReconciler:!1};function U0(t,e){try{var r="",n=e;do r+=YN(n),n=n.return;while(n);var i=r}catch(a){i=`
Error generating stack: `+a.message+`
`+a.stack}return{value:t,source:e,stack:i}}function Gy(t,e){try{console.error(e.value)}catch(r){setTimeout(function(){throw r})}}var dU=typeof WeakMap=="function"?WeakMap:Map;function aq(t,e,r){r=Di(-1,r),r.tag=3,r.payload={element:null};var n=e.value;return r.callback=function(){ip||(ip=!0,tg=n),Gy(t,e)},r}function sq(t,e,r){r=Di(-1,r),r.tag=3;var n=t.type.getDerivedStateFromError;if(typeof n=="function"){var i=e.value;r.payload=function(){return n(i)},r.callback=function(){Gy(t,e)}}var a=t.stateNode;return a!==null&&typeof a.componentDidCatch=="function"&&(r.callback=function(){Gy(t,e),typeof n!="function"&&(Ha===null?Ha=new Set([this]):Ha.add(this));var s=e.stack;this.componentDidCatch(e.value,{componentStack:s!==null?s:""})}),r}function Fx(t,e,r){var n=t.pingCache;if(n===null){n=t.pingCache=new dU;var i=new Set;n.set(e,i)}else i=n.get(e),i===void 0&&(i=new Set,n.set(e,i));i.has(r)||(i.add(r),t=bU.bind(null,t,e,r),e.then(t,t))}function Ix(t){do{var e;if((e=t.tag===13)&&(e=t.memoizedState,e=e!==null?e.dehydrated!==null:!0),e)return t;t=t.return}while(t!==null);return null}function Ex(t,e,r,n,i){return(t.mode&1)===0?(t===e?t.flags|=65536:(t.flags|=128,r.flags|=131072,r.flags&=-52805,r.tag===1&&(r.alternate===null?r.tag=17:(e=Di(-1,1),e.tag=2,Ua(r,e))),r.lanes|=1),t):(t.flags|=65536,t.lanes=i,t)}var oq,Ky,lq,uq;oq=function(t,e){for(var r=e.child;r!==null;){if(r.tag===5||r.tag===6)t.appendChild(r.stateNode);else if(r.tag!==4&&r.child!==null){r.child.return=r,r=r.child;continue}if(r===e)break;for(;r.sibling===null;){if(r.return===null||r.return===e)return;r=r.return}r.sibling.return=r.return,r=r.sibling}};Ky=function(){};lq=function(t,e,r,n){var i=t.memoizedProps;if(i!==n){t=e.stateNode,bs(Si.current);var a=null;switch(r){case"input":i=Ay(t,i),n=Ay(t,n),a=[];break;case"select":i=Pt({},i,{value:void 0}),n=Pt({},n,{value:void 0}),a=[];break;case"textarea":i=Py(t,i),n=Py(t,n),a=[];break;default:typeof i.onClick!="function"&&typeof n.onClick=="function"&&(t.onclick=Gd)}ky(r,n);var s;r=null;for(f in i)if(!n.hasOwnProperty(f)&&i.hasOwnProperty(f)&&i[f]!=null)if(f==="style"){var l=i[f];for(s in l)l.hasOwnProperty(s)&&(r||(r={}),r[s]="")}else f!=="dangerouslySetInnerHTML"&&f!=="children"&&f!=="suppressContentEditableWarning"&&f!=="suppressHydrationWarning"&&f!=="autoFocus"&&(Ou.hasOwnProperty(f)?a||(a=[]):(a=a||[]).push(f,null));for(f in n){var c=n[f];if(l=i!=null?i[f]:void 0,n.hasOwnProperty(f)&&c!==l&&(c!=null||l!=null))if(f==="style")if(l){for(s in l)!l.hasOwnProperty(s)||c&&c.hasOwnProperty(s)||(r||(r={}),r[s]="");for(s in c)c.hasOwnProperty(s)&&l[s]!==c[s]&&(r||(r={}),r[s]=c[s])}else r||(a||(a=[]),a.push(f,r)),r=c;else f==="dangerouslySetInnerHTML"?(c=c?c.__html:void 0,l=l?l.__html:void 0,c!=null&&l!==c&&(a=a||[]).push(f,c)):f==="children"?typeof c!="string"&&typeof c!="number"||(a=a||[]).push(f,""+c):f!=="suppressContentEditableWarning"&&f!=="suppressHydrationWarning"&&(Ou.hasOwnProperty(f)?(c!=null&&f==="onScroll"&&ot("scroll",t),a||l===c||(a=[])):(a=a||[]).push(f,c))}r&&(a=a||[]).push("style",r);var f=a;(e.updateQueue=f)&&(e.flags|=4)}};uq=function(t,e,r,n){r!==n&&(e.flags|=4)};function Bl(t,e){if(!mt)switch(t.tailMode){case"hidden":e=t.tail;for(var r=null;e!==null;)e.alternate!==null&&(r=e),e=e.sibling;r===null?t.tail=null:r.sibling=null;break;case"collapsed":r=t.tail;for(var n=null;r!==null;)r.alternate!==null&&(n=r),r=r.sibling;n===null?e||t.tail===null?t.tail=null:t.tail.sibling=null:n.sibling=null}}function hr(t){var e=t.alternate!==null&&t.alternate.child===t.child,r=0,n=0;if(e)for(var i=t.child;i!==null;)r|=i.lanes|i.childLanes,n|=i.subtreeFlags&14680064,n|=i.flags&14680064,i.return=t,i=i.sibling;else for(i=t.child;i!==null;)r|=i.lanes|i.childLanes,n|=i.subtreeFlags,n|=i.flags,i.return=t,i=i.sibling;return t.subtreeFlags|=n,t.childLanes=r,e}function pU(t,e,r){var n=e.pendingProps;switch(k0(e),e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return hr(e),null;case 1:return Jr(e.type)&&Kd(),hr(e),null;case 3:return n=e.stateNode,el(),lt(Er),lt(xr),j0(),n.pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),(t===null||t.child===null)&&(Gl(e)?e.flags|=4:t===null||t.memoizedState.isDehydrated&&(e.flags&256)===0||(e.flags|=1024,Fn!==null&&(ig(Fn),Fn=null))),Ky(t,e),hr(e),null;case 5:T0(e);var i=bs(Zu.current);if(r=e.type,t!==null&&e.stateNode!=null)lq(t,e,r,n,i),t.ref!==e.ref&&(e.flags|=512,e.flags|=2097152);else{if(!n){if(e.stateNode===null)throw Error(le(166));return hr(e),null}if(t=bs(Si.current),Gl(e)){n=e.stateNode,r=e.type;var a=e.memoizedProps;switch(n[di]=e,n[Ku]=a,t=(e.mode&1)!==0,r){case"dialog":ot("cancel",n),ot("close",n);break;case"iframe":case"object":case"embed":ot("load",n);break;case"video":case"audio":for(i=0;i<su.length;i++)ot(su[i],n);break;case"source":ot("error",n);break;case"img":case"image":case"link":ot("error",n),ot("load",n);break;case"details":ot("toggle",n);break;case"input":nx(n,a),ot("invalid",n);break;case"select":n._wrapperState={wasMultiple:!!a.multiple},ot("invalid",n);break;case"textarea":ax(n,a),ot("invalid",n)}ky(r,a),i=null;for(var s in a)if(a.hasOwnProperty(s)){var l=a[s];s==="children"?typeof l=="string"?n.textContent!==l&&(a.suppressHydrationWarning!==!0&&zf(n.textContent,l,t),i=["children",l]):typeof l=="number"&&n.textContent!==""+l&&(a.suppressHydrationWarning!==!0&&zf(n.textContent,l,t),i=["children",""+l]):Ou.hasOwnProperty(s)&&l!=null&&s==="onScroll"&&ot("scroll",n)}switch(r){case"input":Vf(n),ix(n,a,!0);break;case"textarea":Vf(n),sx(n);break;case"select":case"option":break;default:typeof a.onClick=="function"&&(n.onclick=Gd)}n=i,e.updateQueue=n,n!==null&&(e.flags|=4)}else{s=i.nodeType===9?i:i.ownerDocument,t==="http://www.w3.org/1999/xhtml"&&(t=Jk(r)),t==="http://www.w3.org/1999/xhtml"?r==="script"?(t=s.createElement("div"),t.innerHTML="<script><\/script>",t=t.removeChild(t.firstChild)):typeof n.is=="string"?t=s.createElement(r,{is:n.is}):(t=s.createElement(r),r==="select"&&(s=t,n.multiple?s.multiple=!0:n.size&&(s.size=n.size))):t=s.createElementNS(t,r),t[di]=e,t[Ku]=n,oq(t,e,!1,!1),e.stateNode=t;e:{switch(s=by(r,n),r){case"dialog":ot("cancel",t),ot("close",t),i=n;break;case"iframe":case"object":case"embed":ot("load",t),i=n;break;case"video":case"audio":for(i=0;i<su.length;i++)ot(su[i],t);i=n;break;case"source":ot("error",t),i=n;break;case"img":case"image":case"link":ot("error",t),ot("load",t),i=n;break;case"details":ot("toggle",t),i=n;break;case"input":nx(t,n),i=Ay(t,n),ot("invalid",t);break;case"option":i=n;break;case"select":t._wrapperState={wasMultiple:!!n.multiple},i=Pt({},n,{value:void 0}),ot("invalid",t);break;case"textarea":ax(t,n),i=Py(t,n),ot("invalid",t);break;default:i=n}ky(r,i),l=i;for(a in l)if(l.hasOwnProperty(a)){var c=l[a];a==="style"?Kk(t,c):a==="dangerouslySetInnerHTML"?(c=c?c.__html:void 0,c!=null&&Dk(t,c)):a==="children"?typeof c=="string"?(r!=="textarea"||c!=="")&&zu(t,c):typeof c=="number"&&zu(t,""+c):a!=="suppressContentEditableWarning"&&a!=="suppressHydrationWarning"&&a!=="autoFocus"&&(Ou.hasOwnProperty(a)?c!=null&&a==="onScroll"&&ot("scroll",t):c!=null&&a0(t,a,c,s))}switch(r){case"input":Vf(t),ix(t,n,!1);break;case"textarea":Vf(t),sx(t);break;case"option":n.value!=null&&t.setAttribute("value",""+Ia(n.value));break;case"select":t.multiple=!!n.multiple,a=n.value,a!=null?zo(t,!!n.multiple,a,!1):n.defaultValue!=null&&zo(t,!!n.multiple,n.defaultValue,!0);break;default:typeof i.onClick=="function"&&(t.onclick=Gd)}switch(r){case"button":case"input":case"select":case"textarea":n=!!n.autoFocus;break e;case"img":n=!0;break e;default:n=!1}}n&&(e.flags|=4)}e.ref!==null&&(e.flags|=512,e.flags|=2097152)}return hr(e),null;case 6:if(t&&e.stateNode!=null)uq(t,e,t.memoizedProps,n);else{if(typeof n!="string"&&e.stateNode===null)throw Error(le(166));if(r=bs(Zu.current),bs(Si.current),Gl(e)){if(n=e.stateNode,r=e.memoizedProps,n[di]=e,(a=n.nodeValue!==r)&&(t=an,t!==null))switch(t.tag){case 3:zf(n.nodeValue,r,(t.mode&1)!==0);break;case 5:t.memoizedProps.suppressHydrationWarning!==!0&&zf(n.nodeValue,r,(t.mode&1)!==0)}a&&(e.flags|=4)}else n=(r.nodeType===9?r:r.ownerDocument).createTextNode(n),n[di]=e,e.stateNode=n}return hr(e),null;case 13:if(lt(At),n=e.memoizedState,mt&&Fr!==null&&(e.mode&1)!==0&&(e.flags&128)===0){for(n=Fr;n;)n=Ii(n.nextSibling);return _o(),e.flags|=98560,e}if(n!==null&&n.dehydrated!==null){if(n=Gl(e),t===null){if(!n)throw Error(le(318));if(n=e.memoizedState,n=n!==null?n.dehydrated:null,!n)throw Error(le(317));n[di]=e}else _o(),(e.flags&128)===0&&(e.memoizedState=null),e.flags|=4;return hr(e),null}return Fn!==null&&(ig(Fn),Fn=null),(e.flags&128)!==0?(e.lanes=r,e):(n=n!==null,r=!1,t===null?Gl(e):r=t.memoizedState!==null,n!==r&&n&&(e.child.flags|=8192,(e.mode&1)!==0&&(t===null||(At.current&1)!==0?Jt===0&&(Jt=3):C0())),e.updateQueue!==null&&(e.flags|=4),hr(e),null);case 4:return el(),Ky(t,e),t===null&&Du(e.stateNode.containerInfo),hr(e),null;case 10:return x0(e.type._context),hr(e),null;case 17:return Jr(e.type)&&Kd(),hr(e),null;case 19:if(lt(At),a=e.memoizedState,a===null)return hr(e),null;if(n=(e.flags&128)!==0,s=a.rendering,s===null)if(n)Bl(a,!1);else{if(Jt!==0||t!==null&&(t.flags&128)!==0)for(t=e.child;t!==null;){if(s=ep(t),s!==null){for(e.flags|=128,Bl(a,!1),n=s.updateQueue,n!==null&&(e.updateQueue=n,e.flags|=4),e.subtreeFlags=0,n=r,r=e.child;r!==null;)a=r,t=n,a.flags&=14680066,s=a.alternate,s===null?(a.childLanes=0,a.lanes=t,a.child=null,a.subtreeFlags=0,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null,a.stateNode=null):(a.childLanes=s.childLanes,a.lanes=s.lanes,a.child=s.child,a.subtreeFlags=0,a.deletions=null,a.memoizedProps=s.memoizedProps,a.memoizedState=s.memoizedState,a.updateQueue=s.updateQueue,a.type=s.type,t=s.dependencies,a.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext}),r=r.sibling;return rt(At,At.current&1|2),e.child}t=t.sibling}a.tail!==null&&Nt()>tl&&(e.flags|=128,n=!0,Bl(a,!1),e.lanes=4194304)}else{if(!n)if(t=ep(s),t!==null){if(e.flags|=128,n=!0,r=t.updateQueue,r!==null&&(e.updateQueue=r,e.flags|=4),Bl(a,!0),a.tail===null&&a.tailMode==="hidden"&&!s.alternate&&!mt)return hr(e),null}else 2*Nt()-a.renderingStartTime>tl&&r!==1073741824&&(e.flags|=128,n=!0,Bl(a,!1),e.lanes=4194304);a.isBackwards?(s.sibling=e.child,e.child=s):(r=a.last,r!==null?r.sibling=s:e.child=s,a.last=s)}return a.tail!==null?(e=a.tail,a.rendering=e,a.tail=e.sibling,a.renderingStartTime=Nt(),e.sibling=null,r=At.current,rt(At,n?r&1|2:r&1),e):(hr(e),null);case 22:case 23:return Y0(),n=e.memoizedState!==null,t!==null&&t.memoizedState!==null!==n&&(e.flags|=8192),n&&(e.mode&1)!==0?(en&1073741824)!==0&&(hr(e),e.subtreeFlags&6&&(e.flags|=8192)):hr(e),null;case 24:return null;case 25:return null}throw Error(le(156,e.tag))}var hU=_i.ReactCurrentOwner,Ir=!1;function Tr(t,e,r,n){e.child=t===null?zb(e,null,r,n):$o(e,t.child,r,n)}function Jx(t,e,r,n,i){r=r.render;var a=e.ref;return Io(e,i),n=V0(t,e,r,n,a,i),r=L0(),t!==null&&!Ir?(e.updateQueue=t.updateQueue,e.flags&=-2053,t.lanes&=~i,Xi(t,e,i)):(mt&&r&&w0(e),e.flags|=1,Tr(t,e,n,i),e.child)}function Dx(t,e,r,n,i){if(t===null){var a=r.type;return typeof a=="function"&&!F0(a)&&a.defaultProps===void 0&&r.compare===null&&r.defaultProps===void 0?(e.tag=15,e.type=a,cq(t,e,a,n,i)):(t=qd(r.type,null,n,e,e.mode,i),t.ref=e.ref,t.return=e,e.child=t)}if(a=t.child,(t.lanes&i)===0){var s=a.memoizedProps;if(r=r.compare,r=r!==null?r:Ju,r(s,n)&&t.ref===e.ref)return Xi(t,e,i)}return e.flags|=1,t=Ja(a,n),t.ref=e.ref,t.return=e,e.child=t}function cq(t,e,r,n,i){if(t!==null){var a=t.memoizedProps;if(Ju(a,n)&&t.ref===e.ref)if(Ir=!1,e.pendingProps=n=a,(t.lanes&i)!==0)(t.flags&131072)!==0&&(Ir=!0);else return e.lanes=t.lanes,Xi(t,e,i)}return By(t,e,r,n,i)}function fq(t,e,r){var n=e.pendingProps,i=n.children,a=t!==null?t.memoizedState:null;if(n.mode==="hidden")if((e.mode&1)===0)e.memoizedState={baseLanes:0,cachePool:null,transitions:null},rt(Wo,en),en|=r;else if((r&1073741824)!==0)e.memoizedState={baseLanes:0,cachePool:null,transitions:null},n=a!==null?a.baseLanes:r,rt(Wo,en),en|=n;else return t=a!==null?a.baseLanes|r:r,e.lanes=e.childLanes=1073741824,e.memoizedState={baseLanes:t,cachePool:null,transitions:null},e.updateQueue=null,rt(Wo,en),en|=t,null;else a!==null?(n=a.baseLanes|r,e.memoizedState=null):n=r,rt(Wo,en),en|=n;return Tr(t,e,i,r),e.child}function dq(t,e){var r=e.ref;(t===null&&r!==null||t!==null&&t.ref!==r)&&(e.flags|=512,e.flags|=2097152)}function By(t,e,r,n,i){var a=Jr(r)?Us:xr.current;return a=Qo(e,a),Io(e,i),r=V0(t,e,r,n,a,i),n=L0(),t!==null&&!Ir?(e.updateQueue=t.updateQueue,e.flags&=-2053,t.lanes&=~i,Xi(t,e,i)):(mt&&n&&w0(e),e.flags|=1,Tr(t,e,r,i),e.child)}function Gx(t,e,r,n,i){if(Jr(r)){var a=!0;Bd(e)}else a=!1;if(Io(e,i),e.stateNode===null)t!==null&&(t.alternate=null,e.alternate=null,e.flags|=2),Ub(e,r,n),Ey(e,r,n,i),n=!0;else if(t===null){var s=e.stateNode,l=e.memoizedProps;s.props=l;var c=s.context,f=r.contextType;typeof f=="object"&&f!==null?f=jn(f):(f=Jr(r)?Us:xr.current,f=Qo(e,f));var p=r.getDerivedStateFromProps,h=typeof p=="function"||typeof s.getSnapshotBeforeUpdate=="function";h||typeof s.UNSAFE_componentWillReceiveProps!="function"&&typeof s.componentWillReceiveProps!="function"||(l!==n||c!==f)&&Hx(e,s,n,f),Pa=!1;var m=e.memoizedState;s.state=m,Qd(e,n,s,i),c=e.memoizedState,l!==n||m!==c||Er.current||Pa?(typeof p=="function"&&(Iy(e,r,p,n),c=e.memoizedState),(l=Pa||Ux(e,r,l,n,m,c,f))?(h||typeof s.UNSAFE_componentWillMount!="function"&&typeof s.componentWillMount!="function"||(typeof s.componentWillMount=="function"&&s.componentWillMount(),typeof s.UNSAFE_componentWillMount=="function"&&s.UNSAFE_componentWillMount()),typeof s.componentDidMount=="function"&&(e.flags|=4194308)):(typeof s.componentDidMount=="function"&&(e.flags|=4194308),e.memoizedProps=n,e.memoizedState=c),s.props=n,s.state=c,s.context=f,n=l):(typeof s.componentDidMount=="function"&&(e.flags|=4194308),n=!1)}else{s=e.stateNode,Nb(t,e),l=e.memoizedProps,f=e.type===e.elementType?l:Yn(e.type,l),s.props=f,h=e.pendingProps,m=s.context,c=r.contextType,typeof c=="object"&&c!==null?c=jn(c):(c=Jr(r)?Us:xr.current,c=Qo(e,c));var g=r.getDerivedStateFromProps;(p=typeof g=="function"||typeof s.getSnapshotBeforeUpdate=="function")||typeof s.UNSAFE_componentWillReceiveProps!="function"&&typeof s.componentWillReceiveProps!="function"||(l!==h||m!==c)&&Hx(e,s,n,c),Pa=!1,m=e.memoizedState,s.state=m,Qd(e,n,s,i);var y=e.memoizedState;l!==h||m!==y||Er.current||Pa?(typeof g=="function"&&(Iy(e,r,g,n),y=e.memoizedState),(f=Pa||Ux(e,r,f,n,m,y,c)||!1)?(p||typeof s.UNSAFE_componentWillUpdate!="function"&&typeof s.componentWillUpdate!="function"||(typeof s.componentWillUpdate=="function"&&s.componentWillUpdate(n,y,c),typeof s.UNSAFE_componentWillUpdate=="function"&&s.UNSAFE_componentWillUpdate(n,y,c)),typeof s.componentDidUpdate=="function"&&(e.flags|=4),typeof s.getSnapshotBeforeUpdate=="function"&&(e.flags|=1024)):(typeof s.componentDidUpdate!="function"||l===t.memoizedProps&&m===t.memoizedState||(e.flags|=4),typeof s.getSnapshotBeforeUpdate!="function"||l===t.memoizedProps&&m===t.memoizedState||(e.flags|=1024),e.memoizedProps=n,e.memoizedState=y),s.props=n,s.state=y,s.context=c,n=f):(typeof s.componentDidUpdate!="function"||l===t.memoizedProps&&m===t.memoizedState||(e.flags|=4),typeof s.getSnapshotBeforeUpdate!="function"||l===t.memoizedProps&&m===t.memoizedState||(e.flags|=1024),n=!1)}return Zy(t,e,r,n,a,i)}function Zy(t,e,r,n,i,a){dq(t,e);var s=(e.flags&128)!==0;if(!n&&!s)return i&&Lx(e,r,!1),Xi(t,e,a);n=e.stateNode,hU.current=e;var l=s&&typeof r.getDerivedStateFromError!="function"?null:n.render();return e.flags|=1,t!==null&&s?(e.child=$o(e,t.child,null,a),e.child=$o(e,null,l,a)):Tr(t,e,l,a),e.memoizedState=n.state,i&&Lx(e,r,!0),e.child}function pq(t){var e=t.stateNode;e.pendingContext?Vx(t,e.pendingContext,e.pendingContext!==e.context):e.context&&Vx(t,e.context,!1),q0(t,e.containerInfo)}function Kx(t,e,r,n,i){return _o(),b0(i),e.flags|=256,Tr(t,e,r,n),e.child}var Cf={dehydrated:null,treeContext:null,retryLane:0};function Ff(t){return{baseLanes:t,cachePool:null,transitions:null}}function Bx(t,e){return{baseLanes:t.baseLanes|e,cachePool:null,transitions:t.transitions}}function hq(t,e,r){var n=e.pendingProps,i=At.current,a=!1,s=(e.flags&128)!==0,l;if((l=s)||(l=t!==null&&t.memoizedState===null?!1:(i&2)!==0),l?(a=!0,e.flags&=-129):(t===null||t.memoizedState!==null)&&(i|=1),rt(At,i&1),t===null)return Dy(e),t=e.memoizedState,t!==null&&(t=t.dehydrated,t!==null)?((e.mode&1)===0?e.lanes=1:t.data==="$!"?e.lanes=8:e.lanes=1073741824,null):(i=n.children,t=n.fallback,a?(n=e.mode,a=e.child,i={mode:"hidden",children:i},(n&1)===0&&a!==null?(a.childLanes=0,a.pendingProps=i):a=op(i,n,0,null),t=Vs(t,n,r,null),a.return=e,t.return=e,a.sibling=t,e.child=a,e.child.memoizedState=Ff(r),e.memoizedState=Cf,t):Xy(e,i));if(i=t.memoizedState,i!==null){if(l=i.dehydrated,l!==null){if(s)return e.flags&256?(e.flags&=-257,If(t,e,r,Error(le(422)))):e.memoizedState!==null?(e.child=t.child,e.flags|=128,null):(a=n.fallback,i=e.mode,n=op({mode:"visible",children:n.children},i,0,null),a=Vs(a,i,r,null),a.flags|=2,n.return=e,a.return=e,n.sibling=a,e.child=n,(e.mode&1)!==0&&$o(e,t.child,null,r),e.child.memoizedState=Ff(r),e.memoizedState=Cf,a);if((e.mode&1)===0)e=If(t,e,r,null);else if(l.data==="$!")e=If(t,e,r,Error(le(419)));else if(n=(r&t.childLanes)!==0,Ir||n){if(n=Dt,n!==null){switch(r&-r){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}n=(a&(n.suspendedLanes|r))!==0?0:a,n!==0&&n!==i.retryLane&&(i.retryLane=n,Tn(t,n,-1))}C0(),e=If(t,e,r,Error(le(421)))}else l.data==="$?"?(e.flags|=128,e.child=t.child,e=qU.bind(null,t),l._reactRetry=e,e=null):(r=i.treeContext,Fr=Ii(l.nextSibling),an=e,mt=!0,Fn=null,r!==null&&(Pn[wn++]=Ei,Pn[wn++]=Ji,Pn[wn++]=Hs,Ei=r.id,Ji=r.overflow,Hs=e),e=Xy(e,e.pendingProps.children),e.flags|=4096);return e}return a?(n=Xx(t,e,n.children,n.fallback,r),a=e.child,i=t.child.memoizedState,a.memoizedState=i===null?Ff(r):Bx(i,r),a.childLanes=t.childLanes&~r,e.memoizedState=Cf,n):(r=Zx(t,e,n.children,r),e.memoizedState=null,r)}return a?(n=Xx(t,e,n.children,n.fallback,r),a=e.child,i=t.child.memoizedState,a.memoizedState=i===null?Ff(r):Bx(i,r),a.childLanes=t.childLanes&~r,e.memoizedState=Cf,n):(r=Zx(t,e,n.children,r),e.memoizedState=null,r)}function Xy(t,e){return e=op({mode:"visible",children:e},t.mode,0,null),e.return=t,t.child=e}function Zx(t,e,r,n){var i=t.child;return t=i.sibling,r=Ja(i,{mode:"visible",children:r}),(e.mode&1)===0&&(r.lanes=n),r.return=e,r.sibling=null,t!==null&&(n=e.deletions,n===null?(e.deletions=[t],e.flags|=16):n.push(t)),e.child=r}function Xx(t,e,r,n,i){var a=e.mode;t=t.child;var s=t.sibling,l={mode:"hidden",children:r};return(a&1)===0&&e.child!==t?(r=e.child,r.childLanes=0,r.pendingProps=l,e.deletions=null):(r=Ja(t,l),r.subtreeFlags=t.subtreeFlags&14680064),s!==null?n=Ja(s,n):(n=Vs(n,a,i,null),n.flags|=2),n.return=e,r.return=e,r.sibling=n,e.child=r,n}function If(t,e,r,n){return n!==null&&b0(n),$o(e,t.child,null,r),t=Xy(e,e.pendingProps.children),t.flags|=2,e.memoizedState=null,t}function Qx(t,e,r){t.lanes|=e;var n=t.alternate;n!==null&&(n.lanes|=e),Fy(t.return,e,r)}function wv(t,e,r,n,i){var a=t.memoizedState;a===null?t.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:n,tail:r,tailMode:i}:(a.isBackwards=e,a.rendering=null,a.renderingStartTime=0,a.last=n,a.tail=r,a.tailMode=i)}function mq(t,e,r){var n=e.pendingProps,i=n.revealOrder,a=n.tail;if(Tr(t,e,n.children,r),n=At.current,(n&2)!==0)n=n&1|2,e.flags|=128;else{if(t!==null&&(t.flags&128)!==0)e:for(t=e.child;t!==null;){if(t.tag===13)t.memoizedState!==null&&Qx(t,r,e);else if(t.tag===19)Qx(t,r,e);else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break e;for(;t.sibling===null;){if(t.return===null||t.return===e)break e;t=t.return}t.sibling.return=t.return,t=t.sibling}n&=1}if(rt(At,n),(e.mode&1)===0)e.memoizedState=null;else switch(i){case"forwards":for(r=e.child,i=null;r!==null;)t=r.alternate,t!==null&&ep(t)===null&&(i=r),r=r.sibling;r=i,r===null?(i=e.child,e.child=null):(i=r.sibling,r.sibling=null),wv(e,!1,i,r,a);break;case"backwards":for(r=null,i=e.child,e.child=null;i!==null;){if(t=i.alternate,t!==null&&ep(t)===null){e.child=i;break}t=i.sibling,i.sibling=r,r=i,i=t}wv(e,!0,r,null,a);break;case"together":wv(e,!1,null,null,void 0);break;default:e.memoizedState=null}return e.child}function Xi(t,e,r){if(t!==null&&(e.dependencies=t.dependencies),Os|=e.lanes,(r&e.childLanes)===0)return null;if(t!==null&&e.child!==t.child)throw Error(le(153));if(e.child!==null){for(t=e.child,r=Ja(t,t.pendingProps),e.child=r,r.return=e;t.sibling!==null;)t=t.sibling,r=r.sibling=Ja(t,t.pendingProps),r.return=e;r.sibling=null}return e.child}function mU(t,e,r){switch(e.tag){case 3:pq(e),_o();break;case 5:Yb(e);break;case 1:Jr(e.type)&&Bd(e);break;case 4:q0(e,e.stateNode.containerInfo);break;case 10:var n=e.type._context,i=e.memoizedProps.value;rt(Zd,n._currentValue),n._currentValue=i;break;case 13:if(n=e.memoizedState,n!==null)return n.dehydrated!==null?(rt(At,At.current&1),e.flags|=128,null):(r&e.child.childLanes)!==0?hq(t,e,r):(rt(At,At.current&1),t=Xi(t,e,r),t!==null?t.sibling:null);rt(At,At.current&1);break;case 19:if(n=(r&e.childLanes)!==0,(t.flags&128)!==0){if(n)return mq(t,e,r);e.flags|=128}if(i=e.memoizedState,i!==null&&(i.rendering=null,i.tail=null,i.lastEffect=null),rt(At,At.current),n)break;return null;case 22:case 23:return e.lanes=0,fq(t,e,r)}return Xi(t,e,r)}function vU(t,e){switch(k0(e),e.tag){case 1:return Jr(e.type)&&Kd(),t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 3:return el(),lt(Er),lt(xr),j0(),t=e.flags,(t&65536)!==0&&(t&128)===0?(e.flags=t&-65537|128,e):null;case 5:return T0(e),null;case 13:if(lt(At),t=e.memoizedState,t!==null&&t.dehydrated!==null){if(e.alternate===null)throw Error(le(340));_o()}return t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 19:return lt(At),null;case 4:return el(),null;case 10:return x0(e.type._context),null;case 22:case 23:return Y0(),null;case 24:return null;default:return null}}var Ef=!1,gr=!1,yU=typeof WeakSet=="function"?WeakSet:Set,ve=null;function No(t,e){var r=t.ref;if(r!==null)if(typeof r=="function")try{r(null)}catch(n){jt(t,e,n)}else r.current=null}function Qy(t,e,r){try{r()}catch(n){jt(t,e,n)}}var _x=!1;function gU(t,e){if(Hy=Ed,t=xb(),g0(t)){if("selectionStart"in t)var r={start:t.selectionStart,end:t.selectionEnd};else e:{r=(r=t.ownerDocument)&&r.defaultView||window;var n=r.getSelection&&r.getSelection();if(n&&n.rangeCount!==0){r=n.anchorNode;var i=n.anchorOffset,a=n.focusNode;n=n.focusOffset;try{r.nodeType,a.nodeType}catch{r=null;break e}var s=0,l=-1,c=-1,f=0,p=0,h=t,m=null;t:for(;;){for(var g;h!==r||i!==0&&h.nodeType!==3||(l=s+i),h!==a||n!==0&&h.nodeType!==3||(c=s+n),h.nodeType===3&&(s+=h.nodeValue.length),(g=h.firstChild)!==null;)m=h,h=g;for(;;){if(h===t)break t;if(m===r&&++f===i&&(l=s),m===a&&++p===n&&(c=s),(g=h.nextSibling)!==null)break;h=m,m=h.parentNode}h=g}r=l===-1||c===-1?null:{start:l,end:c}}else r=null}r=r||{start:0,end:0}}else r=null;for(My={focusedElem:t,selectionRange:r},Ed=!1,ve=e;ve!==null;)if(e=ve,t=e.child,(e.subtreeFlags&1028)!==0&&t!==null)t.return=e,ve=t;else for(;ve!==null;){e=ve;try{var y=e.alternate;if((e.flags&1024)!==0)switch(e.tag){case 0:case 11:case 15:break;case 1:if(y!==null){var k=y.memoizedProps,q=y.memoizedState,P=e.stateNode,x=P.getSnapshotBeforeUpdate(e.elementType===e.type?k:Yn(e.type,k),q);P.__reactInternalSnapshotBeforeUpdate=x}break;case 3:var b=e.stateNode.containerInfo;if(b.nodeType===1)b.textContent="";else if(b.nodeType===9){var j=b.body;j!=null&&(j.textContent="")}break;case 5:case 6:case 4:case 17:break;default:throw Error(le(163))}}catch(R){jt(e,e.return,R)}if(t=e.sibling,t!==null){t.return=e.return,ve=t;break}ve=e.return}return y=_x,_x=!1,y}function xu(t,e,r){var n=e.updateQueue;if(n=n!==null?n.lastEffect:null,n!==null){var i=n=n.next;do{if((i.tag&t)===t){var a=i.destroy;i.destroy=void 0,a!==void 0&&Qy(e,r,a)}i=i.next}while(i!==n)}}function oh(t,e){if(e=e.updateQueue,e=e!==null?e.lastEffect:null,e!==null){var r=e=e.next;do{if((r.tag&t)===t){var n=r.create;r.destroy=n()}r=r.next}while(r!==e)}}function _y(t){var e=t.ref;if(e!==null){var r=t.stateNode;switch(t.tag){case 5:t=r;break;default:t=r}typeof e=="function"?e(t):e.current=t}}function vq(t){var e=t.alternate;e!==null&&(t.alternate=null,vq(e)),t.child=null,t.deletions=null,t.sibling=null,t.tag===5&&(e=t.stateNode,e!==null&&(delete e[di],delete e[Ku],delete e[Yy],delete e[tU],delete e[rU])),t.stateNode=null,t.return=null,t.dependencies=null,t.memoizedProps=null,t.memoizedState=null,t.pendingProps=null,t.stateNode=null,t.updateQueue=null}function yq(t){return t.tag===5||t.tag===3||t.tag===4}function $x(t){e:for(;;){for(;t.sibling===null;){if(t.return===null||yq(t.return))return null;t=t.return}for(t.sibling.return=t.return,t=t.sibling;t.tag!==5&&t.tag!==6&&t.tag!==18;){if(t.flags&2||t.child===null||t.tag===4)continue e;t.child.return=t,t=t.child}if(!(t.flags&2))return t.stateNode}}function $y(t,e,r){var n=t.tag;if(n===5||n===6)t=t.stateNode,e?r.nodeType===8?r.parentNode.insertBefore(t,e):r.insertBefore(t,e):(r.nodeType===8?(e=r.parentNode,e.insertBefore(t,r)):(e=r,e.appendChild(t)),r=r._reactRootContainer,r!=null||e.onclick!==null||(e.onclick=Gd));else if(n!==4&&(t=t.child,t!==null))for($y(t,e,r),t=t.sibling;t!==null;)$y(t,e,r),t=t.sibling}function eg(t,e,r){var n=t.tag;if(n===5||n===6)t=t.stateNode,e?r.insertBefore(t,e):r.appendChild(t);else if(n!==4&&(t=t.child,t!==null))for(eg(t,e,r),t=t.sibling;t!==null;)eg(t,e,r),t=t.sibling}var nr=null,Cn=!1;function va(t,e,r){for(r=r.child;r!==null;)gq(t,e,r),r=r.sibling}function gq(t,e,r){if(Ai&&typeof Ai.onCommitFiberUnmount=="function")try{Ai.onCommitFiberUnmount($p,r)}catch{}switch(r.tag){case 5:gr||No(r,e);case 6:var n=nr,i=Cn;nr=null,va(t,e,r),nr=n,Cn=i,nr!==null&&(Cn?(t=nr,r=r.stateNode,t.nodeType===8?t.parentNode.removeChild(r):t.removeChild(r)):nr.removeChild(r.stateNode));break;case 18:nr!==null&&(Cn?(t=nr,r=r.stateNode,t.nodeType===8?yv(t.parentNode,r):t.nodeType===1&&yv(t,r),Iu(t)):yv(nr,r.stateNode));break;case 4:n=nr,i=Cn,nr=r.stateNode.containerInfo,Cn=!0,va(t,e,r),nr=n,Cn=i;break;case 0:case 11:case 14:case 15:if(!gr&&(n=r.updateQueue,n!==null&&(n=n.lastEffect,n!==null))){i=n=n.next;do{var a=i,s=a.destroy;a=a.tag,s!==void 0&&((a&2)!==0||(a&4)!==0)&&Qy(r,e,s),i=i.next}while(i!==n)}va(t,e,r);break;case 1:if(!gr&&(No(r,e),n=r.stateNode,typeof n.componentWillUnmount=="function"))try{n.props=r.memoizedProps,n.state=r.memoizedState,n.componentWillUnmount()}catch(l){jt(r,e,l)}va(t,e,r);break;case 21:va(t,e,r);break;case 22:r.mode&1?(gr=(n=gr)||r.memoizedState!==null,va(t,e,r),gr=n):va(t,e,r);break;default:va(t,e,r)}}function eP(t){var e=t.updateQueue;if(e!==null){t.updateQueue=null;var r=t.stateNode;r===null&&(r=t.stateNode=new yU),e.forEach(function(n){var i=TU.bind(null,t,n);r.has(n)||(r.add(n),n.then(i,i))})}}function On(t,e){var r=e.deletions;if(r!==null)for(var n=0;n<r.length;n++){var i=r[n];try{var a=t,s=e,l=s;e:for(;l!==null;){switch(l.tag){case 5:nr=l.stateNode,Cn=!1;break e;case 3:nr=l.stateNode.containerInfo,Cn=!0;break e;case 4:nr=l.stateNode.containerInfo,Cn=!0;break e}l=l.return}if(nr===null)throw Error(le(160));gq(a,s,i),nr=null,Cn=!1;var c=i.alternate;c!==null&&(c.return=null),i.return=null}catch(f){jt(i,e,f)}}if(e.subtreeFlags&12854)for(e=e.child;e!==null;)Aq(e,t),e=e.sibling}function Aq(t,e){var r=t.alternate,n=t.flags;switch(t.tag){case 0:case 11:case 14:case 15:if(On(e,t),oi(t),n&4){try{xu(3,t,t.return),oh(3,t)}catch(y){jt(t,t.return,y)}try{xu(5,t,t.return)}catch(y){jt(t,t.return,y)}}break;case 1:On(e,t),oi(t),n&512&&r!==null&&No(r,r.return);break;case 5:if(On(e,t),oi(t),n&512&&r!==null&&No(r,r.return),t.flags&32){var i=t.stateNode;try{zu(i,"")}catch(y){jt(t,t.return,y)}}if(n&4&&(i=t.stateNode,i!=null)){var a=t.memoizedProps,s=r!==null?r.memoizedProps:a,l=t.type,c=t.updateQueue;if(t.updateQueue=null,c!==null)try{l==="input"&&a.type==="radio"&&a.name!=null&&Ik(i,a),by(l,s);var f=by(l,a);for(s=0;s<c.length;s+=2){var p=c[s],h=c[s+1];p==="style"?Kk(i,h):p==="dangerouslySetInnerHTML"?Dk(i,h):p==="children"?zu(i,h):a0(i,p,h,f)}switch(l){case"input":Sy(i,a);break;case"textarea":Ek(i,a);break;case"select":var m=i._wrapperState.wasMultiple;i._wrapperState.wasMultiple=!!a.multiple;var g=a.value;g!=null?zo(i,!!a.multiple,g,!1):m!==!!a.multiple&&(a.defaultValue!=null?zo(i,!!a.multiple,a.defaultValue,!0):zo(i,!!a.multiple,a.multiple?[]:"",!1))}i[Ku]=a}catch(y){jt(t,t.return,y)}}break;case 6:if(On(e,t),oi(t),n&4){if(t.stateNode===null)throw Error(le(162));f=t.stateNode,p=t.memoizedProps;try{f.nodeValue=p}catch(y){jt(t,t.return,y)}}break;case 3:if(On(e,t),oi(t),n&4&&r!==null&&r.memoizedState.isDehydrated)try{Iu(e.containerInfo)}catch(y){jt(t,t.return,y)}break;case 4:On(e,t),oi(t);break;case 13:On(e,t),oi(t),f=t.child,f.flags&8192&&f.memoizedState!==null&&(f.alternate===null||f.alternate.memoizedState===null)&&(O0=Nt()),n&4&&eP(t);break;case 22:if(f=r!==null&&r.memoizedState!==null,t.mode&1?(gr=(p=gr)||f,On(e,t),gr=p):On(e,t),oi(t),n&8192){p=t.memoizedState!==null;e:for(h=null,m=t;;){if(m.tag===5){if(h===null){h=m;try{i=m.stateNode,p?(a=i.style,typeof a.setProperty=="function"?a.setProperty("display","none","important"):a.display="none"):(l=m.stateNode,c=m.memoizedProps.style,s=c!=null&&c.hasOwnProperty("display")?c.display:null,l.style.display=Gk("display",s))}catch(y){jt(t,t.return,y)}}}else if(m.tag===6){if(h===null)try{m.stateNode.nodeValue=p?"":m.memoizedProps}catch(y){jt(t,t.return,y)}}else if((m.tag!==22&&m.tag!==23||m.memoizedState===null||m===t)&&m.child!==null){m.child.return=m,m=m.child;continue}if(m===t)break e;for(;m.sibling===null;){if(m.return===null||m.return===t)break e;h===m&&(h=null),m=m.return}h===m&&(h=null),m.sibling.return=m.return,m=m.sibling}if(p&&!f&&(t.mode&1)!==0)for(ve=t,t=t.child;t!==null;){for(f=ve=t;ve!==null;){switch(p=ve,h=p.child,p.tag){case 0:case 11:case 14:case 15:xu(4,p,p.return);break;case 1:if(No(p,p.return),a=p.stateNode,typeof a.componentWillUnmount=="function"){m=p,g=p.return;try{i=m,a.props=i.memoizedProps,a.state=i.memoizedState,a.componentWillUnmount()}catch(y){jt(m,g,y)}}break;case 5:No(p,p.return);break;case 22:if(p.memoizedState!==null){rP(f);continue}}h!==null?(h.return=p,ve=h):rP(f)}t=t.sibling}}break;case 19:On(e,t),oi(t),n&4&&eP(t);break;case 21:break;default:On(e,t),oi(t)}}function oi(t){var e=t.flags;if(e&2){try{e:{for(var r=t.return;r!==null;){if(yq(r)){var n=r;break e}r=r.return}throw Error(le(160))}switch(n.tag){case 5:var i=n.stateNode;n.flags&32&&(zu(i,""),n.flags&=-33);var a=$x(t);eg(t,a,i);break;case 3:case 4:var s=n.stateNode.containerInfo,l=$x(t);$y(t,l,s);break;default:throw Error(le(161))}}catch(c){jt(t,t.return,c)}t.flags&=-3}e&4096&&(t.flags&=-4097)}function AU(t,e,r){ve=t,Sq(t)}function Sq(t,e,r){for(var n=(t.mode&1)!==0;ve!==null;){var i=ve,a=i.child;if(i.tag===22&&n){var s=i.memoizedState!==null||Ef;if(!s){var l=i.alternate,c=l!==null&&l.memoizedState!==null||gr;l=Ef;var f=gr;if(Ef=s,(gr=c)&&!f)for(ve=i;ve!==null;)s=ve,c=s.child,s.tag===22&&s.memoizedState!==null?nP(i):c!==null?(c.return=s,ve=c):nP(i);for(;a!==null;)ve=a,Sq(a),a=a.sibling;ve=i,Ef=l,gr=f}tP(t)}else(i.subtreeFlags&8772)!==0&&a!==null?(a.return=i,ve=a):tP(t)}}function tP(t){for(;ve!==null;){var e=ve;if((e.flags&8772)!==0){var r=e.alternate;try{if((e.flags&8772)!==0)switch(e.tag){case 0:case 11:case 15:gr||oh(5,e);break;case 1:var n=e.stateNode;if(e.flags&4&&!gr)if(r===null)n.componentDidMount();else{var i=e.elementType===e.type?r.memoizedProps:Yn(e.type,r.memoizedProps);n.componentDidUpdate(i,r.memoizedState,n.__reactInternalSnapshotBeforeUpdate)}var a=e.updateQueue;a!==null&&Wx(e,a,n);break;case 3:var s=e.updateQueue;if(s!==null){if(r=null,e.child!==null)switch(e.child.tag){case 5:r=e.child.stateNode;break;case 1:r=e.child.stateNode}Wx(e,s,r)}break;case 5:var l=e.stateNode;if(r===null&&e.flags&4){r=l;var c=e.memoizedProps;switch(e.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&r.focus();break;case"img":c.src&&(r.src=c.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(e.memoizedState===null){var f=e.alternate;if(f!==null){var p=f.memoizedState;if(p!==null){var h=p.dehydrated;h!==null&&Iu(h)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(le(163))}gr||e.flags&512&&_y(e)}catch(m){jt(e,e.return,m)}}if(e===t){ve=null;break}if(r=e.sibling,r!==null){r.return=e.return,ve=r;break}ve=e.return}}function rP(t){for(;ve!==null;){var e=ve;if(e===t){ve=null;break}var r=e.sibling;if(r!==null){r.return=e.return,ve=r;break}ve=e.return}}function nP(t){for(;ve!==null;){var e=ve;try{switch(e.tag){case 0:case 11:case 15:var r=e.return;try{oh(4,e)}catch(c){jt(e,r,c)}break;case 1:var n=e.stateNode;if(typeof n.componentDidMount=="function"){var i=e.return;try{n.componentDidMount()}catch(c){jt(e,i,c)}}var a=e.return;try{_y(e)}catch(c){jt(e,a,c)}break;case 5:var s=e.return;try{_y(e)}catch(c){jt(e,s,c)}}}catch(c){jt(e,e.return,c)}if(e===t){ve=null;break}var l=e.sibling;if(l!==null){l.return=e.return,ve=l;break}ve=e.return}}var SU=Math.ceil,np=_i.ReactCurrentDispatcher,H0=_i.ReactCurrentOwner,qn=_i.ReactCurrentBatchConfig,Ue=0,Dt=null,Mt=null,ar=0,en=0,Wo=$a(0),Jt=0,$u=null,Os=0,lh=0,M0=0,Pu=null,Cr=null,O0=0,tl=1/0,zi=null,ip=!1,tg=null,Ha=null,Jf=!1,Va=null,ap=0,wu=0,rg=null,kd=-1,bd=0;function jr(){return(Ue&6)!==0?Nt():kd!==-1?kd:kd=Nt()}function Ma(t){return(t.mode&1)===0?1:(Ue&2)!==0&&ar!==0?ar&-ar:iU.transition!==null?(bd===0&&(bd=ab()),bd):(t=De,t!==0||(t=window.event,t=t===void 0?16:db(t.type)),t)}function Tn(t,e,r){if(50<wu)throw wu=0,rg=null,Error(le(185));var n=uh(t,e);return n===null?null:(Sc(n,e,r),((Ue&2)===0||n!==Dt)&&(n===Dt&&((Ue&2)===0&&(lh|=e),Jt===4&&ba(n,ar)),Dr(n,r),e===1&&Ue===0&&(t.mode&1)===0&&(tl=Nt()+500,ih&&es())),n)}function uh(t,e){t.lanes|=e;var r=t.alternate;for(r!==null&&(r.lanes|=e),r=t,t=t.return;t!==null;)t.childLanes|=e,r=t.alternate,r!==null&&(r.childLanes|=e),r=t,t=t.return;return r.tag===3?r.stateNode:null}function xq(t){return(Dt!==null||In!==null)&&(t.mode&1)!==0&&(Ue&2)===0}function Dr(t,e){var r=t.callbackNode;iW(t,e);var n=Id(t,t===Dt?ar:0);if(n===0)r!==null&&ux(r),t.callbackNode=null,t.callbackPriority=0;else if(e=n&-n,t.callbackPriority!==e){if(r!=null&&ux(r),e===1)t.tag===0?nU(iP.bind(null,t)):Lb(iP.bind(null,t)),$W(function(){Ue===0&&es()}),r=null;else{switch(sb(n)){case 1:r=c0;break;case 4:r=nb;break;case 16:r=Fd;break;case 536870912:r=ib;break;default:r=Fd}r=Rq(r,Pq.bind(null,t))}t.callbackPriority=e,t.callbackNode=r}}function Pq(t,e){if(kd=-1,bd=0,(Ue&6)!==0)throw Error(le(327));var r=t.callbackNode;if(Eo()&&t.callbackNode!==r)return null;var n=Id(t,t===Dt?ar:0);if(n===0)return null;if((n&30)!==0||(n&t.expiredLanes)!==0||e)e=sp(t,n);else{e=n;var i=Ue;Ue|=2;var a=kq();(Dt!==t||ar!==e)&&(zi=null,tl=Nt()+500,Rs(t,e));do try{wU();break}catch(l){wq(t,l)}while(1);S0(),np.current=a,Ue=i,Mt!==null?e=0:(Dt=null,ar=0,e=Jt)}if(e!==0){if(e===2&&(i=Vy(t),i!==0&&(n=i,e=ng(t,i))),e===1)throw r=$u,Rs(t,0),ba(t,n),Dr(t,Nt()),r;if(e===6)ba(t,n);else{if(i=t.current.alternate,(n&30)===0&&!xU(i)&&(e=sp(t,n),e===2&&(a=Vy(t),a!==0&&(n=a,e=ng(t,a))),e===1))throw r=$u,Rs(t,0),ba(t,n),Dr(t,Nt()),r;switch(t.finishedWork=i,t.finishedLanes=n,e){case 0:case 1:throw Error(le(345));case 2:As(t,Cr,zi);break;case 3:if(ba(t,n),(n&130023424)===n&&(e=O0+500-Nt(),10<e)){if(Id(t,0)!==0)break;if(i=t.suspendedLanes,(i&n)!==n){jr(),t.pingedLanes|=t.suspendedLanes&i;break}t.timeoutHandle=zy(As.bind(null,t,Cr,zi),e);break}As(t,Cr,zi);break;case 4:if(ba(t,n),(n&4194240)===n)break;for(e=t.eventTimes,i=-1;0<n;){var s=31-En(n);a=1<<s,s=e[s],s>i&&(i=s),n&=~a}if(n=i,n=Nt()-n,n=(120>n?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*SU(n/1960))-n,10<n){t.timeoutHandle=zy(As.bind(null,t,Cr,zi),n);break}As(t,Cr,zi);break;case 5:As(t,Cr,zi);break;default:throw Error(le(329))}}}return Dr(t,Nt()),t.callbackNode===r?Pq.bind(null,t):null}function ng(t,e){var r=Pu;return t.current.memoizedState.isDehydrated&&(Rs(t,e).flags|=256),t=sp(t,e),t!==2&&(e=Cr,Cr=r,e!==null&&ig(e)),t}function ig(t){Cr===null?Cr=t:Cr.push.apply(Cr,t)}function xU(t){for(var e=t;;){if(e.flags&16384){var r=e.updateQueue;if(r!==null&&(r=r.stores,r!==null))for(var n=0;n<r.length;n++){var i=r[n],a=i.getSnapshot;i=i.value;try{if(!Jn(a(),i))return!1}catch{return!1}}}if(r=e.child,e.subtreeFlags&16384&&r!==null)r.return=e,e=r;else{if(e===t)break;for(;e.sibling===null;){if(e.return===null||e.return===t)return!0;e=e.return}e.sibling.return=e.return,e=e.sibling}}return!0}function ba(t,e){for(e&=~M0,e&=~lh,t.suspendedLanes|=e,t.pingedLanes&=~e,t=t.expirationTimes;0<e;){var r=31-En(e),n=1<<r;t[r]=-1,e&=~n}}function iP(t){if((Ue&6)!==0)throw Error(le(327));Eo();var e=Id(t,0);if((e&1)===0)return Dr(t,Nt()),null;var r=sp(t,e);if(t.tag!==0&&r===2){var n=Vy(t);n!==0&&(e=n,r=ng(t,n))}if(r===1)throw r=$u,Rs(t,0),ba(t,e),Dr(t,Nt()),r;if(r===6)throw Error(le(345));return t.finishedWork=t.current.alternate,t.finishedLanes=e,As(t,Cr,zi),Dr(t,Nt()),null}function z0(t,e){var r=Ue;Ue|=1;try{return t(e)}finally{Ue=r,Ue===0&&(tl=Nt()+500,ih&&es())}}function zs(t){Va!==null&&Va.tag===0&&(Ue&6)===0&&Eo();var e=Ue;Ue|=1;var r=qn.transition,n=De;try{if(qn.transition=null,De=1,t)return t()}finally{De=n,qn.transition=r,Ue=e,(Ue&6)===0&&es()}}function Y0(){en=Wo.current,lt(Wo)}function Rs(t,e){t.finishedWork=null,t.finishedLanes=0;var r=t.timeoutHandle;if(r!==-1&&(t.timeoutHandle=-1,_W(r)),Mt!==null)for(r=Mt.return;r!==null;){var n=r;switch(k0(n),n.tag){case 1:n=n.type.childContextTypes,n!=null&&Kd();break;case 3:el(),lt(Er),lt(xr),j0();break;case 5:T0(n);break;case 4:el();break;case 13:lt(At);break;case 19:lt(At);break;case 10:x0(n.type._context);break;case 22:case 23:Y0()}r=r.return}if(Dt=t,Mt=t=Ja(t.current,null),ar=en=e,Jt=0,$u=null,M0=lh=Os=0,Cr=Pu=null,In!==null){for(e=0;e<In.length;e++)if(r=In[e],n=r.interleaved,n!==null){r.interleaved=null;var i=n.next,a=r.pending;if(a!==null){var s=a.next;a.next=i,n.next=s}r.pending=n}In=null}return t}function wq(t,e){do{var r=Mt;try{if(S0(),Pd.current=rp,tp){for(var n=xt.memoizedState;n!==null;){var i=n.queue;i!==null&&(i.pending=null),n=n.next}tp=!1}if(Ms=0,Xt=Et=xt=null,Su=!1,Xu=0,H0.current=null,r===null||r.return===null){Jt=1,$u=e,Mt=null;break}e:{var a=t,s=r.return,l=r,c=e;if(e=ar,l.flags|=32768,c!==null&&typeof c=="object"&&typeof c.then=="function"){var f=c,p=l,h=p.tag;if((p.mode&1)===0&&(h===0||h===11||h===15)){var m=p.alternate;m?(p.updateQueue=m.updateQueue,p.memoizedState=m.memoizedState,p.lanes=m.lanes):(p.updateQueue=null,p.memoizedState=null)}var g=Ix(s);if(g!==null){g.flags&=-257,Ex(g,s,l,a,e),g.mode&1&&Fx(a,f,e),e=g,c=f;var y=e.updateQueue;if(y===null){var k=new Set;k.add(c),e.updateQueue=k}else y.add(c);break e}else{if((e&1)===0){Fx(a,f,e),C0();break e}c=Error(le(426))}}else if(mt&&l.mode&1){var q=Ix(s);if(q!==null){(q.flags&65536)===0&&(q.flags|=256),Ex(q,s,l,a,e),b0(c);break e}}a=c,Jt!==4&&(Jt=2),Pu===null?Pu=[a]:Pu.push(a),c=U0(c,l),l=s;do{switch(l.tag){case 3:l.flags|=65536,e&=-e,l.lanes|=e;var P=aq(l,c,e);Nx(l,P);break e;case 1:a=c;var x=l.type,b=l.stateNode;if((l.flags&128)===0&&(typeof x.getDerivedStateFromError=="function"||b!==null&&typeof b.componentDidCatch=="function"&&(Ha===null||!Ha.has(b)))){l.flags|=65536,e&=-e,l.lanes|=e;var j=sq(l,a,e);Nx(l,j);break e}}l=l.return}while(l!==null)}qq(r)}catch(R){e=R,Mt===r&&r!==null&&(Mt=r=r.return);continue}break}while(1)}function kq(){var t=np.current;return np.current=rp,t===null?rp:t}function C0(){(Jt===0||Jt===3||Jt===2)&&(Jt=4),Dt===null||(Os&268435455)===0&&(lh&268435455)===0||ba(Dt,ar)}function sp(t,e){var r=Ue;Ue|=2;var n=kq();(Dt!==t||ar!==e)&&(zi=null,Rs(t,e));do try{PU();break}catch(i){wq(t,i)}while(1);if(S0(),Ue=r,np.current=n,Mt!==null)throw Error(le(261));return Dt=null,ar=0,Jt}function PU(){for(;Mt!==null;)bq(Mt)}function wU(){for(;Mt!==null&&!ZN();)bq(Mt)}function bq(t){var e=jq(t.alternate,t,en);t.memoizedProps=t.pendingProps,e===null?qq(t):Mt=e,H0.current=null}function qq(t){var e=t;do{var r=e.alternate;if(t=e.return,(e.flags&32768)===0){if(r=pU(r,e,en),r!==null){Mt=r;return}}else{if(r=vU(r,e),r!==null){r.flags&=32767,Mt=r;return}if(t!==null)t.flags|=32768,t.subtreeFlags=0,t.deletions=null;else{Jt=6,Mt=null;return}}if(e=e.sibling,e!==null){Mt=e;return}Mt=e=t}while(e!==null);Jt===0&&(Jt=5)}function As(t,e,r){var n=De,i=qn.transition;try{qn.transition=null,De=1,kU(t,e,r,n)}finally{qn.transition=i,De=n}return null}function kU(t,e,r,n){do Eo();while(Va!==null);if((Ue&6)!==0)throw Error(le(327));r=t.finishedWork;var i=t.finishedLanes;if(r===null)return null;if(t.finishedWork=null,t.finishedLanes=0,r===t.current)throw Error(le(177));t.callbackNode=null,t.callbackPriority=0;var a=r.lanes|r.childLanes;if(aW(t,a),t===Dt&&(Mt=Dt=null,ar=0),(r.subtreeFlags&2064)===0&&(r.flags&2064)===0||Jf||(Jf=!0,Rq(Fd,function(){return Eo(),null})),a=(r.flags&15990)!==0,(r.subtreeFlags&15990)!==0||a){a=qn.transition,qn.transition=null;var s=De;De=1;var l=Ue;Ue|=4,H0.current=null,gU(t,r),Aq(r,t),DW(My),Ed=!!Hy,My=Hy=null,t.current=r,AU(r),XN(),Ue=l,De=s,qn.transition=a}else t.current=r;if(Jf&&(Jf=!1,Va=t,ap=i),a=t.pendingLanes,a===0&&(Ha=null),$N(r.stateNode),Dr(t,Nt()),e!==null)for(n=t.onRecoverableError,r=0;r<e.length;r++)n(e[r]);if(ip)throw ip=!1,t=tg,tg=null,t;return(ap&1)!==0&&t.tag!==0&&Eo(),a=t.pendingLanes,(a&1)!==0?t===rg?wu++:(wu=0,rg=t):wu=0,es(),null}function Eo(){if(Va!==null){var t=sb(ap),e=qn.transition,r=De;try{if(qn.transition=null,De=16>t?16:t,Va===null)var n=!1;else{if(t=Va,Va=null,ap=0,(Ue&6)!==0)throw Error(le(331));var i=Ue;for(Ue|=4,ve=t.current;ve!==null;){var a=ve,s=a.child;if((ve.flags&16)!==0){var l=a.deletions;if(l!==null){for(var c=0;c<l.length;c++){var f=l[c];for(ve=f;ve!==null;){var p=ve;switch(p.tag){case 0:case 11:case 15:xu(8,p,a)}var h=p.child;if(h!==null)h.return=p,ve=h;else for(;ve!==null;){p=ve;var m=p.sibling,g=p.return;if(vq(p),p===f){ve=null;break}if(m!==null){m.return=g,ve=m;break}ve=g}}}var y=a.alternate;if(y!==null){var k=y.child;if(k!==null){y.child=null;do{var q=k.sibling;k.sibling=null,k=q}while(k!==null)}}ve=a}}if((a.subtreeFlags&2064)!==0&&s!==null)s.return=a,ve=s;else e:for(;ve!==null;){if(a=ve,(a.flags&2048)!==0)switch(a.tag){case 0:case 11:case 15:xu(9,a,a.return)}var P=a.sibling;if(P!==null){P.return=a.return,ve=P;break e}ve=a.return}}var x=t.current;for(ve=x;ve!==null;){s=ve;var b=s.child;if((s.subtreeFlags&2064)!==0&&b!==null)b.return=s,ve=b;else e:for(s=x;ve!==null;){if(l=ve,(l.flags&2048)!==0)try{switch(l.tag){case 0:case 11:case 15:oh(9,l)}}catch(R){jt(l,l.return,R)}if(l===s){ve=null;break e}var j=l.sibling;if(j!==null){j.return=l.return,ve=j;break e}ve=l.return}}if(Ue=i,es(),Ai&&typeof Ai.onPostCommitFiberRoot=="function")try{Ai.onPostCommitFiberRoot($p,t)}catch{}n=!0}return n}finally{De=r,qn.transition=e}}return!1}function aP(t,e,r){e=U0(r,e),e=aq(t,e,1),Ua(t,e),e=jr(),t=uh(t,1),t!==null&&(Sc(t,1,e),Dr(t,e))}function jt(t,e,r){if(t.tag===3)aP(t,t,r);else for(;e!==null;){if(e.tag===3){aP(e,t,r);break}else if(e.tag===1){var n=e.stateNode;if(typeof e.type.getDerivedStateFromError=="function"||typeof n.componentDidCatch=="function"&&(Ha===null||!Ha.has(n))){t=U0(r,t),t=sq(e,t,1),Ua(e,t),t=jr(),e=uh(e,1),e!==null&&(Sc(e,1,t),Dr(e,t));break}}e=e.return}}function bU(t,e,r){var n=t.pingCache;n!==null&&n.delete(e),e=jr(),t.pingedLanes|=t.suspendedLanes&r,Dt===t&&(ar&r)===r&&(Jt===4||Jt===3&&(ar&130023424)===ar&&500>Nt()-O0?Rs(t,0):M0|=r),Dr(t,e)}function Tq(t,e){e===0&&((t.mode&1)===0?e=1:(e=Wf,Wf<<=1,(Wf&130023424)===0&&(Wf=4194304)));var r=jr();t=uh(t,e),t!==null&&(Sc(t,e,r),Dr(t,r))}function qU(t){var e=t.memoizedState,r=0;e!==null&&(r=e.retryLane),Tq(t,r)}function TU(t,e){var r=0;switch(t.tag){case 13:var n=t.stateNode,i=t.memoizedState;i!==null&&(r=i.retryLane);break;case 19:n=t.stateNode;break;default:throw Error(le(314))}n!==null&&n.delete(e),Tq(t,r)}var jq;jq=function(t,e,r){if(t!==null)if(t.memoizedProps!==e.pendingProps||Er.current)Ir=!0;else{if((t.lanes&r)===0&&(e.flags&128)===0)return Ir=!1,mU(t,e,r);Ir=(t.flags&131072)!==0}else Ir=!1,mt&&(e.flags&1048576)!==0&&Hb(e,$d,e.index);switch(e.lanes=0,e.tag){case 2:var n=e.type;t!==null&&(t.alternate=null,e.alternate=null,e.flags|=2),t=e.pendingProps;var i=Qo(e,xr.current);Io(e,r),i=V0(null,e,n,t,i,r);var a=L0();return e.flags|=1,typeof i=="object"&&i!==null&&typeof i.render=="function"&&i.$$typeof===void 0?(e.tag=1,e.memoizedState=null,e.updateQueue=null,Jr(n)?(a=!0,Bd(e)):a=!1,e.memoizedState=i.state!==null&&i.state!==void 0?i.state:null,P0(e),i.updater=ah,e.stateNode=i,i._reactInternals=e,Ey(e,n,t,r),e=Zy(null,e,n,!0,a,r)):(e.tag=0,mt&&a&&w0(e),Tr(null,e,i,r),e=e.child),e;case 16:n=e.elementType;e:{switch(t!==null&&(t.alternate=null,e.alternate=null,e.flags|=2),t=e.pendingProps,i=n._init,n=i(n._payload),e.type=n,i=e.tag=RU(n),t=Yn(n,t),i){case 0:e=By(null,e,n,t,r);break e;case 1:e=Gx(null,e,n,t,r);break e;case 11:e=Jx(null,e,n,t,r);break e;case 14:e=Dx(null,e,n,Yn(n.type,t),r);break e}throw Error(le(306,n,""))}return e;case 0:return n=e.type,i=e.pendingProps,i=e.elementType===n?i:Yn(n,i),By(t,e,n,i,r);case 1:return n=e.type,i=e.pendingProps,i=e.elementType===n?i:Yn(n,i),Gx(t,e,n,i,r);case 3:e:{if(pq(e),t===null)throw Error(le(387));n=e.pendingProps,a=e.memoizedState,i=a.element,Nb(t,e),Qd(e,n,null,r);var s=e.memoizedState;if(n=s.element,a.isDehydrated)if(a={element:n,isDehydrated:!1,cache:s.cache,pendingSuspenseBoundaries:s.pendingSuspenseBoundaries,transitions:s.transitions},e.updateQueue.baseState=a,e.memoizedState=a,e.flags&256){i=Error(le(423)),e=Kx(t,e,n,r,i);break e}else if(n!==i){i=Error(le(424)),e=Kx(t,e,n,r,i);break e}else for(Fr=Ii(e.stateNode.containerInfo.firstChild),an=e,mt=!0,Fn=null,r=zb(e,null,n,r),e.child=r;r;)r.flags=r.flags&-3|4096,r=r.sibling;else{if(_o(),n===i){e=Xi(t,e,r);break e}Tr(t,e,n,r)}e=e.child}return e;case 5:return Yb(e),t===null&&Dy(e),n=e.type,i=e.pendingProps,a=t!==null?t.memoizedProps:null,s=i.children,Oy(n,i)?s=null:a!==null&&Oy(n,a)&&(e.flags|=32),dq(t,e),Tr(t,e,s,r),e.child;case 6:return t===null&&Dy(e),null;case 13:return hq(t,e,r);case 4:return q0(e,e.stateNode.containerInfo),n=e.pendingProps,t===null?e.child=$o(e,null,n,r):Tr(t,e,n,r),e.child;case 11:return n=e.type,i=e.pendingProps,i=e.elementType===n?i:Yn(n,i),Jx(t,e,n,i,r);case 7:return Tr(t,e,e.pendingProps,r),e.child;case 8:return Tr(t,e,e.pendingProps.children,r),e.child;case 12:return Tr(t,e,e.pendingProps.children,r),e.child;case 10:e:{if(n=e.type._context,i=e.pendingProps,a=e.memoizedProps,s=i.value,rt(Zd,n._currentValue),n._currentValue=s,a!==null)if(Jn(a.value,s)){if(a.children===i.children&&!Er.current){e=Xi(t,e,r);break e}}else for(a=e.child,a!==null&&(a.return=e);a!==null;){var l=a.dependencies;if(l!==null){s=a.child;for(var c=l.firstContext;c!==null;){if(c.context===n){if(a.tag===1){c=Di(-1,r&-r),c.tag=2;var f=a.updateQueue;if(f!==null){f=f.shared;var p=f.pending;p===null?c.next=c:(c.next=p.next,p.next=c),f.pending=c}}a.lanes|=r,c=a.alternate,c!==null&&(c.lanes|=r),Fy(a.return,r,e),l.lanes|=r;break}c=c.next}}else if(a.tag===10)s=a.type===e.type?null:a.child;else if(a.tag===18){if(s=a.return,s===null)throw Error(le(341));s.lanes|=r,l=s.alternate,l!==null&&(l.lanes|=r),Fy(s,r,e),s=a.sibling}else s=a.child;if(s!==null)s.return=a;else for(s=a;s!==null;){if(s===e){s=null;break}if(a=s.sibling,a!==null){a.return=s.return,s=a;break}s=s.return}a=s}Tr(t,e,i.children,r),e=e.child}return e;case 9:return i=e.type,n=e.pendingProps.children,Io(e,r),i=jn(i),n=n(i),e.flags|=1,Tr(t,e,n,r),e.child;case 14:return n=e.type,i=Yn(n,e.pendingProps),i=Yn(n.type,i),Dx(t,e,n,i,r);case 15:return cq(t,e,e.type,e.pendingProps,r);case 17:return n=e.type,i=e.pendingProps,i=e.elementType===n?i:Yn(n,i),t!==null&&(t.alternate=null,e.alternate=null,e.flags|=2),e.tag=1,Jr(n)?(t=!0,Bd(e)):t=!1,Io(e,r),Ub(e,n,i),Ey(e,n,i,r),Zy(null,e,n,!0,t,r);case 19:return mq(t,e,r);case 22:return fq(t,e,r)}throw Error(le(156,e.tag))};function Rq(t,e){return rb(t,e)}function jU(t,e,r,n){this.tag=t,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=n,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function bn(t,e,r,n){return new jU(t,e,r,n)}function F0(t){return t=t.prototype,!(!t||!t.isReactComponent)}function RU(t){if(typeof t=="function")return F0(t)?1:0;if(t!=null){if(t=t.$$typeof,t===o0)return 11;if(t===l0)return 14}return 2}function Ja(t,e){var r=t.alternate;return r===null?(r=bn(t.tag,e,t.key,t.mode),r.elementType=t.elementType,r.type=t.type,r.stateNode=t.stateNode,r.alternate=t,t.alternate=r):(r.pendingProps=e,r.type=t.type,r.flags=0,r.subtreeFlags=0,r.deletions=null),r.flags=t.flags&14680064,r.childLanes=t.childLanes,r.lanes=t.lanes,r.child=t.child,r.memoizedProps=t.memoizedProps,r.memoizedState=t.memoizedState,r.updateQueue=t.updateQueue,e=t.dependencies,r.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext},r.sibling=t.sibling,r.index=t.index,r.ref=t.ref,r}function qd(t,e,r,n,i,a){var s=2;if(n=t,typeof t=="function")F0(t)&&(s=1);else if(typeof t=="string")s=5;else e:switch(t){case wo:return Vs(r.children,i,a,e);case s0:s=8,i|=8;break;case my:return t=bn(12,r,e,i|2),t.elementType=my,t.lanes=a,t;case vy:return t=bn(13,r,e,i),t.elementType=vy,t.lanes=a,t;case yy:return t=bn(19,r,e,i),t.elementType=yy,t.lanes=a,t;case Yk:return op(r,i,a,e);default:if(typeof t=="object"&&t!==null)switch(t.$$typeof){case Ok:s=10;break e;case zk:s=9;break e;case o0:s=11;break e;case l0:s=14;break e;case xa:s=16,n=null;break e}throw Error(le(130,t==null?t:typeof t,""))}return e=bn(s,r,e,i),e.elementType=t,e.type=n,e.lanes=a,e}function Vs(t,e,r,n){return t=bn(7,t,n,e),t.lanes=r,t}function op(t,e,r,n){return t=bn(22,t,n,e),t.elementType=Yk,t.lanes=r,t.stateNode={},t}function kv(t,e,r){return t=bn(6,t,null,e),t.lanes=r,t}function bv(t,e,r){return e=bn(4,t.children!==null?t.children:[],t.key,e),e.lanes=r,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function VU(t,e,r,n,i){this.tag=e,this.containerInfo=t,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=sv(0),this.expirationTimes=sv(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=sv(0),this.identifierPrefix=n,this.onRecoverableError=i,this.mutableSourceEagerHydrationData=null}function I0(t,e,r,n,i,a,s,l,c){return t=new VU(t,e,r,l,c),e===1?(e=1,a===!0&&(e|=8)):e=0,a=bn(3,null,null,e),t.current=a,a.stateNode=t,a.memoizedState={element:n,isDehydrated:r,cache:null,transitions:null,pendingSuspenseBoundaries:null},P0(a),t}function LU(t,e,r){var n=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:Po,key:n==null?null:""+n,children:t,containerInfo:e,implementation:r}}function Vq(t){if(!t)return Ea;t=t._reactInternals;e:{if(Fs(t)!==t||t.tag!==1)throw Error(le(170));var e=t;do{switch(e.tag){case 3:e=e.stateNode.context;break e;case 1:if(Jr(e.type)){e=e.stateNode.__reactInternalMemoizedMergedChildContext;break e}}e=e.return}while(e!==null);throw Error(le(171))}if(t.tag===1){var r=t.type;if(Jr(r))return Vb(t,r,e)}return e}function Lq(t,e,r,n,i,a,s,l,c){return t=I0(r,n,!0,t,i,a,s,l,c),t.context=Vq(null),r=t.current,n=jr(),i=Ma(r),a=Di(n,i),a.callback=e!=null?e:null,Ua(r,a),t.current.lanes=i,Sc(t,i,n),Dr(t,n),t}function ch(t,e,r,n){var i=e.current,a=jr(),s=Ma(i);return r=Vq(r),e.context===null?e.context=r:e.pendingContext=r,e=Di(a,s),e.payload={element:t},n=n===void 0?null:n,n!==null&&(e.callback=n),Ua(i,e),t=Tn(i,s,a),t!==null&&xd(t,i,s),s}function lp(t){if(t=t.current,!t.child)return null;switch(t.child.tag){case 5:return t.child.stateNode;default:return t.child.stateNode}}function sP(t,e){if(t=t.memoizedState,t!==null&&t.dehydrated!==null){var r=t.retryLane;t.retryLane=r!==0&&r<e?r:e}}function E0(t,e){sP(t,e),(t=t.alternate)&&sP(t,e)}function NU(){return null}var Nq=typeof reportError=="function"?reportError:function(t){console.error(t)};function J0(t){this._internalRoot=t}fh.prototype.render=J0.prototype.render=function(t){var e=this._internalRoot;if(e===null)throw Error(le(409));ch(t,e,null,null)};fh.prototype.unmount=J0.prototype.unmount=function(){var t=this._internalRoot;if(t!==null){this._internalRoot=null;var e=t.containerInfo;zs(function(){ch(null,t,null,null)}),e[Zi]=null}};function fh(t){this._internalRoot=t}fh.prototype.unstable_scheduleHydration=function(t){if(t){var e=ub();t={blockedOn:null,target:t,priority:e};for(var r=0;r<ka.length&&e!==0&&e<ka[r].priority;r++);ka.splice(r,0,t),r===0&&fb(t)}};function D0(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11)}function dh(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11&&(t.nodeType!==8||t.nodeValue!==" react-mount-point-unstable "))}function oP(){}function WU(t,e,r,n,i){if(i){if(typeof n=="function"){var a=n;n=function(){var f=lp(s);a.call(f)}}var s=Lq(e,n,t,0,null,!1,!1,"",oP);return t._reactRootContainer=s,t[Zi]=s.current,Du(t.nodeType===8?t.parentNode:t),zs(),s}for(;i=t.lastChild;)t.removeChild(i);if(typeof n=="function"){var l=n;n=function(){var f=lp(c);l.call(f)}}var c=I0(t,0,!1,null,null,!1,!1,"",oP);return t._reactRootContainer=c,t[Zi]=c.current,Du(t.nodeType===8?t.parentNode:t),zs(function(){ch(e,c,r,n)}),c}function ph(t,e,r,n,i){var a=r._reactRootContainer;if(a){var s=a;if(typeof i=="function"){var l=i;i=function(){var c=lp(s);l.call(c)}}ch(e,s,t,i)}else s=WU(r,e,t,i,n);return lp(s)}ob=function(t){switch(t.tag){case 3:var e=t.stateNode;if(e.current.memoizedState.isDehydrated){var r=au(e.pendingLanes);r!==0&&(f0(e,r|1),Dr(e,Nt()),(Ue&6)===0&&(tl=Nt()+500,es()))}break;case 13:var n=jr();zs(function(){return Tn(t,1,n)}),E0(t,1)}};d0=function(t){if(t.tag===13){var e=jr();Tn(t,134217728,e),E0(t,134217728)}};lb=function(t){if(t.tag===13){var e=jr(),r=Ma(t);Tn(t,r,e),E0(t,r)}};ub=function(){return De};cb=function(t,e){var r=De;try{return De=t,e()}finally{De=r}};Ty=function(t,e,r){switch(e){case"input":if(Sy(t,r),e=r.name,r.type==="radio"&&e!=null){for(r=t;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<r.length;e++){var n=r[e];if(n!==t&&n.form===t.form){var i=nh(n);if(!i)throw Error(le(90));Fk(n),Sy(n,i)}}}break;case"textarea":Ek(t,r);break;case"select":e=r.value,e!=null&&zo(t,!!r.multiple,e,!1)}};Xk=z0;Qk=zs;var UU={usingClientEntryPoint:!1,Events:[Pc,To,nh,Bk,Zk,z0]},Zl={findFiberByHostInstance:ks,bundleType:0,version:"18.1.0",rendererPackageName:"react-dom"},HU={bundleType:Zl.bundleType,version:Zl.version,rendererPackageName:Zl.rendererPackageName,rendererConfig:Zl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:_i.ReactCurrentDispatcher,findHostInstanceByFiber:function(t){return t=eb(t),t===null?null:t.stateNode},findFiberByHostInstance:Zl.findFiberByHostInstance||NU,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.1.0-next-22edb9f77-20220426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__!="undefined"){var Df=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Df.isDisabled&&Df.supportsFiber)try{$p=Df.inject(HU),Ai=Df}catch{}}cn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=UU;cn.createPortal=function(t,e){var r=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!D0(e))throw Error(le(200));return LU(t,e,null,r)};cn.createRoot=function(t,e){if(!D0(t))throw Error(le(299));var r=!1,n="",i=Nq;return e!=null&&(e.unstable_strictMode===!0&&(r=!0),e.identifierPrefix!==void 0&&(n=e.identifierPrefix),e.onRecoverableError!==void 0&&(i=e.onRecoverableError)),e=I0(t,1,!1,null,null,r,!1,n,i),t[Zi]=e.current,Du(t.nodeType===8?t.parentNode:t),new J0(e)};cn.findDOMNode=function(t){if(t==null)return null;if(t.nodeType===1)return t;var e=t._reactInternals;if(e===void 0)throw typeof t.render=="function"?Error(le(188)):(t=Object.keys(t).join(","),Error(le(268,t)));return t=eb(e),t=t===null?null:t.stateNode,t};cn.flushSync=function(t){return zs(t)};cn.hydrate=function(t,e,r){if(!dh(e))throw Error(le(200));return ph(null,t,e,!0,r)};cn.hydrateRoot=function(t,e,r){if(!D0(t))throw Error(le(405));var n=r!=null&&r.hydratedSources||null,i=!1,a="",s=Nq;if(r!=null&&(r.unstable_strictMode===!0&&(i=!0),r.identifierPrefix!==void 0&&(a=r.identifierPrefix),r.onRecoverableError!==void 0&&(s=r.onRecoverableError)),e=Lq(e,null,t,1,r!=null?r:null,i,!1,a,s),t[Zi]=e.current,Du(t),n)for(t=0;t<n.length;t++)r=n[t],i=r._getVersion,i=i(r._source),e.mutableSourceEagerHydrationData==null?e.mutableSourceEagerHydrationData=[r,i]:e.mutableSourceEagerHydrationData.push(r,i);return new fh(e)};cn.render=function(t,e,r){if(!dh(e))throw Error(le(200));return ph(null,t,e,!1,r)};cn.unmountComponentAtNode=function(t){if(!dh(t))throw Error(le(40));return t._reactRootContainer?(zs(function(){ph(null,null,t,!1,function(){t._reactRootContainer=null,t[Zi]=null})}),!0):!1};cn.unstable_batchedUpdates=z0;cn.unstable_renderSubtreeIntoContainer=function(t,e,r,n){if(!dh(r))throw Error(le(200));if(t==null||t._reactInternals===void 0)throw Error(le(38));return ph(t,e,r,!1,n)};cn.version="18.1.0-next-22edb9f77-20220426";function Wq(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__=="undefined"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(Wq)}catch(t){console.error(t)}}Wq(),ll.exports=cn;var qv=ll.exports;function MU(t){return typeof t=="function"?t():t}const OU=Y.exports.forwardRef(function(e,r){const{children:n,container:i,disablePortal:a=!1}=e,[s,l]=Y.exports.useState(null),c=gi(Y.exports.isValidElement(n)?n.ref:null,r);return Od(()=>{a||l(MU(i)||document.body)},[i,a]),Od(()=>{if(s&&!a)return Mu(r,s),()=>{Mu(r,null)}},[r,s,a]),a?Y.exports.isValidElement(n)?Y.exports.cloneElement(n,{ref:c}):n:s&&ll.exports.createPortal(n,s)});var zU=OU;function YU(t){const e=Fa(t);return e.body===t?Gp(t).innerWidth>e.documentElement.clientWidth:t.scrollHeight>t.clientHeight}function ku(t,e){e?t.setAttribute("aria-hidden","true"):t.removeAttribute("aria-hidden")}function lP(t){return parseInt(Gp(t).getComputedStyle(t).paddingRight,10)||0}function uP(t,e,r,n=[],i){const a=[e,r,...n],s=["TEMPLATE","SCRIPT","STYLE"];[].forEach.call(t.children,l=>{a.indexOf(l)===-1&&s.indexOf(l.tagName)===-1&&ku(l,i)})}function Tv(t,e){let r=-1;return t.some((n,i)=>e(n)?(r=i,!0):!1),r}function CU(t,e){const r=[],n=t.container;if(!e.disableScrollLock){if(YU(n)){const c=pV(Fa(n));r.push({value:n.style.paddingRight,property:"padding-right",el:n}),n.style.paddingRight=`${lP(n)+c}px`;const f=Fa(n).querySelectorAll(".mui-fixed");[].forEach.call(f,p=>{r.push({value:p.style.paddingRight,property:"padding-right",el:p}),p.style.paddingRight=`${lP(p)+c}px`})}const a=n.parentElement,s=Gp(n),l=(a==null?void 0:a.nodeName)==="HTML"&&s.getComputedStyle(a).overflowY==="scroll"?a:n;r.push({value:l.style.overflow,property:"overflow",el:l},{value:l.style.overflowX,property:"overflow-x",el:l},{value:l.style.overflowY,property:"overflow-y",el:l}),l.style.overflow="hidden"}return()=>{r.forEach(({value:a,el:s,property:l})=>{a?s.style.setProperty(l,a):s.style.removeProperty(l)})}}function FU(t){const e=[];return[].forEach.call(t.children,r=>{r.getAttribute("aria-hidden")==="true"&&e.push(r)}),e}class IU{constructor(){this.containers=void 0,this.modals=void 0,this.modals=[],this.containers=[]}add(e,r){let n=this.modals.indexOf(e);if(n!==-1)return n;n=this.modals.length,this.modals.push(e),e.modalRef&&ku(e.modalRef,!1);const i=FU(r);uP(r,e.mount,e.modalRef,i,!0);const a=Tv(this.containers,s=>s.container===r);return a!==-1?(this.containers[a].modals.push(e),n):(this.containers.push({modals:[e],container:r,restore:null,hiddenSiblings:i}),n)}mount(e,r){const n=Tv(this.containers,a=>a.modals.indexOf(e)!==-1),i=this.containers[n];i.restore||(i.restore=CU(i,r))}remove(e){const r=this.modals.indexOf(e);if(r===-1)return r;const n=Tv(this.containers,a=>a.modals.indexOf(e)!==-1),i=this.containers[n];if(i.modals.splice(i.modals.indexOf(e),1),this.modals.splice(r,1),i.modals.length===0)i.restore&&i.restore(),e.modalRef&&ku(e.modalRef,!0),uP(i.container,e.mount,e.modalRef,i.hiddenSiblings,!1),this.containers.splice(n,1);else{const a=i.modals[i.modals.length-1];a.modalRef&&ku(a.modalRef,!1)}return r}isTopModal(e){return this.modals.length>0&&this.modals[this.modals.length-1]===e}}const EU=["input","select","textarea","a[href]","button","[tabindex]","audio[controls]","video[controls]",'[contenteditable]:not([contenteditable="false"])'].join(",");function JU(t){const e=parseInt(t.getAttribute("tabindex"),10);return Number.isNaN(e)?t.contentEditable==="true"||(t.nodeName==="AUDIO"||t.nodeName==="VIDEO"||t.nodeName==="DETAILS")&&t.getAttribute("tabindex")===null?0:t.tabIndex:e}function DU(t){if(t.tagName!=="INPUT"||t.type!=="radio"||!t.name)return!1;const e=n=>t.ownerDocument.querySelector(`input[type="radio"]${n}`);let r=e(`[name="${t.name}"]:checked`);return r||(r=e(`[name="${t.name}"]`)),r!==t}function GU(t){return!(t.disabled||t.tagName==="INPUT"&&t.type==="hidden"||DU(t))}function KU(t){const e=[],r=[];return Array.from(t.querySelectorAll(EU)).forEach((n,i)=>{const a=JU(n);a===-1||!GU(n)||(a===0?e.push(n):r.push({documentOrder:i,tabIndex:a,node:n}))}),r.sort((n,i)=>n.tabIndex===i.tabIndex?n.documentOrder-i.documentOrder:n.tabIndex-i.tabIndex).map(n=>n.node).concat(e)}function BU(){return!0}function ZU(t){const{children:e,disableAutoFocus:r=!1,disableEnforceFocus:n=!1,disableRestoreFocus:i=!1,getTabbable:a=KU,isEnabled:s=BU,open:l}=t,c=Y.exports.useRef(),f=Y.exports.useRef(null),p=Y.exports.useRef(null),h=Y.exports.useRef(null),m=Y.exports.useRef(null),g=Y.exports.useRef(!1),y=Y.exports.useRef(null),k=gi(e.ref,y),q=Y.exports.useRef(null);Y.exports.useEffect(()=>{!l||!y.current||(g.current=!r)},[r,l]),Y.exports.useEffect(()=>{if(!l||!y.current)return;const b=Fa(y.current);return y.current.contains(b.activeElement)||(y.current.hasAttribute("tabIndex")||y.current.setAttribute("tabIndex",-1),g.current&&y.current.focus()),()=>{i||(h.current&&h.current.focus&&(c.current=!0,h.current.focus()),h.current=null)}},[l]),Y.exports.useEffect(()=>{if(!l||!y.current)return;const b=Fa(y.current),j=N=>{const{current:H}=y;if(H!==null){if(!b.hasFocus()||n||!s()||c.current){c.current=!1;return}if(!H.contains(b.activeElement)){if(N&&m.current!==N.target||b.activeElement!==m.current)m.current=null;else if(m.current!==null)return;if(!g.current)return;let F=[];if((b.activeElement===f.current||b.activeElement===p.current)&&(F=a(y.current)),F.length>0){var O,M;const J=Boolean(((O=q.current)==null?void 0:O.shiftKey)&&((M=q.current)==null?void 0:M.key)==="Tab"),X=F[0],re=F[F.length-1];J?re.focus():X.focus()}else H.focus()}}},R=N=>{q.current=N,!(n||!s()||N.key!=="Tab")&&b.activeElement===y.current&&N.shiftKey&&(c.current=!0,p.current.focus())};b.addEventListener("focusin",j),b.addEventListener("keydown",R,!0);const V=setInterval(()=>{b.activeElement.tagName==="BODY"&&j()},50);return()=>{clearInterval(V),b.removeEventListener("focusin",j),b.removeEventListener("keydown",R,!0)}},[r,n,i,s,l,a]);const P=b=>{h.current===null&&(h.current=b.relatedTarget),g.current=!0,m.current=b.target;const j=e.props.onFocus;j&&j(b)},x=b=>{h.current===null&&(h.current=b.relatedTarget),g.current=!0};return Fe(Y.exports.Fragment,{children:[$("div",{tabIndex:0,onFocus:x,ref:f,"data-test":"sentinelStart"}),Y.exports.cloneElement(e,{ref:k,onFocus:P}),$("div",{tabIndex:0,onFocus:x,ref:p,"data-test":"sentinelEnd"})]})}function XU(t){return Wt("MuiModal",t)}Yt("MuiModal",["root","hidden"]);const QU=["BackdropComponent","BackdropProps","children","classes","className","closeAfterTransition","component","components","componentsProps","container","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","manager","onBackdropClick","onClose","onKeyDown","open","theme","onTransitionEnter","onTransitionExited"],_U=t=>{const{open:e,exited:r,classes:n}=t;return zt({root:["root",!e&&r&&"hidden"]},XU,n)};function $U(t){return typeof t=="function"?t():t}function eH(t){return t.children?t.children.props.hasOwnProperty("in"):!1}const tH=new IU,rH=Y.exports.forwardRef(function(e,r){const{BackdropComponent:n,BackdropProps:i,children:a,classes:s,className:l,closeAfterTransition:c=!1,component:f="div",components:p={},componentsProps:h={},container:m,disableAutoFocus:g=!1,disableEnforceFocus:y=!1,disableEscapeKeyDown:k=!1,disablePortal:q=!1,disableRestoreFocus:P=!1,disableScrollLock:x=!1,hideBackdrop:b=!1,keepMounted:j=!1,manager:R=tH,onBackdropClick:V,onClose:N,onKeyDown:H,open:O,theme:M,onTransitionEnter:F,onTransitionExited:J}=e,X=Le(e,QU),[re,ae]=Y.exports.useState(!0),te=Y.exports.useRef({}),ie=Y.exports.useRef(null),K=Y.exports.useRef(null),oe=gi(K,r),ne=eH(e),ue=()=>Fa(ie.current),pe=()=>(te.current.modalRef=K.current,te.current.mountNode=ie.current,te.current),Pe=()=>{R.mount(pe(),{disableScrollLock:x}),K.current.scrollTop=0},be=ws(()=>{const Tt=$U(m)||ue().body;R.add(pe(),Tt),K.current&&Pe()}),Be=Y.exports.useCallback(()=>R.isTopModal(pe()),[R]),Ze=ws(Tt=>{ie.current=Tt,Tt&&(O&&Be()?Pe():ku(K.current,!0))}),vt=Y.exports.useCallback(()=>{R.remove(pe())},[R]);Y.exports.useEffect(()=>()=>{vt()},[vt]),Y.exports.useEffect(()=>{O?be():(!ne||!c)&&vt()},[O,vt,ne,c,be]);const _t=Q({},e,{classes:s,closeAfterTransition:c,disableAutoFocus:g,disableEnforceFocus:y,disableEscapeKeyDown:k,disablePortal:q,disableRestoreFocus:P,disableScrollLock:x,exited:re,hideBackdrop:b,keepMounted:j}),qt=_U(_t);if(!j&&!O&&(!ne||re))return null;const wr=()=>{ae(!1),F&&F()},_e=()=>{ae(!0),J&&J(),c&&vt()},kr=Tt=>{Tt.target===Tt.currentTarget&&(V&&V(Tt),N&&N(Tt,"backdropClick"))},$e=Tt=>{H&&H(Tt),!(Tt.key!=="Escape"||!Be())&&(k||(Tt.stopPropagation(),N&&N(Tt,"escapeKeyDown")))},$t={};a.props.tabIndex===void 0&&($t.tabIndex="-1"),ne&&($t.onEnter=fy(wr,a.props.onEnter),$t.onExited=fy(_e,a.props.onExited));const aa=p.Root||f,ji=h.root||{};return $(zU,{ref:Ze,container:m,disablePortal:q,children:Fe(aa,Q({role:"presentation"},ji,!Wk(aa)&&{as:f,ownerState:Q({},_t,ji.ownerState),theme:M},X,{ref:oe,onKeyDown:$e,className:We(qt.root,ji.className,l),children:[!b&&n?$(n,Q({"aria-hidden":!0,open:O,onClick:kr},i)):null,$(ZU,{disableEnforceFocus:y,disableAutoFocus:g,disableRestoreFocus:P,isEnabled:Be,open:O,children:Y.exports.cloneElement(a,$t)})]}))})});var nH=rH;function iH(t,e){return Q({toolbar:{minHeight:56,[t.up("xs")]:{"@media (orientation: landscape)":{minHeight:48}},[t.up("sm")]:{minHeight:64}}},e)}const aH=["mode","contrastThreshold","tonalOffset"],cP={text:{primary:"rgba(0, 0, 0, 0.87)",secondary:"rgba(0, 0, 0, 0.6)",disabled:"rgba(0, 0, 0, 0.38)"},divider:"rgba(0, 0, 0, 0.12)",background:{paper:Lu.white,default:Lu.white},action:{active:"rgba(0, 0, 0, 0.54)",hover:"rgba(0, 0, 0, 0.04)",hoverOpacity:.04,selected:"rgba(0, 0, 0, 0.08)",selectedOpacity:.08,disabled:"rgba(0, 0, 0, 0.26)",disabledBackground:"rgba(0, 0, 0, 0.12)",disabledOpacity:.38,focus:"rgba(0, 0, 0, 0.12)",focusOpacity:.12,activatedOpacity:.12}},jv={text:{primary:Lu.white,secondary:"rgba(255, 255, 255, 0.7)",disabled:"rgba(255, 255, 255, 0.5)",icon:"rgba(255, 255, 255, 0.5)"},divider:"rgba(255, 255, 255, 0.12)",background:{paper:"#121212",default:"#121212"},action:{active:Lu.white,hover:"rgba(255, 255, 255, 0.08)",hoverOpacity:.08,selected:"rgba(255, 255, 255, 0.16)",selectedOpacity:.16,disabled:"rgba(255, 255, 255, 0.3)",disabledBackground:"rgba(255, 255, 255, 0.12)",disabledOpacity:.38,focus:"rgba(255, 255, 255, 0.12)",focusOpacity:.12,activatedOpacity:.24}};function fP(t,e,r,n){const i=n.light||n,a=n.dark||n*1.5;t[e]||(t.hasOwnProperty(r)?t[e]=t[r]:e==="light"?t.light=Nk(t.main,i):e==="dark"&&(t.dark=Lk(t.main,a)))}function sH(t="light"){return t==="dark"?{main:co[200],light:co[50],dark:co[400]}:{main:co[700],light:co[400],dark:co[800]}}function oH(t="light"){return t==="dark"?{main:uo[200],light:uo[50],dark:uo[400]}:{main:uo[500],light:uo[300],dark:uo[700]}}function lH(t="light"){return t==="dark"?{main:lo[500],light:lo[300],dark:lo[700]}:{main:lo[700],light:lo[400],dark:lo[800]}}function uH(t="light"){return t==="dark"?{main:fo[400],light:fo[300],dark:fo[700]}:{main:fo[700],light:fo[500],dark:fo[900]}}function cH(t="light"){return t==="dark"?{main:po[400],light:po[300],dark:po[700]}:{main:po[800],light:po[500],dark:po[900]}}function fH(t="light"){return t==="dark"?{main:zl[400],light:zl[300],dark:zl[700]}:{main:"#ed6c02",light:zl[500],dark:zl[900]}}function dH(t){const{mode:e="light",contrastThreshold:r=3,tonalOffset:n=.2}=t,i=Le(t,aH),a=t.primary||sH(e),s=t.secondary||oH(e),l=t.error||lH(e),c=t.info||uH(e),f=t.success||cH(e),p=t.warning||fH(e);function h(k){return qN(k,jv.text.primary)>=r?jv.text.primary:cP.text.primary}const m=({color:k,name:q,mainShade:P=500,lightShade:x=300,darkShade:b=700})=>{if(k=Q({},k),!k.main&&k[P]&&(k.main=k[P]),!k.hasOwnProperty("main"))throw new Error(Hu(11,q?` (${q})`:"",P));if(typeof k.main!="string")throw new Error(Hu(12,q?` (${q})`:"",JSON.stringify(k.main)));return fP(k,"light",x,n),fP(k,"dark",b,n),k.contrastText||(k.contrastText=h(k.main)),k},g={dark:jv,light:cP};return yi(Q({common:Q({},Lu),mode:e,primary:m({color:a,name:"primary"}),secondary:m({color:s,name:"secondary",mainShade:"A400",lightShade:"A200",darkShade:"A700"}),error:m({color:l,name:"error"}),warning:m({color:p,name:"warning"}),info:m({color:c,name:"info"}),success:m({color:f,name:"success"}),grey:S8,contrastThreshold:r,getContrastText:h,augmentColor:m,tonalOffset:n},g[e]),i)}const pH=["fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","htmlFontSize","allVariants","pxToRem"];function hH(t){return Math.round(t*1e5)/1e5}const dP={textTransform:"uppercase"},pP='"Roboto", "Helvetica", "Arial", sans-serif';function mH(t,e){const r=typeof e=="function"?e(t):e,{fontFamily:n=pP,fontSize:i=14,fontWeightLight:a=300,fontWeightRegular:s=400,fontWeightMedium:l=500,fontWeightBold:c=700,htmlFontSize:f=16,allVariants:p,pxToRem:h}=r,m=Le(r,pH),g=i/14,y=h||(P=>`${P/f*g}rem`),k=(P,x,b,j,R)=>Q({fontFamily:n,fontWeight:P,fontSize:y(x),lineHeight:b},n===pP?{letterSpacing:`${hH(j/x)}em`}:{},R,p),q={h1:k(a,96,1.167,-1.5),h2:k(a,60,1.2,-.5),h3:k(s,48,1.167,0),h4:k(s,34,1.235,.25),h5:k(s,24,1.334,0),h6:k(l,20,1.6,.15),subtitle1:k(s,16,1.75,.15),subtitle2:k(l,14,1.57,.1),body1:k(s,16,1.5,.15),body2:k(s,14,1.43,.15),button:k(l,14,1.75,.4,dP),caption:k(s,12,1.66,.4),overline:k(s,12,2.66,1,dP)};return yi(Q({htmlFontSize:f,pxToRem:y,fontFamily:n,fontSize:i,fontWeightLight:a,fontWeightRegular:s,fontWeightMedium:l,fontWeightBold:c},q),m,{clone:!1})}const vH=.2,yH=.14,gH=.12;function dt(...t){return[`${t[0]}px ${t[1]}px ${t[2]}px ${t[3]}px rgba(0,0,0,${vH})`,`${t[4]}px ${t[5]}px ${t[6]}px ${t[7]}px rgba(0,0,0,${yH})`,`${t[8]}px ${t[9]}px ${t[10]}px ${t[11]}px rgba(0,0,0,${gH})`].join(",")}const AH=["none",dt(0,2,1,-1,0,1,1,0,0,1,3,0),dt(0,3,1,-2,0,2,2,0,0,1,5,0),dt(0,3,3,-2,0,3,4,0,0,1,8,0),dt(0,2,4,-1,0,4,5,0,0,1,10,0),dt(0,3,5,-1,0,5,8,0,0,1,14,0),dt(0,3,5,-1,0,6,10,0,0,1,18,0),dt(0,4,5,-2,0,7,10,1,0,2,16,1),dt(0,5,5,-3,0,8,10,1,0,3,14,2),dt(0,5,6,-3,0,9,12,1,0,3,16,2),dt(0,6,6,-3,0,10,14,1,0,4,18,3),dt(0,6,7,-4,0,11,15,1,0,4,20,3),dt(0,7,8,-4,0,12,17,2,0,5,22,4),dt(0,7,8,-4,0,13,19,2,0,5,24,4),dt(0,7,9,-4,0,14,21,2,0,5,26,4),dt(0,8,9,-5,0,15,22,2,0,6,28,5),dt(0,8,10,-5,0,16,24,2,0,6,30,5),dt(0,8,11,-5,0,17,26,2,0,6,32,5),dt(0,9,11,-5,0,18,28,2,0,7,34,6),dt(0,9,12,-6,0,19,29,2,0,7,36,6),dt(0,10,13,-6,0,20,31,3,0,8,38,7),dt(0,10,13,-6,0,21,33,3,0,8,40,7),dt(0,10,14,-6,0,22,35,3,0,8,42,7),dt(0,11,14,-7,0,23,36,3,0,9,44,8),dt(0,11,15,-7,0,24,38,3,0,9,46,8)];var SH=AH;const xH=["duration","easing","delay"],PH={easeInOut:"cubic-bezier(0.4, 0, 0.2, 1)",easeOut:"cubic-bezier(0.0, 0, 0.2, 1)",easeIn:"cubic-bezier(0.4, 0, 1, 1)",sharp:"cubic-bezier(0.4, 0, 0.6, 1)"},wH={shortest:150,shorter:200,short:250,standard:300,complex:375,enteringScreen:225,leavingScreen:195};function hP(t){return`${Math.round(t)}ms`}function kH(t){if(!t)return 0;const e=t/36;return Math.round((4+15*e**.25+e/5)*10)}function bH(t){const e=Q({},PH,t.easing),r=Q({},wH,t.duration);return Q({getAutoHeightDuration:kH,create:(i=["all"],a={})=>{const{duration:s=r.standard,easing:l=e.easeInOut,delay:c=0}=a;return Le(a,xH),(Array.isArray(i)?i:[i]).map(f=>`${f} ${typeof s=="string"?s:hP(s)} ${l} ${typeof c=="string"?c:hP(c)}`).join(",")}},t,{easing:e,duration:r})}const qH={mobileStepper:1e3,fab:1050,speedDial:1050,appBar:1100,drawer:1200,modal:1300,snackbar:1400,tooltip:1500};var TH=qH;const jH=["breakpoints","mixins","spacing","palette","transitions","typography","shape"];function G0(t={},...e){const{mixins:r={},palette:n={},transitions:i={},typography:a={}}=t,s=Le(t,jH),l=dH(n),c=Xp(t);let f=yi(c,{mixins:iH(c.breakpoints,r),palette:l,shadows:SH.slice(),typography:mH(l,a),transitions:bH(i),zIndex:Q({},TH)});return f=yi(f,s),f=e.reduce((p,h)=>yi(p,h),f),f}const RH=G0();var hh=RH;function Uq(){return Qp(hh)}function kt({props:t,name:e}){return Vk({props:t,name:e,defaultTheme:hh})}const K0=t=>yd(t)&&t!=="classes",VH=Rk({defaultTheme:hh,rootShouldForwardProp:K0});var ke=VH;function LH(t){return Wt("MuiPaper",t)}Yt("MuiPaper",["root","rounded","outlined","elevation","elevation0","elevation1","elevation2","elevation3","elevation4","elevation5","elevation6","elevation7","elevation8","elevation9","elevation10","elevation11","elevation12","elevation13","elevation14","elevation15","elevation16","elevation17","elevation18","elevation19","elevation20","elevation21","elevation22","elevation23","elevation24"]);const NH=["className","component","elevation","square","variant"],mP=t=>{let e;return t<1?e=5.11916*t**2:e=4.5*Math.log(t+1)+2,(e/100).toFixed(2)},WH=t=>{const{square:e,elevation:r,variant:n,classes:i}=t,a={root:["root",n,!e&&"rounded",n==="elevation"&&`elevation${r}`]};return zt(a,LH,i)},UH=ke("div",{name:"MuiPaper",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.root,e[r.variant],!r.square&&e.rounded,r.variant==="elevation"&&e[`elevation${r.elevation}`]]}})(({theme:t,ownerState:e})=>{var r;return Q({backgroundColor:(t.vars||t).palette.background.paper,color:(t.vars||t).palette.text.primary,transition:t.transitions.create("box-shadow")},!e.square&&{borderRadius:t.shape.borderRadius},e.variant==="outlined"&&{border:`1px solid ${(t.vars||t).palette.divider}`},e.variant==="elevation"&&Q({boxShadow:(t.vars||t).shadows[e.elevation]},!t.vars&&t.palette.mode==="dark"&&{backgroundImage:`linear-gradient(${hi("#fff",mP(e.elevation))}, ${hi("#fff",mP(e.elevation))})`},t.vars&&{backgroundImage:(r=t.vars.overlays)==null?void 0:r[e.elevation]}))}),HH=Y.exports.forwardRef(function(e,r){const n=kt({props:e,name:"MuiPaper"}),{className:i,component:a="div",elevation:s=1,square:l=!1,variant:c="elevation"}=n,f=Le(n,NH),p=Q({},n,{component:a,elevation:s,square:l,variant:c}),h=WH(p);return $(UH,Q({as:a,ownerState:p,className:We(h.root,i),ref:r},f))});var Hq=HH;function MH(t){return Wt("MuiSvgIcon",t)}Yt("MuiSvgIcon",["root","colorPrimary","colorSecondary","colorAction","colorError","colorDisabled","fontSizeInherit","fontSizeSmall","fontSizeMedium","fontSizeLarge"]);const OH=["children","className","color","component","fontSize","htmlColor","inheritViewBox","titleAccess","viewBox"],zH=t=>{const{color:e,fontSize:r,classes:n}=t,i={root:["root",e!=="inherit"&&`color${Se(e)}`,`fontSize${Se(r)}`]};return zt(i,MH,n)},YH=ke("svg",{name:"MuiSvgIcon",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.root,r.color!=="inherit"&&e[`color${Se(r.color)}`],e[`fontSize${Se(r.fontSize)}`]]}})(({theme:t,ownerState:e})=>{var r,n,i,a,s,l,c,f,p,h,m,g,y,k,q,P,x;return{userSelect:"none",width:"1em",height:"1em",display:"inline-block",fill:"currentColor",flexShrink:0,transition:(r=t.transitions)==null||(n=r.create)==null?void 0:n.call(r,"fill",{duration:(i=t.transitions)==null||(a=i.duration)==null?void 0:a.shorter}),fontSize:{inherit:"inherit",small:((s=t.typography)==null||(l=s.pxToRem)==null?void 0:l.call(s,20))||"1.25rem",medium:((c=t.typography)==null||(f=c.pxToRem)==null?void 0:f.call(c,24))||"1.5rem",large:((p=t.typography)==null||(h=p.pxToRem)==null?void 0:h.call(p,35))||"2.1875"}[e.fontSize],color:(m=(g=(t.vars||t).palette)==null||(y=g[e.color])==null?void 0:y.main)!=null?m:{action:(k=(t.vars||t).palette)==null||(q=k.action)==null?void 0:q.active,disabled:(P=(t.vars||t).palette)==null||(x=P.action)==null?void 0:x.disabled,inherit:void 0}[e.color]}}),Mq=Y.exports.forwardRef(function(e,r){const n=kt({props:e,name:"MuiSvgIcon"}),{children:i,className:a,color:s="inherit",component:l="svg",fontSize:c="medium",htmlColor:f,inheritViewBox:p=!1,titleAccess:h,viewBox:m="0 0 24 24"}=n,g=Le(n,OH),y=Q({},n,{color:s,component:l,fontSize:c,instanceFontSize:e.fontSize,inheritViewBox:p,viewBox:m}),k={};p||(k.viewBox=m);const q=zH(y);return Fe(YH,Q({as:l,className:We(q.root,a),ownerState:y,focusable:"false",color:f,"aria-hidden":h?void 0:!0,role:h?"img":void 0,ref:r},k,g,{children:[i,h?$("title",{children:h}):null]}))});Mq.muiName="SvgIcon";var vP=Mq;function Oq(t,e){const r=(n,i)=>$(vP,Q({"data-testid":`${e}Icon`,ref:i},n,{children:t}));return r.muiName=vP.muiName,Y.exports.memo(Y.exports.forwardRef(r))}const CH={configure:t=>{console.warn(["MUI: `ClassNameGenerator` import from `@mui/material/utils` is outdated and might cause unexpected issues.","","You should use `import { unstable_ClassNameGenerator } from '@mui/material/className'` instead","","The detail of the issue: https://github.com/mui/material-ui/issues/30011#issuecomment-1024993401","","The updated documentation: https://mui.com/guides/classname-generator/"].join(`
`)),Bg.configure(t)}};var FH=Object.freeze(Object.defineProperty({__proto__:null,unstable_ClassNameGenerator:CH,capitalize:Se,createChainedFunction:fy,createSvgIcon:Oq,debounce:eV,deprecatedPropType:tV,isMuiElement:lk,ownerDocument:Fa,ownerWindow:Gp,requirePropFactory:rV,setRef:Mu,unstable_useEnhancedEffect:Od,unstable_useId:uk,unsupportedProp:aV,useControlled:sV,useEventCallback:ws,useForkRef:gi,useIsFocusVisible:Kg},Symbol.toStringTag,{value:"Module"}));function up(t,e){return up=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},up(t,e)}function zq(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,up(t,e)}var yP={disabled:!1},cp=St.createContext(null),ou="unmounted",Ss="exited",xs="entering",xo="entered",ag="exiting",$i=function(t){zq(e,t);function e(n,i){var a;a=t.call(this,n,i)||this;var s=i,l=s&&!s.isMounting?n.enter:n.appear,c;return a.appearStatus=null,n.in?l?(c=Ss,a.appearStatus=xs):c=xo:n.unmountOnExit||n.mountOnEnter?c=ou:c=Ss,a.state={status:c},a.nextCallback=null,a}e.getDerivedStateFromProps=function(i,a){var s=i.in;return s&&a.status===ou?{status:Ss}:null};var r=e.prototype;return r.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)},r.componentDidUpdate=function(i){var a=null;if(i!==this.props){var s=this.state.status;this.props.in?s!==xs&&s!==xo&&(a=xs):(s===xs||s===xo)&&(a=ag)}this.updateStatus(!1,a)},r.componentWillUnmount=function(){this.cancelNextCallback()},r.getTimeouts=function(){var i=this.props.timeout,a,s,l;return a=s=l=i,i!=null&&typeof i!="number"&&(a=i.exit,s=i.enter,l=i.appear!==void 0?i.appear:s),{exit:a,enter:s,appear:l}},r.updateStatus=function(i,a){i===void 0&&(i=!1),a!==null?(this.cancelNextCallback(),a===xs?this.performEnter(i):this.performExit()):this.props.unmountOnExit&&this.state.status===Ss&&this.setState({status:ou})},r.performEnter=function(i){var a=this,s=this.props.enter,l=this.context?this.context.isMounting:i,c=this.props.nodeRef?[l]:[qv.findDOMNode(this),l],f=c[0],p=c[1],h=this.getTimeouts(),m=l?h.appear:h.enter;if(!i&&!s||yP.disabled){this.safeSetState({status:xo},function(){a.props.onEntered(f)});return}this.props.onEnter(f,p),this.safeSetState({status:xs},function(){a.props.onEntering(f,p),a.onTransitionEnd(m,function(){a.safeSetState({status:xo},function(){a.props.onEntered(f,p)})})})},r.performExit=function(){var i=this,a=this.props.exit,s=this.getTimeouts(),l=this.props.nodeRef?void 0:qv.findDOMNode(this);if(!a||yP.disabled){this.safeSetState({status:Ss},function(){i.props.onExited(l)});return}this.props.onExit(l),this.safeSetState({status:ag},function(){i.props.onExiting(l),i.onTransitionEnd(s.exit,function(){i.safeSetState({status:Ss},function(){i.props.onExited(l)})})})},r.cancelNextCallback=function(){this.nextCallback!==null&&(this.nextCallback.cancel(),this.nextCallback=null)},r.safeSetState=function(i,a){a=this.setNextCallback(a),this.setState(i,a)},r.setNextCallback=function(i){var a=this,s=!0;return this.nextCallback=function(l){s&&(s=!1,a.nextCallback=null,i(l))},this.nextCallback.cancel=function(){s=!1},this.nextCallback},r.onTransitionEnd=function(i,a){this.setNextCallback(a);var s=this.props.nodeRef?this.props.nodeRef.current:qv.findDOMNode(this),l=i==null&&!this.props.addEndListener;if(!s||l){setTimeout(this.nextCallback,0);return}if(this.props.addEndListener){var c=this.props.nodeRef?[this.nextCallback]:[s,this.nextCallback],f=c[0],p=c[1];this.props.addEndListener(f,p)}i!=null&&setTimeout(this.nextCallback,i)},r.render=function(){var i=this.state.status;if(i===ou)return null;var a=this.props,s=a.children;a.in,a.mountOnEnter,a.unmountOnExit,a.appear,a.enter,a.exit,a.timeout,a.addEndListener,a.onEnter,a.onEntering,a.onEntered,a.onExit,a.onExiting,a.onExited,a.nodeRef;var l=Le(a,["children","in","mountOnEnter","unmountOnExit","appear","enter","exit","timeout","addEndListener","onEnter","onEntering","onEntered","onExit","onExiting","onExited","nodeRef"]);return St.createElement(cp.Provider,{value:null},typeof s=="function"?s(i,l):St.cloneElement(St.Children.only(s),l))},e}(St.Component);$i.contextType=cp;$i.propTypes={};function mo(){}$i.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:mo,onEntering:mo,onEntered:mo,onExit:mo,onExiting:mo,onExited:mo};$i.UNMOUNTED=ou;$i.EXITED=Ss;$i.ENTERING=xs;$i.ENTERED=xo;$i.EXITING=ag;var IH=$i;function Gi(t){if(t===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function B0(t,e){var r=function(a){return e&&Y.exports.isValidElement(a)?e(a):a},n=Object.create(null);return t&&Y.exports.Children.map(t,function(i){return i}).forEach(function(i){n[i.key]=r(i)}),n}function EH(t,e){t=t||{},e=e||{};function r(p){return p in e?e[p]:t[p]}var n=Object.create(null),i=[];for(var a in t)a in e?i.length&&(n[a]=i,i=[]):i.push(a);var s,l={};for(var c in e){if(n[c])for(s=0;s<n[c].length;s++){var f=n[c][s];l[n[c][s]]=r(f)}l[c]=r(c)}for(s=0;s<i.length;s++)l[i[s]]=r(i[s]);return l}function qs(t,e,r){return r[e]!=null?r[e]:t.props[e]}function JH(t,e){return B0(t.children,function(r){return Y.exports.cloneElement(r,{onExited:e.bind(null,r),in:!0,appear:qs(r,"appear",t),enter:qs(r,"enter",t),exit:qs(r,"exit",t)})})}function DH(t,e,r){var n=B0(t.children),i=EH(e,n);return Object.keys(i).forEach(function(a){var s=i[a];if(!!Y.exports.isValidElement(s)){var l=a in e,c=a in n,f=e[a],p=Y.exports.isValidElement(f)&&!f.props.in;c&&(!l||p)?i[a]=Y.exports.cloneElement(s,{onExited:r.bind(null,s),in:!0,exit:qs(s,"exit",t),enter:qs(s,"enter",t)}):!c&&l&&!p?i[a]=Y.exports.cloneElement(s,{in:!1}):c&&l&&Y.exports.isValidElement(f)&&(i[a]=Y.exports.cloneElement(s,{onExited:r.bind(null,s),in:f.props.in,exit:qs(s,"exit",t),enter:qs(s,"enter",t)}))}}),i}var GH=Object.values||function(t){return Object.keys(t).map(function(e){return t[e]})},KH={component:"div",childFactory:function(e){return e}},Z0=function(t){zq(e,t);function e(n,i){var a;a=t.call(this,n,i)||this;var s=a.handleExited.bind(Gi(a));return a.state={contextValue:{isMounting:!0},handleExited:s,firstRender:!0},a}var r=e.prototype;return r.componentDidMount=function(){this.mounted=!0,this.setState({contextValue:{isMounting:!1}})},r.componentWillUnmount=function(){this.mounted=!1},e.getDerivedStateFromProps=function(i,a){var s=a.children,l=a.handleExited,c=a.firstRender;return{children:c?JH(i,l):DH(i,s,l),firstRender:!1}},r.handleExited=function(i,a){var s=B0(this.props.children);i.key in s||(i.props.onExited&&i.props.onExited(a),this.mounted&&this.setState(function(l){var c=Q({},l.children);return delete c[i.key],{children:c}}))},r.render=function(){var i=this.props,a=i.component,s=i.childFactory,l=Le(i,["component","childFactory"]),c=this.state.contextValue,f=GH(this.state.children).map(s);return delete l.appear,delete l.enter,delete l.exit,a===null?St.createElement(cp.Provider,{value:c},f):St.createElement(cp.Provider,{value:c},St.createElement(a,l,f))},e}(St.Component);Z0.propTypes={};Z0.defaultProps=KH;var BH=Z0;const ZH=t=>t.scrollTop;function gP(t,e){var r,n;const{timeout:i,easing:a,style:s={}}=t;return{duration:(r=s.transitionDuration)!=null?r:typeof i=="number"?i:i[e.mode]||0,easing:(n=s.transitionTimingFunction)!=null?n:typeof a=="object"?a[e.mode]:a,delay:s.transitionDelay}}function XH(t){const{className:e,classes:r,pulsate:n=!1,rippleX:i,rippleY:a,rippleSize:s,in:l,onExited:c,timeout:f}=t,[p,h]=Y.exports.useState(!1),m=We(e,r.ripple,r.rippleVisible,n&&r.ripplePulsate),g={width:s,height:s,top:-(s/2)+a,left:-(s/2)+i},y=We(r.child,p&&r.childLeaving,n&&r.childPulsate);return!l&&!p&&h(!0),Y.exports.useEffect(()=>{if(!l&&c!=null){const k=setTimeout(c,f);return()=>{clearTimeout(k)}}},[c,l,f]),$("span",{className:m,style:g,children:$("span",{className:y})})}const QH=Yt("MuiTouchRipple",["root","ripple","rippleVisible","ripplePulsate","child","childLeaving","childPulsate"]);var xn=QH;const _H=["center","classes","className"];let mh=t=>t,AP,SP,xP,PP;const sg=550,$H=80,e3=lc(AP||(AP=mh`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`)),t3=lc(SP||(SP=mh`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`)),r3=lc(xP||(xP=mh`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`)),n3=ke("span",{name:"MuiTouchRipple",slot:"Root"})({overflow:"hidden",pointerEvents:"none",position:"absolute",zIndex:0,top:0,right:0,bottom:0,left:0,borderRadius:"inherit"}),i3=ke(XH,{name:"MuiTouchRipple",slot:"Ripple"})(PP||(PP=mh`
  opacity: 0;
  position: absolute;

  &.${0} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  &.${0} {
    animation-duration: ${0}ms;
  }

  & .${0} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${0} {
    opacity: 0;
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  & .${0} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${0};
    animation-duration: 2500ms;
    animation-timing-function: ${0};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`),xn.rippleVisible,e3,sg,({theme:t})=>t.transitions.easing.easeInOut,xn.ripplePulsate,({theme:t})=>t.transitions.duration.shorter,xn.child,xn.childLeaving,t3,sg,({theme:t})=>t.transitions.easing.easeInOut,xn.childPulsate,r3,({theme:t})=>t.transitions.easing.easeInOut),a3=Y.exports.forwardRef(function(e,r){const n=kt({props:e,name:"MuiTouchRipple"}),{center:i=!1,classes:a={},className:s}=n,l=Le(n,_H),[c,f]=Y.exports.useState([]),p=Y.exports.useRef(0),h=Y.exports.useRef(null);Y.exports.useEffect(()=>{h.current&&(h.current(),h.current=null)},[c]);const m=Y.exports.useRef(!1),g=Y.exports.useRef(null),y=Y.exports.useRef(null),k=Y.exports.useRef(null);Y.exports.useEffect(()=>()=>{clearTimeout(g.current)},[]);const q=Y.exports.useCallback(j=>{const{pulsate:R,rippleX:V,rippleY:N,rippleSize:H,cb:O}=j;f(M=>[...M,$(i3,{classes:{ripple:We(a.ripple,xn.ripple),rippleVisible:We(a.rippleVisible,xn.rippleVisible),ripplePulsate:We(a.ripplePulsate,xn.ripplePulsate),child:We(a.child,xn.child),childLeaving:We(a.childLeaving,xn.childLeaving),childPulsate:We(a.childPulsate,xn.childPulsate)},timeout:sg,pulsate:R,rippleX:V,rippleY:N,rippleSize:H},p.current)]),p.current+=1,h.current=O},[a]),P=Y.exports.useCallback((j={},R={},V)=>{const{pulsate:N=!1,center:H=i||R.pulsate,fakeElement:O=!1}=R;if((j==null?void 0:j.type)==="mousedown"&&m.current){m.current=!1;return}(j==null?void 0:j.type)==="touchstart"&&(m.current=!0);const M=O?null:k.current,F=M?M.getBoundingClientRect():{width:0,height:0,left:0,top:0};let J,X,re;if(H||j===void 0||j.clientX===0&&j.clientY===0||!j.clientX&&!j.touches)J=Math.round(F.width/2),X=Math.round(F.height/2);else{const{clientX:ae,clientY:te}=j.touches?j.touches[0]:j;J=Math.round(ae-F.left),X=Math.round(te-F.top)}if(H)re=Math.sqrt((2*F.width**2+F.height**2)/3),re%2===0&&(re+=1);else{const ae=Math.max(Math.abs((M?M.clientWidth:0)-J),J)*2+2,te=Math.max(Math.abs((M?M.clientHeight:0)-X),X)*2+2;re=Math.sqrt(ae**2+te**2)}j!=null&&j.touches?y.current===null&&(y.current=()=>{q({pulsate:N,rippleX:J,rippleY:X,rippleSize:re,cb:V})},g.current=setTimeout(()=>{y.current&&(y.current(),y.current=null)},$H)):q({pulsate:N,rippleX:J,rippleY:X,rippleSize:re,cb:V})},[i,q]),x=Y.exports.useCallback(()=>{P({},{pulsate:!0})},[P]),b=Y.exports.useCallback((j,R)=>{if(clearTimeout(g.current),(j==null?void 0:j.type)==="touchend"&&y.current){y.current(),y.current=null,g.current=setTimeout(()=>{b(j,R)});return}y.current=null,f(V=>V.length>0?V.slice(1):V),h.current=R},[]);return Y.exports.useImperativeHandle(r,()=>({pulsate:x,start:P,stop:b}),[x,P,b]),$(n3,Q({className:We(a.root,xn.root,s),ref:k},l,{children:$(BH,{component:null,exit:!0,children:c})}))});var s3=a3;function o3(t){return Wt("MuiButtonBase",t)}const l3=Yt("MuiButtonBase",["root","disabled","focusVisible"]);var u3=l3;const c3=["action","centerRipple","children","className","component","disabled","disableRipple","disableTouchRipple","focusRipple","focusVisibleClassName","LinkComponent","onBlur","onClick","onContextMenu","onDragLeave","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","tabIndex","TouchRippleProps","touchRippleRef","type"],f3=t=>{const{disabled:e,focusVisible:r,focusVisibleClassName:n,classes:i}=t,s=zt({root:["root",e&&"disabled",r&&"focusVisible"]},o3,i);return r&&n&&(s.root+=` ${n}`),s},d3=ke("button",{name:"MuiButtonBase",slot:"Root",overridesResolver:(t,e)=>e.root})({display:"inline-flex",alignItems:"center",justifyContent:"center",position:"relative",boxSizing:"border-box",WebkitTapHighlightColor:"transparent",backgroundColor:"transparent",outline:0,border:0,margin:0,borderRadius:0,padding:0,cursor:"pointer",userSelect:"none",verticalAlign:"middle",MozAppearance:"none",WebkitAppearance:"none",textDecoration:"none",color:"inherit","&::-moz-focus-inner":{borderStyle:"none"},[`&.${u3.disabled}`]:{pointerEvents:"none",cursor:"default"},"@media print":{colorAdjust:"exact"}}),p3=Y.exports.forwardRef(function(e,r){const n=kt({props:e,name:"MuiButtonBase"}),{action:i,centerRipple:a=!1,children:s,className:l,component:c="button",disabled:f=!1,disableRipple:p=!1,disableTouchRipple:h=!1,focusRipple:m=!1,LinkComponent:g="a",onBlur:y,onClick:k,onContextMenu:q,onDragLeave:P,onFocus:x,onFocusVisible:b,onKeyDown:j,onKeyUp:R,onMouseDown:V,onMouseLeave:N,onMouseUp:H,onTouchEnd:O,onTouchMove:M,onTouchStart:F,tabIndex:J=0,TouchRippleProps:X,touchRippleRef:re,type:ae}=n,te=Le(n,c3),ie=Y.exports.useRef(null),K=Y.exports.useRef(null),oe=gi(K,re),{isFocusVisibleRef:ne,onFocus:ue,onBlur:pe,ref:Pe}=Kg(),[be,Be]=Y.exports.useState(!1);f&&be&&Be(!1),Y.exports.useImperativeHandle(i,()=>({focusVisible:()=>{Be(!0),ie.current.focus()}}),[]);const[Ze,vt]=Y.exports.useState(!1);Y.exports.useEffect(()=>{vt(!0)},[]);const _t=Ze&&!p&&!f;Y.exports.useEffect(()=>{be&&m&&!p&&Ze&&K.current.pulsate()},[p,m,be,Ze]);function qt(W,I,B=h){return ws(ee=>(I&&I(ee),!B&&K.current&&K.current[W](ee),!0))}const wr=qt("start",V),_e=qt("stop",q),kr=qt("stop",P),$e=qt("stop",H),$t=qt("stop",W=>{be&&W.preventDefault(),N&&N(W)}),aa=qt("start",F),ji=qt("stop",O),Tt=qt("stop",M),hl=qt("stop",W=>{pe(W),ne.current===!1&&Be(!1),y&&y(W)},!1),ml=ws(W=>{ie.current||(ie.current=W.currentTarget),ue(W),ne.current===!0&&(Be(!0),b&&b(W)),x&&x(W)}),dn=()=>{const W=ie.current;return c&&c!=="button"&&!(W.tagName==="A"&&W.href)},$n=Y.exports.useRef(!1),Lr=ws(W=>{m&&!$n.current&&be&&K.current&&W.key===" "&&($n.current=!0,K.current.stop(W,()=>{K.current.start(W)})),W.target===W.currentTarget&&dn()&&W.key===" "&&W.preventDefault(),j&&j(W),W.target===W.currentTarget&&dn()&&W.key==="Enter"&&!f&&(W.preventDefault(),k&&k(W))}),os=ws(W=>{m&&W.key===" "&&K.current&&be&&!W.defaultPrevented&&($n.current=!1,K.current.stop(W,()=>{K.current.pulsate(W)})),R&&R(W),k&&W.target===W.currentTarget&&dn()&&W.key===" "&&!W.defaultPrevented&&k(W)});let pn=c;pn==="button"&&(te.href||te.to)&&(pn=g);const or={};pn==="button"?(or.type=ae===void 0?"button":ae,or.disabled=f):(!te.href&&!te.to&&(or.role="button"),f&&(or["aria-disabled"]=f));const vl=gi(Pe,ie),L=gi(r,vl),S=Q({},n,{centerRipple:a,component:c,disabled:f,disableRipple:p,disableTouchRipple:h,focusRipple:m,tabIndex:J,focusVisible:be}),w=f3(S);return Fe(d3,Q({as:pn,className:We(w.root,l),ownerState:S,onBlur:hl,onClick:k,onContextMenu:_e,onFocus:ml,onKeyDown:Lr,onKeyUp:os,onMouseDown:wr,onMouseLeave:$t,onMouseUp:$e,onDragLeave:kr,onTouchEnd:ji,onTouchMove:Tt,onTouchStart:aa,ref:L,tabIndex:f?-1:J,type:ae},or,te,{children:[s,_t?$(s3,Q({ref:oe,center:a},X)):null]}))});var X0=p3;function h3(t){return Wt("MuiIconButton",t)}const m3=Yt("MuiIconButton",["root","disabled","colorInherit","colorPrimary","colorSecondary","edgeStart","edgeEnd","sizeSmall","sizeMedium","sizeLarge"]);var v3=m3;const y3=["edge","children","className","color","disabled","disableFocusRipple","size"],g3=t=>{const{classes:e,disabled:r,color:n,edge:i,size:a}=t,s={root:["root",r&&"disabled",n!=="default"&&`color${Se(n)}`,i&&`edge${Se(i)}`,`size${Se(a)}`]};return zt(s,h3,e)},A3=ke(X0,{name:"MuiIconButton",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.root,r.color!=="default"&&e[`color${Se(r.color)}`],r.edge&&e[`edge${Se(r.edge)}`],e[`size${Se(r.size)}`]]}})(({theme:t,ownerState:e})=>Q({textAlign:"center",flex:"0 0 auto",fontSize:t.typography.pxToRem(24),padding:8,borderRadius:"50%",overflow:"visible",color:(t.vars||t).palette.action.active,transition:t.transitions.create("background-color",{duration:t.transitions.duration.shortest})},!e.disableRipple&&{"&:hover":{backgroundColor:t.vars?`rgba(${t.vars.palette.action.active} / ${t.vars.palette.action.hoverOpacity})`:hi(t.palette.action.active,t.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},e.edge==="start"&&{marginLeft:e.size==="small"?-3:-12},e.edge==="end"&&{marginRight:e.size==="small"?-3:-12}),({theme:t,ownerState:e})=>Q({},e.color==="inherit"&&{color:"inherit"},e.color!=="inherit"&&e.color!=="default"&&Q({color:(t.vars||t).palette[e.color].main},!e.disableRipple&&{"&:hover":{backgroundColor:t.vars?`rgba(${t.vars.palette[e.color].mainChannel} / ${t.vars.palette.action.hoverOpacity})`:hi(t.palette[e.color].main,t.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}}),e.size==="small"&&{padding:5,fontSize:t.typography.pxToRem(18)},e.size==="large"&&{padding:12,fontSize:t.typography.pxToRem(28)},{[`&.${v3.disabled}`]:{backgroundColor:"transparent",color:(t.vars||t).palette.action.disabled}})),S3=Y.exports.forwardRef(function(e,r){const n=kt({props:e,name:"MuiIconButton"}),{edge:i=!1,children:a,className:s,color:l="default",disabled:c=!1,disableFocusRipple:f=!1,size:p="medium"}=n,h=Le(n,y3),m=Q({},n,{edge:i,color:l,disabled:c,disableFocusRipple:f,size:p}),g=g3(m);return $(A3,Q({className:We(g.root,s),centerRipple:!0,focusRipple:!f,disabled:c,ref:r,ownerState:m},h,{children:a}))});var Td=S3;function x3(t){return Wt("MuiTypography",t)}Yt("MuiTypography",["root","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","button","caption","overline","alignLeft","alignRight","alignCenter","alignJustify","noWrap","gutterBottom","paragraph"]);const P3=["align","className","component","gutterBottom","noWrap","paragraph","variant","variantMapping"],w3=t=>{const{align:e,gutterBottom:r,noWrap:n,paragraph:i,variant:a,classes:s}=t,l={root:["root",a,t.align!=="inherit"&&`align${Se(e)}`,r&&"gutterBottom",n&&"noWrap",i&&"paragraph"]};return zt(l,x3,s)},k3=ke("span",{name:"MuiTypography",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.root,r.variant&&e[r.variant],r.align!=="inherit"&&e[`align${Se(r.align)}`],r.noWrap&&e.noWrap,r.gutterBottom&&e.gutterBottom,r.paragraph&&e.paragraph]}})(({theme:t,ownerState:e})=>Q({margin:0},e.variant&&t.typography[e.variant],e.align!=="inherit"&&{textAlign:e.align},e.noWrap&&{overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"},e.gutterBottom&&{marginBottom:"0.35em"},e.paragraph&&{marginBottom:16})),wP={h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",subtitle1:"h6",subtitle2:"h6",body1:"p",body2:"p",inherit:"p"},b3={primary:"primary.main",textPrimary:"text.primary",secondary:"secondary.main",textSecondary:"text.secondary",error:"error.main"},q3=t=>b3[t]||t,T3=Y.exports.forwardRef(function(e,r){const n=kt({props:e,name:"MuiTypography"}),i=q3(n.color),a=t0(Q({},n,{color:i})),{align:s="inherit",className:l,component:c,gutterBottom:f=!1,noWrap:p=!1,paragraph:h=!1,variant:m="body1",variantMapping:g=wP}=a,y=Le(a,P3),k=Q({},a,{align:s,color:i,className:l,component:c,gutterBottom:f,noWrap:p,paragraph:h,variant:m,variantMapping:g}),q=c||(h?"p":g[m]||wP[m])||"span",P=w3(k);return $(k3,Q({as:q,ref:r,ownerState:k,className:We(P.root,l)},y))});var Oa=T3;function j3(t){return $(ER,Q({},t,{defaultTheme:hh}))}const R3=["addEndListener","appear","children","easing","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","timeout","TransitionComponent"],V3={entering:{opacity:1},entered:{opacity:1}},L3=Y.exports.forwardRef(function(e,r){const n=Uq(),i={enter:n.transitions.duration.enteringScreen,exit:n.transitions.duration.leavingScreen},{addEndListener:a,appear:s=!0,children:l,easing:c,in:f,onEnter:p,onEntered:h,onEntering:m,onExit:g,onExited:y,onExiting:k,style:q,timeout:P=i,TransitionComponent:x=IH}=e,b=Le(e,R3),j=Y.exports.useRef(null),R=gi(l.ref,r),V=gi(j,R),N=ae=>te=>{if(ae){const ie=j.current;te===void 0?ae(ie):ae(ie,te)}},H=N(m),O=N((ae,te)=>{ZH(ae);const ie=gP({style:q,timeout:P,easing:c},{mode:"enter"});ae.style.webkitTransition=n.transitions.create("opacity",ie),ae.style.transition=n.transitions.create("opacity",ie),p&&p(ae,te)}),M=N(h),F=N(k),J=N(ae=>{const te=gP({style:q,timeout:P,easing:c},{mode:"exit"});ae.style.webkitTransition=n.transitions.create("opacity",te),ae.style.transition=n.transitions.create("opacity",te),g&&g(ae)}),X=N(y);return $(x,Q({appear:s,in:f,nodeRef:j,onEnter:O,onEntered:M,onEntering:H,onExit:J,onExited:X,onExiting:F,addEndListener:ae=>{a&&a(j.current,ae)},timeout:P},b,{children:(ae,te)=>Y.exports.cloneElement(l,Q({style:Q({opacity:0,visibility:ae==="exited"&&!f?"hidden":void 0},V3[ae],q,l.props.style),ref:V},te))}))});var Yq=L3;function N3(t){return Wt("MuiBackdrop",t)}Yt("MuiBackdrop",["root","invisible"]);const W3=["children","component","components","componentsProps","className","invisible","open","transitionDuration","TransitionComponent"],U3=t=>{const{classes:e,invisible:r}=t;return zt({root:["root",r&&"invisible"]},N3,e)},H3=ke("div",{name:"MuiBackdrop",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.root,r.invisible&&e.invisible]}})(({ownerState:t})=>Q({position:"fixed",display:"flex",alignItems:"center",justifyContent:"center",right:0,bottom:0,top:0,left:0,backgroundColor:"rgba(0, 0, 0, 0.5)",WebkitTapHighlightColor:"transparent"},t.invisible&&{backgroundColor:"transparent"})),M3=Y.exports.forwardRef(function(e,r){var n,i;const a=kt({props:e,name:"MuiBackdrop"}),{children:s,component:l="div",components:c={},componentsProps:f={},className:p,invisible:h=!1,open:m,transitionDuration:g,TransitionComponent:y=Yq}=a,k=Le(a,W3),q=Q({},a,{component:l,invisible:h}),P=U3(q);return $(y,Q({in:m,timeout:g},k,{children:$(H3,{"aria-hidden":!0,as:(n=c.Root)!=null?n:l,className:We(P.root,p),ownerState:Q({},q,(i=f.root)==null?void 0:i.ownerState),classes:P,ref:r,children:s})}))});var Cq=M3;const O3=G0(),z3=dN({defaultTheme:O3,defaultClassName:"MuiBox-root",generateClassName:Bg.generate});var Q0=z3,Y3=Oq($("path",{d:"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"}),"MoreHoriz");const C3=ke(X0)(({theme:t})=>Q({display:"flex",marginLeft:`calc(${t.spacing(1)} * 0.5)`,marginRight:`calc(${t.spacing(1)} * 0.5)`},t.palette.mode==="light"?{backgroundColor:t.palette.grey[100],color:t.palette.grey[700]}:{backgroundColor:t.palette.grey[700],color:t.palette.grey[100]},{borderRadius:2,"&:hover, &:focus":Q({},t.palette.mode==="light"?{backgroundColor:t.palette.grey[200]}:{backgroundColor:t.palette.grey[600]}),"&:active":Q({boxShadow:t.shadows[0]},t.palette.mode==="light"?{backgroundColor:$S(t.palette.grey[200],.12)}:{backgroundColor:$S(t.palette.grey[600],.12)})})),F3=ke(Y3)({width:24,height:16});function I3(t){const e=t;return $("li",{children:$(C3,Q({focusRipple:!0},t,{ownerState:e,children:$(F3,{ownerState:e})}))})}function E3(t){return Wt("MuiBreadcrumbs",t)}const J3=Yt("MuiBreadcrumbs",["root","ol","li","separator"]);var D3=J3;const G3=["children","className","component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","separator"],K3=t=>{const{classes:e}=t;return zt({root:["root"],li:["li"],ol:["ol"],separator:["separator"]},E3,e)},B3=ke(Oa,{name:"MuiBreadcrumbs",slot:"Root",overridesResolver:(t,e)=>[{[`& .${D3.li}`]:e.li},e.root]})({}),Z3=ke("ol",{name:"MuiBreadcrumbs",slot:"Ol",overridesResolver:(t,e)=>e.ol})({display:"flex",flexWrap:"wrap",alignItems:"center",padding:0,margin:0,listStyle:"none"}),X3=ke("li",{name:"MuiBreadcrumbs",slot:"Separator",overridesResolver:(t,e)=>e.separator})({display:"flex",userSelect:"none",marginLeft:8,marginRight:8});function Q3(t,e,r,n){return t.reduce((i,a,s)=>(s<t.length-1?i=i.concat(a,$(X3,{"aria-hidden":!0,className:e,ownerState:n,children:r},`separator-${s}`)):i.push(a),i),[])}const _3=Y.exports.forwardRef(function(e,r){const n=kt({props:e,name:"MuiBreadcrumbs"}),{children:i,className:a,component:s="nav",expandText:l="Show path",itemsAfterCollapse:c=1,itemsBeforeCollapse:f=1,maxItems:p=8,separator:h="/"}=n,m=Le(n,G3),[g,y]=Y.exports.useState(!1),k=Q({},n,{component:s,expanded:g,expandText:l,itemsAfterCollapse:c,itemsBeforeCollapse:f,maxItems:p,separator:h}),q=K3(k),P=Y.exports.useRef(null),x=j=>{const R=()=>{y(!0);const V=P.current.querySelector("a[href],button,[tabindex]");V&&V.focus()};return f+c>=j.length?j:[...j.slice(0,f),$(I3,{"aria-label":l,onClick:R},"ellipsis"),...j.slice(j.length-c,j.length)]},b=Y.exports.Children.toArray(i).filter(j=>Y.exports.isValidElement(j)).map((j,R)=>$("li",{className:q.li,children:j},`child-${R}`));return $(B3,Q({ref:r,component:s,color:"text.secondary",className:We(q.root,a),ownerState:k},m,{children:$(Z3,{className:q.ol,ref:P,ownerState:k,children:Q3(g||p&&b.length<=p?b:x(b),q.separator,h,k)})}))});var $3=_3;function e4(t){return Wt("MuiButton",t)}const t4=Yt("MuiButton",["root","text","textInherit","textPrimary","textSecondary","outlined","outlinedInherit","outlinedPrimary","outlinedSecondary","contained","containedInherit","containedPrimary","containedSecondary","disableElevation","focusVisible","disabled","colorInherit","textSizeSmall","textSizeMedium","textSizeLarge","outlinedSizeSmall","outlinedSizeMedium","outlinedSizeLarge","containedSizeSmall","containedSizeMedium","containedSizeLarge","sizeMedium","sizeSmall","sizeLarge","fullWidth","startIcon","endIcon","iconSizeSmall","iconSizeMedium","iconSizeLarge"]);var Gf=t4;const r4=Y.exports.createContext({});var Fq=r4;const n4=["children","color","component","className","disabled","disableElevation","disableFocusRipple","endIcon","focusVisibleClassName","fullWidth","size","startIcon","type","variant"],i4=t=>{const{color:e,disableElevation:r,fullWidth:n,size:i,variant:a,classes:s}=t,l={root:["root",a,`${a}${Se(e)}`,`size${Se(i)}`,`${a}Size${Se(i)}`,e==="inherit"&&"colorInherit",r&&"disableElevation",n&&"fullWidth"],label:["label"],startIcon:["startIcon",`iconSize${Se(i)}`],endIcon:["endIcon",`iconSize${Se(i)}`]},c=zt(l,e4,s);return Q({},s,c)},Iq=t=>Q({},t.size==="small"&&{"& > *:nth-of-type(1)":{fontSize:18}},t.size==="medium"&&{"& > *:nth-of-type(1)":{fontSize:20}},t.size==="large"&&{"& > *:nth-of-type(1)":{fontSize:22}}),a4=ke(X0,{shouldForwardProp:t=>K0(t)||t==="classes",name:"MuiButton",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.root,e[r.variant],e[`${r.variant}${Se(r.color)}`],e[`size${Se(r.size)}`],e[`${r.variant}Size${Se(r.size)}`],r.color==="inherit"&&e.colorInherit,r.disableElevation&&e.disableElevation,r.fullWidth&&e.fullWidth]}})(({theme:t,ownerState:e})=>{var r,n;return Q({},t.typography.button,{minWidth:64,padding:"6px 16px",borderRadius:(t.vars||t).shape.borderRadius,transition:t.transitions.create(["background-color","box-shadow","border-color","color"],{duration:t.transitions.duration.short}),"&:hover":Q({textDecoration:"none",backgroundColor:t.vars?`rgba(${t.vars.palette.text.primaryChannel} / ${t.vars.palette.action.hoverOpacity})`:hi(t.palette.text.primary,t.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},e.variant==="text"&&e.color!=="inherit"&&{backgroundColor:t.vars?`rgba(${t.vars.palette[e.color].mainChannel} / ${t.vars.palette.action.hoverOpacity})`:hi(t.palette[e.color].main,t.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},e.variant==="outlined"&&e.color!=="inherit"&&{border:`1px solid ${(t.vars||t).palette[e.color].main}`,backgroundColor:t.vars?`rgba(${t.vars.palette[e.color].mainChannel} / ${t.vars.palette.action.hoverOpacity})`:hi(t.palette[e.color].main,t.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},e.variant==="contained"&&{backgroundColor:(t.vars||t).palette.grey.A100,boxShadow:(t.vars||t).shadows[4],"@media (hover: none)":{boxShadow:(t.vars||t).shadows[2],backgroundColor:(t.vars||t).palette.grey[300]}},e.variant==="contained"&&e.color!=="inherit"&&{backgroundColor:(t.vars||t).palette[e.color].dark,"@media (hover: none)":{backgroundColor:(t.vars||t).palette[e.color].main}}),"&:active":Q({},e.variant==="contained"&&{boxShadow:(t.vars||t).shadows[8]}),[`&.${Gf.focusVisible}`]:Q({},e.variant==="contained"&&{boxShadow:(t.vars||t).shadows[6]}),[`&.${Gf.disabled}`]:Q({color:(t.vars||t).palette.action.disabled},e.variant==="outlined"&&{border:`1px solid ${(t.vars||t).palette.action.disabledBackground}`},e.variant==="outlined"&&e.color==="secondary"&&{border:`1px solid ${(t.vars||t).palette.action.disabled}`},e.variant==="contained"&&{color:(t.vars||t).palette.action.disabled,boxShadow:(t.vars||t).shadows[0],backgroundColor:(t.vars||t).palette.action.disabledBackground})},e.variant==="text"&&{padding:"6px 8px"},e.variant==="text"&&e.color!=="inherit"&&{color:(t.vars||t).palette[e.color].main},e.variant==="outlined"&&{padding:"5px 15px",border:"1px solid currentColor"},e.variant==="outlined"&&e.color!=="inherit"&&{color:(t.vars||t).palette[e.color].main,border:t.vars?`1px solid rgba(${t.vars.palette[e.color].mainChannel} / 0.5)`:`1px solid ${hi(t.palette[e.color].main,.5)}`},e.variant==="contained"&&{color:t.vars?t.vars.palette.text.primary:(r=(n=t.palette).getContrastText)==null?void 0:r.call(n,t.palette.grey[300]),backgroundColor:(t.vars||t).palette.grey[300],boxShadow:(t.vars||t).shadows[2]},e.variant==="contained"&&e.color!=="inherit"&&{color:(t.vars||t).palette[e.color].contrastText,backgroundColor:(t.vars||t).palette[e.color].main},e.color==="inherit"&&{color:"inherit",borderColor:"currentColor"},e.size==="small"&&e.variant==="text"&&{padding:"4px 5px",fontSize:t.typography.pxToRem(13)},e.size==="large"&&e.variant==="text"&&{padding:"8px 11px",fontSize:t.typography.pxToRem(15)},e.size==="small"&&e.variant==="outlined"&&{padding:"3px 9px",fontSize:t.typography.pxToRem(13)},e.size==="large"&&e.variant==="outlined"&&{padding:"7px 21px",fontSize:t.typography.pxToRem(15)},e.size==="small"&&e.variant==="contained"&&{padding:"4px 10px",fontSize:t.typography.pxToRem(13)},e.size==="large"&&e.variant==="contained"&&{padding:"8px 22px",fontSize:t.typography.pxToRem(15)},e.fullWidth&&{width:"100%"})},({ownerState:t})=>t.disableElevation&&{boxShadow:"none","&:hover":{boxShadow:"none"},[`&.${Gf.focusVisible}`]:{boxShadow:"none"},"&:active":{boxShadow:"none"},[`&.${Gf.disabled}`]:{boxShadow:"none"}}),s4=ke("span",{name:"MuiButton",slot:"StartIcon",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.startIcon,e[`iconSize${Se(r.size)}`]]}})(({ownerState:t})=>Q({display:"inherit",marginRight:8,marginLeft:-4},t.size==="small"&&{marginLeft:-2},Iq(t))),o4=ke("span",{name:"MuiButton",slot:"EndIcon",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.endIcon,e[`iconSize${Se(r.size)}`]]}})(({ownerState:t})=>Q({display:"inherit",marginRight:-4,marginLeft:8},t.size==="small"&&{marginRight:-2},Iq(t))),l4=Y.exports.forwardRef(function(e,r){const n=Y.exports.useContext(Fq),i=ck(n,e),a=kt({props:i,name:"MuiButton"}),{children:s,color:l="primary",component:c="button",className:f,disabled:p=!1,disableElevation:h=!1,disableFocusRipple:m=!1,endIcon:g,focusVisibleClassName:y,fullWidth:k=!1,size:q="medium",startIcon:P,type:x,variant:b="text"}=a,j=Le(a,n4),R=Q({},a,{color:l,component:c,disabled:p,disableElevation:h,disableFocusRipple:m,fullWidth:k,size:q,type:x,variant:b}),V=i4(R),N=P&&$(s4,{className:V.startIcon,ownerState:R,children:P}),H=g&&$(o4,{className:V.endIcon,ownerState:R,children:g});return Fe(a4,Q({ownerState:R,className:We(f,n.className),component:c,disabled:p,focusRipple:!m,focusVisibleClassName:We(V.focusVisible,y),ref:r,type:x},j,{classes:V,children:[N,s,H]}))});var tn=l4;function u4(t){return Wt("MuiButtonGroup",t)}const c4=Yt("MuiButtonGroup",["root","contained","outlined","text","disableElevation","disabled","fullWidth","vertical","grouped","groupedHorizontal","groupedVertical","groupedText","groupedTextHorizontal","groupedTextVertical","groupedTextPrimary","groupedTextSecondary","groupedOutlined","groupedOutlinedHorizontal","groupedOutlinedVertical","groupedOutlinedPrimary","groupedOutlinedSecondary","groupedContained","groupedContainedHorizontal","groupedContainedVertical","groupedContainedPrimary","groupedContainedSecondary"]);var qa=c4;const f4=["children","className","color","component","disabled","disableElevation","disableFocusRipple","disableRipple","fullWidth","orientation","size","variant"],d4=(t,e)=>{const{ownerState:r}=t;return[{[`& .${qa.grouped}`]:e.grouped},{[`& .${qa.grouped}`]:e[`grouped${Se(r.orientation)}`]},{[`& .${qa.grouped}`]:e[`grouped${Se(r.variant)}`]},{[`& .${qa.grouped}`]:e[`grouped${Se(r.variant)}${Se(r.orientation)}`]},{[`& .${qa.grouped}`]:e[`grouped${Se(r.variant)}${Se(r.color)}`]},e.root,e[r.variant],r.disableElevation===!0&&e.disableElevation,r.fullWidth&&e.fullWidth,r.orientation==="vertical"&&e.vertical]},p4=t=>{const{classes:e,color:r,disabled:n,disableElevation:i,fullWidth:a,orientation:s,variant:l}=t,c={root:["root",l,s==="vertical"&&"vertical",a&&"fullWidth",i&&"disableElevation"],grouped:["grouped",`grouped${Se(s)}`,`grouped${Se(l)}`,`grouped${Se(l)}${Se(s)}`,`grouped${Se(l)}${Se(r)}`,n&&"disabled"]};return zt(c,u4,e)},h4=ke("div",{name:"MuiButtonGroup",slot:"Root",overridesResolver:d4})(({theme:t,ownerState:e})=>Q({display:"inline-flex",borderRadius:(t.vars||t).shape.borderRadius},e.variant==="contained"&&{boxShadow:(t.vars||t).shadows[2]},e.disableElevation&&{boxShadow:"none"},e.fullWidth&&{width:"100%"},e.orientation==="vertical"&&{flexDirection:"column"},{[`& .${qa.grouped}`]:Q({minWidth:40,"&:not(:first-of-type)":Q({},e.orientation==="horizontal"&&{borderTopLeftRadius:0,borderBottomLeftRadius:0},e.orientation==="vertical"&&{borderTopRightRadius:0,borderTopLeftRadius:0},e.variant==="outlined"&&e.orientation==="horizontal"&&{marginLeft:-1},e.variant==="outlined"&&e.orientation==="vertical"&&{marginTop:-1}),"&:not(:last-of-type)":Q({},e.orientation==="horizontal"&&{borderTopRightRadius:0,borderBottomRightRadius:0},e.orientation==="vertical"&&{borderBottomRightRadius:0,borderBottomLeftRadius:0},e.variant==="text"&&e.orientation==="horizontal"&&{borderRight:t.vars?`1px solid rgba(${t.vars.palette.common.onBackgroundChannel} / 0.23)`:`1px solid ${t.palette.mode==="light"?"rgba(0, 0, 0, 0.23)":"rgba(255, 255, 255, 0.23)"}`},e.variant==="text"&&e.orientation==="vertical"&&{borderBottom:t.vars?`1px solid rgba(${t.vars.palette.common.onBackgroundChannel} / 0.23)`:`1px solid ${t.palette.mode==="light"?"rgba(0, 0, 0, 0.23)":"rgba(255, 255, 255, 0.23)"}`},e.variant==="text"&&e.color!=="inherit"&&{borderColor:t.vars?`rgba(${t.vars.palette[e.color].mainChannel} / 0.5)`:hi(t.palette[e.color].main,.5)},e.variant==="outlined"&&e.orientation==="horizontal"&&{borderRightColor:"transparent"},e.variant==="outlined"&&e.orientation==="vertical"&&{borderBottomColor:"transparent"},e.variant==="contained"&&e.orientation==="horizontal"&&{borderRight:`1px solid ${(t.vars||t).palette.grey[400]}`,[`&.${qa.disabled}`]:{borderRight:`1px solid ${(t.vars||t).palette.action.disabled}`}},e.variant==="contained"&&e.orientation==="vertical"&&{borderBottom:`1px solid ${(t.vars||t).palette.grey[400]}`,[`&.${qa.disabled}`]:{borderBottom:`1px solid ${(t.vars||t).palette.action.disabled}`}},e.variant==="contained"&&e.color!=="inherit"&&{borderColor:(t.vars||t).palette[e.color].dark},{"&:hover":Q({},e.variant==="outlined"&&e.orientation==="horizontal"&&{borderRightColor:"currentColor"},e.variant==="outlined"&&e.orientation==="vertical"&&{borderBottomColor:"currentColor"})}),"&:hover":Q({},e.variant==="contained"&&{boxShadow:"none"})},e.variant==="contained"&&{boxShadow:"none"})})),m4=Y.exports.forwardRef(function(e,r){const n=kt({props:e,name:"MuiButtonGroup"}),{children:i,className:a,color:s="primary",component:l="div",disabled:c=!1,disableElevation:f=!1,disableFocusRipple:p=!1,disableRipple:h=!1,fullWidth:m=!1,orientation:g="horizontal",size:y="medium",variant:k="outlined"}=n,q=Le(n,f4),P=Q({},n,{color:s,component:l,disabled:c,disableElevation:f,disableFocusRipple:p,disableRipple:h,fullWidth:m,orientation:g,size:y,variant:k}),x=p4(P),b=Y.exports.useMemo(()=>({className:x.grouped,color:s,disabled:c,disableElevation:f,disableFocusRipple:p,disableRipple:h,fullWidth:m,size:y,variant:k}),[s,c,f,p,h,m,y,k,x.grouped]);return $(h4,Q({as:l,role:"group",className:We(x.root,a),ref:r,ownerState:P},q,{children:$(Fq.Provider,{value:b,children:i})}))});var v4=m4;function y4(t){return Wt("MuiCircularProgress",t)}Yt("MuiCircularProgress",["root","determinate","indeterminate","colorPrimary","colorSecondary","svg","circle","circleDeterminate","circleIndeterminate","circleDisableShrink"]);const g4=["className","color","disableShrink","size","style","thickness","value","variant"];let vh=t=>t,kP,bP,qP,TP;const ya=44,A4=lc(kP||(kP=vh`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`)),S4=lc(bP||(bP=vh`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -125px;
  }
`)),x4=t=>{const{classes:e,variant:r,color:n,disableShrink:i}=t,a={root:["root",r,`color${Se(n)}`],svg:["svg"],circle:["circle",`circle${Se(r)}`,i&&"circleDisableShrink"]};return zt(a,y4,e)},P4=ke("span",{name:"MuiCircularProgress",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.root,e[r.variant],e[`color${Se(r.color)}`]]}})(({ownerState:t,theme:e})=>Q({display:"inline-block"},t.variant==="determinate"&&{transition:e.transitions.create("transform")},t.color!=="inherit"&&{color:(e.vars||e).palette[t.color].main}),({ownerState:t})=>t.variant==="indeterminate"&&Dg(qP||(qP=vh`
      animation: ${0} 1.4s linear infinite;
    `),A4)),w4=ke("svg",{name:"MuiCircularProgress",slot:"Svg",overridesResolver:(t,e)=>e.svg})({display:"block"}),k4=ke("circle",{name:"MuiCircularProgress",slot:"Circle",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.circle,e[`circle${Se(r.variant)}`],r.disableShrink&&e.circleDisableShrink]}})(({ownerState:t,theme:e})=>Q({stroke:"currentColor"},t.variant==="determinate"&&{transition:e.transitions.create("stroke-dashoffset")},t.variant==="indeterminate"&&{strokeDasharray:"80px, 200px",strokeDashoffset:0}),({ownerState:t})=>t.variant==="indeterminate"&&!t.disableShrink&&Dg(TP||(TP=vh`
      animation: ${0} 1.4s ease-in-out infinite;
    `),S4)),b4=Y.exports.forwardRef(function(e,r){const n=kt({props:e,name:"MuiCircularProgress"}),{className:i,color:a="primary",disableShrink:s=!1,size:l=40,style:c,thickness:f=3.6,value:p=0,variant:h="indeterminate"}=n,m=Le(n,g4),g=Q({},n,{color:a,disableShrink:s,size:l,thickness:f,value:p,variant:h}),y=x4(g),k={},q={},P={};if(h==="determinate"){const x=2*Math.PI*((ya-f)/2);k.strokeDasharray=x.toFixed(3),P["aria-valuenow"]=Math.round(p),k.strokeDashoffset=`${((100-p)/100*x).toFixed(3)}px`,q.transform="rotate(-90deg)"}return $(P4,Q({className:We(y.root,i),style:Q({width:l,height:l},q,c),ownerState:g,ref:r,role:"progressbar"},P,m,{children:$(w4,{className:y.svg,ownerState:g,viewBox:`${ya/2} ${ya/2} ${ya} ${ya}`,children:$(k4,{className:y.circle,style:k,ownerState:g,cx:ya,cy:ya,r:(ya-f)/2,fill:"none",strokeWidth:f})})}))});var q4=b4;const T4=UN({createStyledComponent:ke("div",{name:"MuiContainer",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.root,e[`maxWidth${Se(String(r.maxWidth))}`],r.fixed&&e.fixed,r.disableGutters&&e.disableGutters]}}),useThemeProps:t=>kt({props:t,name:"MuiContainer"})});var yh=T4;const j4=(t,e)=>Q({WebkitFontSmoothing:"antialiased",MozOsxFontSmoothing:"grayscale",boxSizing:"border-box",WebkitTextSizeAdjust:"100%"},e&&{colorScheme:t.palette.mode}),R4=t=>Q({color:(t.vars||t).palette.text.primary},t.typography.body1,{backgroundColor:(t.vars||t).palette.background.default,"@media print":{backgroundColor:(t.vars||t).palette.common.white}}),V4=(t,e=!1)=>{var r,n;let i={html:j4(t,e),"*, *::before, *::after":{boxSizing:"inherit"},"strong, b":{fontWeight:t.typography.fontWeightBold},body:Q({margin:0},R4(t),{"&::backdrop":{backgroundColor:(t.vars||t).palette.background.default}})};const a=(r=t.components)==null||(n=r.MuiCssBaseline)==null?void 0:n.styleOverrides;return a&&(i=[i,a]),i};function L4(t){const e=kt({props:t,name:"MuiCssBaseline"}),{children:r,enableColorScheme:n=!1}=e;return Fe(Y.exports.Fragment,{children:[$(j3,{styles:i=>V4(i,n)}),r]})}const N4=["BackdropComponent","closeAfterTransition","children","components","componentsProps","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted"],W4=t=>t.classes,U4=ke("div",{name:"MuiModal",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.root,!r.open&&r.exited&&e.hidden]}})(({theme:t,ownerState:e})=>Q({position:"fixed",zIndex:(t.vars||t).zIndex.modal,right:0,bottom:0,top:0,left:0},!e.open&&e.exited&&{visibility:"hidden"})),H4=ke(Cq,{name:"MuiModal",slot:"Backdrop",overridesResolver:(t,e)=>e.backdrop})({zIndex:-1}),M4=Y.exports.forwardRef(function(e,r){var n;const i=kt({name:"MuiModal",props:e}),{BackdropComponent:a=H4,closeAfterTransition:s=!1,children:l,components:c={},componentsProps:f={},disableAutoFocus:p=!1,disableEnforceFocus:h=!1,disableEscapeKeyDown:m=!1,disablePortal:g=!1,disableRestoreFocus:y=!1,disableScrollLock:k=!1,hideBackdrop:q=!1,keepMounted:P=!1}=i,x=Le(i,N4),[b,j]=Y.exports.useState(!0),R={closeAfterTransition:s,disableAutoFocus:p,disableEnforceFocus:h,disableEscapeKeyDown:m,disablePortal:g,disableRestoreFocus:y,disableScrollLock:k,hideBackdrop:q,keepMounted:P},V=Q({},i,R,{exited:b}),N=W4(V);return $(nH,Q({components:Q({Root:U4},c),componentsProps:{root:Q({},f.root,(!c.Root||!Wk(c.Root))&&{ownerState:Q({},(n=f.root)==null?void 0:n.ownerState)})},BackdropComponent:a,onTransitionEnter:()=>j(!1),onTransitionExited:()=>j(!0),ref:r},x,{classes:N},R,{children:l}))});var O4=M4;function z4(t){return Wt("MuiDialog",t)}const Y4=Yt("MuiDialog",["root","scrollPaper","scrollBody","container","paper","paperScrollPaper","paperScrollBody","paperWidthFalse","paperWidthXs","paperWidthSm","paperWidthMd","paperWidthLg","paperWidthXl","paperFullWidth","paperFullScreen"]);var Rv=Y4;const C4=Y.exports.createContext({});var Eq=C4;const F4=["aria-describedby","aria-labelledby","BackdropComponent","BackdropProps","children","className","disableEscapeKeyDown","fullScreen","fullWidth","maxWidth","onBackdropClick","onClose","open","PaperComponent","PaperProps","scroll","TransitionComponent","transitionDuration","TransitionProps"],I4=ke(Cq,{name:"MuiDialog",slot:"Backdrop",overrides:(t,e)=>e.backdrop})({zIndex:-1}),E4=t=>{const{classes:e,scroll:r,maxWidth:n,fullWidth:i,fullScreen:a}=t,s={root:["root"],container:["container",`scroll${Se(r)}`],paper:["paper",`paperScroll${Se(r)}`,`paperWidth${Se(String(n))}`,i&&"paperFullWidth",a&&"paperFullScreen"]};return zt(s,z4,e)},J4=ke(O4,{name:"MuiDialog",slot:"Root",overridesResolver:(t,e)=>e.root})({"@media print":{position:"absolute !important"}}),D4=ke("div",{name:"MuiDialog",slot:"Container",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.container,e[`scroll${Se(r.scroll)}`]]}})(({ownerState:t})=>Q({height:"100%","@media print":{height:"auto"},outline:0},t.scroll==="paper"&&{display:"flex",justifyContent:"center",alignItems:"center"},t.scroll==="body"&&{overflowY:"auto",overflowX:"hidden",textAlign:"center","&:after":{content:'""',display:"inline-block",verticalAlign:"middle",height:"100%",width:"0"}})),G4=ke(Hq,{name:"MuiDialog",slot:"Paper",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.paper,e[`scrollPaper${Se(r.scroll)}`],e[`paperWidth${Se(String(r.maxWidth))}`],r.fullWidth&&e.paperFullWidth,r.fullScreen&&e.paperFullScreen]}})(({theme:t,ownerState:e})=>Q({margin:32,position:"relative",overflowY:"auto","@media print":{overflowY:"visible",boxShadow:"none"}},e.scroll==="paper"&&{display:"flex",flexDirection:"column",maxHeight:"calc(100% - 64px)"},e.scroll==="body"&&{display:"inline-block",verticalAlign:"middle",textAlign:"left"},!e.maxWidth&&{maxWidth:"calc(100% - 64px)"},e.maxWidth==="xs"&&{maxWidth:t.breakpoints.unit==="px"?Math.max(t.breakpoints.values.xs,444):`${t.breakpoints.values.xs}${t.breakpoints.unit}`,[`&.${Rv.paperScrollBody}`]:{[t.breakpoints.down(Math.max(t.breakpoints.values.xs,444)+32*2)]:{maxWidth:"calc(100% - 64px)"}}},e.maxWidth!=="xs"&&{maxWidth:`${t.breakpoints.values[e.maxWidth]}${t.breakpoints.unit}`,[`&.${Rv.paperScrollBody}`]:{[t.breakpoints.down(t.breakpoints.values[e.maxWidth]+32*2)]:{maxWidth:"calc(100% - 64px)"}}},e.fullWidth&&{width:"calc(100% - 64px)"},e.fullScreen&&{margin:0,width:"100%",maxWidth:"100%",height:"100%",maxHeight:"none",borderRadius:0,[`&.${Rv.paperScrollBody}`]:{margin:0,maxWidth:"100%"}})),K4=Y.exports.forwardRef(function(e,r){const n=kt({props:e,name:"MuiDialog"}),i=Uq(),a={enter:i.transitions.duration.enteringScreen,exit:i.transitions.duration.leavingScreen},{"aria-describedby":s,"aria-labelledby":l,BackdropComponent:c,BackdropProps:f,children:p,className:h,disableEscapeKeyDown:m=!1,fullScreen:g=!1,fullWidth:y=!1,maxWidth:k="sm",onBackdropClick:q,onClose:P,open:x,PaperComponent:b=Hq,PaperProps:j={},scroll:R="paper",TransitionComponent:V=Yq,transitionDuration:N=a,TransitionProps:H}=n,O=Le(n,F4),M=Q({},n,{disableEscapeKeyDown:m,fullScreen:g,fullWidth:y,maxWidth:k,scroll:R}),F=E4(M),J=Y.exports.useRef(),X=ie=>{J.current=ie.target===ie.currentTarget},re=ie=>{!J.current||(J.current=null,q&&q(ie),P&&P(ie,"backdropClick"))},ae=uk(l),te=Y.exports.useMemo(()=>({titleId:ae}),[ae]);return $(J4,Q({className:We(F.root,h),BackdropProps:Q({transitionDuration:N,as:c},f),closeAfterTransition:!0,BackdropComponent:I4,disableEscapeKeyDown:m,onClose:P,open:x,ref:r,onClick:re,ownerState:M},O,{children:$(V,Q({appear:!0,in:x,timeout:N,role:"presentation"},H,{children:$(D4,{className:We(F.container),onMouseDown:X,ownerState:M,children:$(G4,Q({as:b,elevation:24,role:"dialog","aria-describedby":s,"aria-labelledby":ae},j,{className:We(F.paper,j.className),ownerState:M,children:$(Eq.Provider,{value:te,children:p})}))})}))}))});var B4=K4;function Z4(t){return Wt("MuiDialogActions",t)}Yt("MuiDialogActions",["root","spacing"]);const X4=["className","disableSpacing"],Q4=t=>{const{classes:e,disableSpacing:r}=t;return zt({root:["root",!r&&"spacing"]},Z4,e)},_4=ke("div",{name:"MuiDialogActions",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.root,!r.disableSpacing&&e.spacing]}})(({ownerState:t})=>Q({display:"flex",alignItems:"center",padding:8,justifyContent:"flex-end",flex:"0 0 auto"},!t.disableSpacing&&{"& > :not(:first-of-type)":{marginLeft:8}})),$4=Y.exports.forwardRef(function(e,r){const n=kt({props:e,name:"MuiDialogActions"}),{className:i,disableSpacing:a=!1}=n,s=Le(n,X4),l=Q({},n,{disableSpacing:a}),c=Q4(l);return $(_4,Q({className:We(c.root,i),ownerState:l,ref:r},s))});var eM=$4;function tM(t){return Wt("MuiDialogTitle",t)}Yt("MuiDialogTitle",["root"]);function rM(t){return Wt("MuiDialogContentText",t)}Yt("MuiDialogContentText",["root"]);const nM=["children"],iM=t=>{const{classes:e}=t,n=zt({root:["root"]},rM,e);return Q({},e,n)},aM=ke(Oa,{shouldForwardProp:t=>K0(t)||t==="classes",name:"MuiDialogContentText",slot:"Root",overridesResolver:(t,e)=>e.root})({}),sM=Y.exports.forwardRef(function(e,r){const n=kt({props:e,name:"MuiDialogContentText"}),i=Le(n,nM),a=iM(i);return $(aM,Q({component:"p",variant:"body1",color:"text.secondary",ref:r,ownerState:i},n,{classes:a}))});var oM=sM;const lM=["className","id"],uM=t=>{const{classes:e}=t;return zt({root:["root"]},tM,e)},cM=ke(Oa,{name:"MuiDialogTitle",slot:"Root",overridesResolver:(t,e)=>e.root})({padding:"16px 24px",flex:"0 0 auto"}),fM=Y.exports.forwardRef(function(e,r){const n=kt({props:e,name:"MuiDialogTitle"}),{className:i,id:a}=n,s=Le(n,lM),l=n,c=uM(l),{titleId:f=a}=Y.exports.useContext(Eq);return $(cM,Q({component:"h2",className:We(c.root,i),ownerState:l,ref:r,variant:"h6",id:f},s))});var dM=fM;function pM(t){return Wt("MuiImageList",t)}Yt("MuiImageList",["root","masonry","quilted","standard","woven"]);const hM=Y.exports.createContext({});var Jq=hM;const mM=["children","className","cols","component","rowHeight","gap","style","variant"],vM=t=>{const{classes:e,variant:r}=t;return zt({root:["root",r]},pM,e)},yM=ke("ul",{name:"MuiImageList",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.root,e[r.variant]]}})(({ownerState:t})=>Q({display:"grid",overflowY:"auto",listStyle:"none",padding:0,WebkitOverflowScrolling:"touch"},t.variant==="masonry"&&{display:"block"})),gM=Y.exports.forwardRef(function(e,r){const n=kt({props:e,name:"MuiImageList"}),{children:i,className:a,cols:s=2,component:l="ul",rowHeight:c="auto",gap:f=4,style:p,variant:h="standard"}=n,m=Le(n,mM),g=Y.exports.useMemo(()=>({rowHeight:c,gap:f,variant:h}),[c,f,h]);Y.exports.useEffect(()=>{},[]);const y=Q(h==="masonry"?{columnCount:s,columnGap:f}:{gridTemplateColumns:`repeat(${s}, 1fr)`,gap:f},p),k=Q({},n,{component:l,gap:f,rowHeight:c,variant:h}),q=vM(k);return $(yM,Q({as:l,className:We(q.root,q[h],a),ref:r,style:y,ownerState:k},m,{children:$(Jq.Provider,{value:g,children:i})}))});var AM=gM;function SM(t){return Wt("MuiImageListItem",t)}const xM=Yt("MuiImageListItem",["root","img","standard","woven","masonry","quilted"]);var jP=xM;const PM=["children","className","cols","component","rows","style"],wM=t=>{const{classes:e,variant:r}=t;return zt({root:["root",r],img:["img"]},SM,e)},kM=ke("li",{name:"MuiImageListItem",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[{[`& .${jP.img}`]:e.img},e.root,e[r.variant]]}})(({ownerState:t})=>Q({display:"inline-block",position:"relative",lineHeight:0},t.variant==="standard"&&{display:"flex",flexDirection:"column"},t.variant==="woven"&&{height:"100%",alignSelf:"center","&:nth-of-type(even)":{height:"70%"}},{[`& .${jP.img}`]:Q({objectFit:"cover",width:"100%",height:"100%"},t.variant==="standard"&&{height:"auto",flexGrow:1})})),bM=Y.exports.forwardRef(function(e,r){const n=kt({props:e,name:"MuiImageListItem"}),{children:i,className:a,cols:s=1,component:l="li",rows:c=1,style:f}=n,p=Le(n,PM),{rowHeight:h="auto",gap:m,variant:g}=Y.exports.useContext(Jq);let y="auto";g==="woven"?y=void 0:h!=="auto"&&(y=h*c+m*(c-1));const k=Q({},n,{cols:s,component:l,gap:m,rowHeight:h,rows:c,variant:g}),q=wM(k);return $(kM,Q({as:l,className:We(q.root,q[g],a),ref:r,style:Q({height:y,gridColumnEnd:g!=="masonry"?`span ${s}`:void 0,gridRowEnd:g!=="masonry"?`span ${c}`:void 0,marginBottom:g==="masonry"?m:void 0},f),ownerState:k},p,{children:Y.exports.Children.map(i,P=>Y.exports.isValidElement(P)?P.type==="img"||lk(P,["Image"])?Y.exports.cloneElement(P,{className:We(q.img,P.props.className)}):P:null)}))});var Dq=bM;function qM(t){return Wt("MuiImageListItemBar",t)}Yt("MuiImageListItemBar",["root","positionBottom","positionTop","positionBelow","titleWrap","titleWrapBottom","titleWrapTop","titleWrapBelow","titleWrapActionPosLeft","titleWrapActionPosRight","title","subtitle","actionIcon","actionIconActionPosLeft","actionIconActionPosRight"]);const TM=["actionIcon","actionPosition","className","subtitle","title","position"],jM=t=>{const{classes:e,position:r,actionIcon:n,actionPosition:i}=t,a={root:["root",`position${Se(r)}`],titleWrap:["titleWrap",`titleWrap${Se(r)}`,n&&`titleWrapActionPos${Se(i)}`],title:["title"],subtitle:["subtitle"],actionIcon:["actionIcon",`actionIconActionPos${Se(i)}`]};return zt(a,qM,e)},RM=ke("div",{name:"MuiImageListItemBar",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.root,e[`position${Se(r.position)}`]]}})(({theme:t,ownerState:e})=>Q({position:"absolute",left:0,right:0,background:"rgba(0, 0, 0, 0.5)",display:"flex",alignItems:"center",fontFamily:t.typography.fontFamily},e.position==="bottom"&&{bottom:0},e.position==="top"&&{top:0},e.position==="below"&&{position:"relative",background:"transparent",alignItems:"normal"})),VM=ke("div",{name:"MuiImageListItemBar",slot:"TitleWrap",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.titleWrap,e[`titleWrap${Se(r.position)}`],r.actionIcon&&e[`titleWrapActionPos${Se(r.actionPosition)}`]]}})(({theme:t,ownerState:e})=>Q({flexGrow:1,padding:"12px 16px",color:(t.vars||t).palette.common.white,overflow:"hidden"},e.position==="below"&&{padding:"6px 0 12px",color:"inherit"},e.actionIcon&&e.actionPosition==="left"&&{paddingLeft:0},e.actionIcon&&e.actionPosition==="right"&&{paddingRight:0})),LM=ke("div",{name:"MuiImageListItemBar",slot:"Title",overridesResolver:(t,e)=>e.title})(({theme:t})=>({fontSize:t.typography.pxToRem(16),lineHeight:"24px",textOverflow:"ellipsis",overflow:"hidden",whiteSpace:"nowrap"})),NM=ke("div",{name:"MuiImageListItemBar",slot:"Subtitle",overridesResolver:(t,e)=>e.subtitle})(({theme:t})=>({fontSize:t.typography.pxToRem(12),lineHeight:1,textOverflow:"ellipsis",overflow:"hidden",whiteSpace:"nowrap"})),WM=ke("div",{name:"MuiImageListItemBar",slot:"ActionIcon",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.actionIcon,e[`actionIconActionPos${Se(r.actionPosition)}`]]}})(({ownerState:t})=>Q({},t.actionPosition==="left"&&{order:-1})),UM=Y.exports.forwardRef(function(e,r){const n=kt({props:e,name:"MuiImageListItemBar"}),{actionIcon:i,actionPosition:a="right",className:s,subtitle:l,title:c,position:f="bottom"}=n,p=Le(n,TM),h=Q({},n,{position:f,actionPosition:a}),m=jM(h);return Fe(RM,Q({ownerState:h,className:We(m.root,s),ref:r},p,{children:[Fe(VM,{ownerState:h,className:m.titleWrap,children:[$(LM,{className:m.title,children:c}),l?$(NM,{className:m.subtitle,children:l}):null]}),i?$(WM,{ownerState:h,className:m.actionIcon,children:i}):null]}))});var HM=UM;function MM(t){return Wt("MuiLink",t)}const OM=Yt("MuiLink",["root","underlineNone","underlineHover","underlineAlways","button","focusVisible"]);var zM=OM;const YM=["className","color","component","onBlur","onFocus","TypographyClasses","underline","variant","sx"],Gq={primary:"primary.main",textPrimary:"text.primary",secondary:"secondary.main",textSecondary:"text.secondary",error:"error.main"},CM=t=>Gq[t]||t,FM=t=>{const{classes:e,component:r,focusVisible:n,underline:i}=t,a={root:["root",`underline${Se(i)}`,r==="button"&&"button",n&&"focusVisible"]};return zt(a,MM,e)},IM=ke(Oa,{name:"MuiLink",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.root,e[`underline${Se(r.underline)}`],r.component==="button"&&e.button]}})(({theme:t,ownerState:e})=>{const r=Bp(t,`palette.${CM(e.color)}`)||e.color;return Q({},e.underline==="none"&&{textDecoration:"none"},e.underline==="hover"&&{textDecoration:"none","&:hover":{textDecoration:"underline"}},e.underline==="always"&&{textDecoration:"underline",textDecorationColor:r!=="inherit"?hi(r,.4):void 0,"&:hover":{textDecorationColor:"inherit"}},e.component==="button"&&{position:"relative",WebkitTapHighlightColor:"transparent",backgroundColor:"transparent",outline:0,border:0,margin:0,borderRadius:0,padding:0,cursor:"pointer",userSelect:"none",verticalAlign:"middle",MozAppearance:"none",WebkitAppearance:"none","&::-moz-focus-inner":{borderStyle:"none"},[`&.${zM.focusVisible}`]:{outline:"auto"}})}),EM=Y.exports.forwardRef(function(e,r){const n=kt({props:e,name:"MuiLink"}),{className:i,color:a="primary",component:s="a",onBlur:l,onFocus:c,TypographyClasses:f,underline:p="always",variant:h="inherit",sx:m}=n,g=Le(n,YM),{isFocusVisibleRef:y,onBlur:k,onFocus:q,ref:P}=Kg(),[x,b]=Y.exports.useState(!1),j=gi(r,P),R=O=>{k(O),y.current===!1&&b(!1),l&&l(O)},V=O=>{q(O),y.current===!0&&b(!0),c&&c(O)},N=Q({},n,{color:a,component:s,focusVisible:x,underline:p,variant:h}),H=FM(N);return $(IM,Q({color:a,className:We(H.root,i),classes:f,component:s,onBlur:R,onFocus:V,ref:j,ownerState:N,variant:h,sx:[...Object.keys(Gq).includes(a)?[]:[{color:a}],...Array.isArray(m)?m:[m]]},g))});var RP=EM;const JM=["component","direction","spacing","divider","children"];function DM(t,e){const r=Y.exports.Children.toArray(t).filter(Boolean);return r.reduce((n,i,a)=>(n.push(i),a<r.length-1&&n.push(Y.exports.cloneElement(e,{key:`separator-${a}`})),n),[])}const GM=t=>({row:"Left","row-reverse":"Right",column:"Top","column-reverse":"Bottom"})[t],KM=({ownerState:t,theme:e})=>{let r=Q({display:"flex"},Pi({theme:e},tv({values:t.direction,breakpoints:e.breakpoints.values}),n=>({flexDirection:n})));if(t.spacing){const n=Xg(e),i=Object.keys(e.breakpoints.values).reduce((c,f)=>((t.spacing[f]!=null||t.direction[f]!=null)&&(c[f]=!0),c),{}),a=tv({values:t.direction,base:i}),s=tv({values:t.spacing,base:i});r=yi(r,Pi({theme:e},s,(c,f)=>({"& > :not(style) + :not(style)":{margin:0,[`margin${GM(f?a[f]:t.direction)}`]:ol(n,c)}})))}return r},BM=ke("div",{name:"MuiStack",slot:"Root",overridesResolver:(t,e)=>[e.root]})(KM),ZM=Y.exports.forwardRef(function(e,r){const n=kt({props:e,name:"MuiStack"}),i=t0(n),{component:a="div",direction:s="column",spacing:l=0,divider:c,children:f}=i,p=Le(i,JM);return $(BM,Q({as:a,ownerState:{direction:s,spacing:l},ref:r},p,{children:c?DM(f,c):f}))});var XM=ZM;function Sr(t){for(var e=arguments.length,r=Array(e>1?e-1:0),n=1;n<e;n++)r[n-1]=arguments[n];throw Error("[Immer] minified error nr: "+t+(r.length?" "+r.map(function(i){return"'"+i+"'"}).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function Qi(t){return!!t&&!!t[pt]}function wi(t){return!!t&&(function(e){if(!e||typeof e!="object")return!1;var r=Object.getPrototypeOf(e);if(r===null)return!0;var n=Object.hasOwnProperty.call(r,"constructor")&&r.constructor;return n===Object||typeof n=="function"&&Function.toString.call(n)===iO}(t)||Array.isArray(t)||!!t[bu]||!!t.constructor[bu]||gh(t)||Ah(t))}function Da(t,e,r){r===void 0&&(r=!1),Ga(t)===0?(r?Object.keys:Jo)(t).forEach(function(n){r&&typeof n=="symbol"||e(n,t[n],t)}):t.forEach(function(n,i){return e(i,n,t)})}function Ga(t){var e=t[pt];return e?e.i>3?e.i-4:e.i:Array.isArray(t)?1:gh(t)?2:Ah(t)?3:0}function za(t,e){return Ga(t)===2?t.has(e):Object.prototype.hasOwnProperty.call(t,e)}function jd(t,e){return Ga(t)===2?t.get(e):t[e]}function Kq(t,e,r){var n=Ga(t);n===2?t.set(e,r):n===3?(t.delete(e),t.add(r)):t[e]=r}function Bq(t,e){return t===e?t!==0||1/t==1/e:t!=t&&e!=e}function gh(t){return rO&&t instanceof Map}function Ah(t){return nO&&t instanceof Set}function Ps(t){return t.o||t.t}function _0(t){if(Array.isArray(t))return Array.prototype.slice.call(t);var e=Xq(t);delete e[pt];for(var r=Jo(e),n=0;n<r.length;n++){var i=r[n],a=e[i];a.writable===!1&&(a.writable=!0,a.configurable=!0),(a.get||a.set)&&(e[i]={configurable:!0,writable:!0,enumerable:a.enumerable,value:t[i]})}return Object.create(Object.getPrototypeOf(t),e)}function $0(t,e){return e===void 0&&(e=!1),e1(t)||Qi(t)||!wi(t)||(Ga(t)>1&&(t.set=t.add=t.clear=t.delete=QM),Object.freeze(t),e&&Da(t,function(r,n){return $0(n,!0)},!0)),t}function QM(){Sr(2)}function e1(t){return t==null||typeof t!="object"||Object.isFrozen(t)}function xi(t){var e=cg[t];return e||Sr(18,t),e}function Zq(t,e){cg[t]||(cg[t]=e)}function og(){return ec}function Vv(t,e){e&&(xi("Patches"),t.u=[],t.s=[],t.v=e)}function fp(t){lg(t),t.p.forEach(_M),t.p=null}function lg(t){t===ec&&(ec=t.l)}function VP(t){return ec={p:[],l:ec,h:t,m:!0,_:0}}function _M(t){var e=t[pt];e.i===0||e.i===1?e.j():e.O=!0}function Lv(t,e){e._=e.p.length;var r=e.p[0],n=t!==void 0&&t!==r;return e.h.g||xi("ES5").S(e,t,n),n?(r[pt].P&&(fp(e),Sr(4)),wi(t)&&(t=dp(e,t),e.l||pp(e,t)),e.u&&xi("Patches").M(r[pt].t,t,e.u,e.s)):t=dp(e,r,[]),fp(e),e.u&&e.v(e.u,e.s),t!==r1?t:void 0}function dp(t,e,r){if(e1(e))return e;var n=e[pt];if(!n)return Da(e,function(a,s){return LP(t,n,e,a,s,r)},!0),e;if(n.A!==t)return e;if(!n.P)return pp(t,n.t,!0),n.t;if(!n.I){n.I=!0,n.A._--;var i=n.i===4||n.i===5?n.o=_0(n.k):n.o;Da(n.i===3?new Set(i):i,function(a,s){return LP(t,n,i,a,s,r)}),pp(t,i,!1),r&&t.u&&xi("Patches").R(n,r,t.u,t.s)}return n.o}function LP(t,e,r,n,i,a){if(Qi(i)){var s=dp(t,i,a&&e&&e.i!==3&&!za(e.D,n)?a.concat(n):void 0);if(Kq(r,n,s),!Qi(s))return;t.m=!1}if(wi(i)&&!e1(i)){if(!t.h.F&&t._<1)return;dp(t,i),e&&e.A.l||pp(t,i)}}function pp(t,e,r){r===void 0&&(r=!1),t.h.F&&t.m&&$0(e,r)}function Nv(t,e){var r=t[pt];return(r?Ps(r):t)[e]}function NP(t,e){if(e in t)for(var r=Object.getPrototypeOf(t);r;){var n=Object.getOwnPropertyDescriptor(r,e);if(n)return n;r=Object.getPrototypeOf(r)}}function Ta(t){t.P||(t.P=!0,t.l&&Ta(t.l))}function Wv(t){t.o||(t.o=_0(t.t))}function ug(t,e,r){var n=gh(e)?xi("MapSet").N(e,r):Ah(e)?xi("MapSet").T(e,r):t.g?function(i,a){var s=Array.isArray(i),l={i:s?1:0,A:a?a.A:og(),P:!1,I:!1,D:{},l:a,t:i,k:null,o:null,j:null,C:!1},c=l,f=tc;s&&(c=[l],f=lu);var p=Proxy.revocable(c,f),h=p.revoke,m=p.proxy;return l.k=m,l.j=h,m}(e,r):xi("ES5").J(e,r);return(r?r.A:og()).p.push(n),n}function $M(t){return Qi(t)||Sr(22,t),function e(r){if(!wi(r))return r;var n,i=r[pt],a=Ga(r);if(i){if(!i.P&&(i.i<4||!xi("ES5").K(i)))return i.t;i.I=!0,n=WP(r,a),i.I=!1}else n=WP(r,a);return Da(n,function(s,l){i&&jd(i.t,s)===l||Kq(n,s,e(l))}),a===3?new Set(n):n}(t)}function WP(t,e){switch(e){case 2:return new Map(t);case 3:return Array.from(t)}return _0(t)}function eO(){function t(a,s){var l=i[a];return l?l.enumerable=s:i[a]=l={configurable:!0,enumerable:s,get:function(){var c=this[pt];return tc.get(c,a)},set:function(c){var f=this[pt];tc.set(f,a,c)}},l}function e(a){for(var s=a.length-1;s>=0;s--){var l=a[s][pt];if(!l.P)switch(l.i){case 5:n(l)&&Ta(l);break;case 4:r(l)&&Ta(l)}}}function r(a){for(var s=a.t,l=a.k,c=Jo(l),f=c.length-1;f>=0;f--){var p=c[f];if(p!==pt){var h=s[p];if(h===void 0&&!za(s,p))return!0;var m=l[p],g=m&&m[pt];if(g?g.t!==h:!Bq(m,h))return!0}}var y=!!s[pt];return c.length!==Jo(s).length+(y?0:1)}function n(a){var s=a.k;if(s.length!==a.t.length)return!0;var l=Object.getOwnPropertyDescriptor(s,s.length-1);if(l&&!l.get)return!0;for(var c=0;c<s.length;c++)if(!s.hasOwnProperty(c))return!0;return!1}var i={};Zq("ES5",{J:function(a,s){var l=Array.isArray(a),c=function(p,h){if(p){for(var m=Array(h.length),g=0;g<h.length;g++)Object.defineProperty(m,""+g,t(g,!0));return m}var y=Xq(h);delete y[pt];for(var k=Jo(y),q=0;q<k.length;q++){var P=k[q];y[P]=t(P,p||!!y[P].enumerable)}return Object.create(Object.getPrototypeOf(h),y)}(l,a),f={i:l?5:4,A:s?s.A:og(),P:!1,I:!1,D:{},l:s,t:a,k:c,o:null,O:!1,C:!1};return Object.defineProperty(c,pt,{value:f,writable:!0}),c},S:function(a,s,l){l?Qi(s)&&s[pt].A===a&&e(a.p):(a.u&&function c(f){if(f&&typeof f=="object"){var p=f[pt];if(p){var h=p.t,m=p.k,g=p.D,y=p.i;if(y===4)Da(m,function(b){b!==pt&&(h[b]!==void 0||za(h,b)?g[b]||c(m[b]):(g[b]=!0,Ta(p)))}),Da(h,function(b){m[b]!==void 0||za(m,b)||(g[b]=!1,Ta(p))});else if(y===5){if(n(p)&&(Ta(p),g.length=!0),m.length<h.length)for(var k=m.length;k<h.length;k++)g[k]=!1;else for(var q=h.length;q<m.length;q++)g[q]=!0;for(var P=Math.min(m.length,h.length),x=0;x<P;x++)m.hasOwnProperty(x)||(g[x]=!0),g[x]===void 0&&c(m[x])}}}}(a.p[0]),e(a.p))},K:function(a){return a.i===4?r(a):n(a)}})}function tO(){function t(n){if(!wi(n))return n;if(Array.isArray(n))return n.map(t);if(gh(n))return new Map(Array.from(n.entries()).map(function(s){return[s[0],t(s[1])]}));if(Ah(n))return new Set(Array.from(n).map(t));var i=Object.create(Object.getPrototypeOf(n));for(var a in n)i[a]=t(n[a]);return za(n,bu)&&(i[bu]=n[bu]),i}function e(n){return Qi(n)?t(n):n}var r="add";Zq("Patches",{$:function(n,i){return i.forEach(function(a){for(var s=a.path,l=a.op,c=n,f=0;f<s.length-1;f++){var p=Ga(c),h=""+s[f];p!==0&&p!==1||h!=="__proto__"&&h!=="constructor"||Sr(24),typeof c=="function"&&h==="prototype"&&Sr(24),typeof(c=jd(c,h))!="object"&&Sr(15,s.join("/"))}var m=Ga(c),g=t(a.value),y=s[s.length-1];switch(l){case"replace":switch(m){case 2:return c.set(y,g);case 3:Sr(16);default:return c[y]=g}case r:switch(m){case 1:return y==="-"?c.push(g):c.splice(y,0,g);case 2:return c.set(y,g);case 3:return c.add(g);default:return c[y]=g}case"remove":switch(m){case 1:return c.splice(y,1);case 2:return c.delete(y);case 3:return c.delete(a.value);default:return delete c[y]}default:Sr(17,l)}}),n},R:function(n,i,a,s){switch(n.i){case 0:case 4:case 2:return function(l,c,f,p){var h=l.t,m=l.o;Da(l.D,function(g,y){var k=jd(h,g),q=jd(m,g),P=y?za(h,g)?"replace":r:"remove";if(k!==q||P!=="replace"){var x=c.concat(g);f.push(P==="remove"?{op:P,path:x}:{op:P,path:x,value:q}),p.push(P===r?{op:"remove",path:x}:P==="remove"?{op:r,path:x,value:e(k)}:{op:"replace",path:x,value:e(k)})}})}(n,i,a,s);case 5:case 1:return function(l,c,f,p){var h=l.t,m=l.D,g=l.o;if(g.length<h.length){var y=[g,h];h=y[0],g=y[1];var k=[p,f];f=k[0],p=k[1]}for(var q=0;q<h.length;q++)if(m[q]&&g[q]!==h[q]){var P=c.concat([q]);f.push({op:"replace",path:P,value:e(g[q])}),p.push({op:"replace",path:P,value:e(h[q])})}for(var x=h.length;x<g.length;x++){var b=c.concat([x]);f.push({op:r,path:b,value:e(g[x])})}h.length<g.length&&p.push({op:"replace",path:c.concat(["length"]),value:h.length})}(n,i,a,s);case 3:return function(l,c,f,p){var h=l.t,m=l.o,g=0;h.forEach(function(y){if(!m.has(y)){var k=c.concat([g]);f.push({op:"remove",path:k,value:y}),p.unshift({op:r,path:k,value:y})}g++}),g=0,m.forEach(function(y){if(!h.has(y)){var k=c.concat([g]);f.push({op:r,path:k,value:y}),p.unshift({op:"remove",path:k,value:y})}g++})}(n,i,a,s)}},M:function(n,i,a,s){a.push({op:"replace",path:[],value:i===r1?void 0:i}),s.push({op:"replace",path:[],value:n})}})}var UP,ec,t1=typeof Symbol!="undefined"&&typeof Symbol("x")=="symbol",rO=typeof Map!="undefined",nO=typeof Set!="undefined",HP=typeof Proxy!="undefined"&&Proxy.revocable!==void 0&&typeof Reflect!="undefined",r1=t1?Symbol.for("immer-nothing"):((UP={})["immer-nothing"]=!0,UP),bu=t1?Symbol.for("immer-draftable"):"__$immer_draftable",pt=t1?Symbol.for("immer-state"):"__$immer_state",iO=""+Object.prototype.constructor,Jo=typeof Reflect!="undefined"&&Reflect.ownKeys?Reflect.ownKeys:Object.getOwnPropertySymbols!==void 0?function(t){return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))}:Object.getOwnPropertyNames,Xq=Object.getOwnPropertyDescriptors||function(t){var e={};return Jo(t).forEach(function(r){e[r]=Object.getOwnPropertyDescriptor(t,r)}),e},cg={},tc={get:function(t,e){if(e===pt)return t;var r=Ps(t);if(!za(r,e))return function(i,a,s){var l,c=NP(a,s);return c?"value"in c?c.value:(l=c.get)===null||l===void 0?void 0:l.call(i.k):void 0}(t,r,e);var n=r[e];return t.I||!wi(n)?n:n===Nv(t.t,e)?(Wv(t),t.o[e]=ug(t.A.h,n,t)):n},has:function(t,e){return e in Ps(t)},ownKeys:function(t){return Reflect.ownKeys(Ps(t))},set:function(t,e,r){var n=NP(Ps(t),e);if(n!=null&&n.set)return n.set.call(t.k,r),!0;if(!t.P){var i=Nv(Ps(t),e),a=i==null?void 0:i[pt];if(a&&a.t===r)return t.o[e]=r,t.D[e]=!1,!0;if(Bq(r,i)&&(r!==void 0||za(t.t,e)))return!0;Wv(t),Ta(t)}return t.o[e]===r&&typeof r!="number"&&(r!==void 0||e in t.o)||(t.o[e]=r,t.D[e]=!0,!0)},deleteProperty:function(t,e){return Nv(t.t,e)!==void 0||e in t.t?(t.D[e]=!1,Wv(t),Ta(t)):delete t.D[e],t.o&&delete t.o[e],!0},getOwnPropertyDescriptor:function(t,e){var r=Ps(t),n=Reflect.getOwnPropertyDescriptor(r,e);return n&&{writable:!0,configurable:t.i!==1||e!=="length",enumerable:n.enumerable,value:r[e]}},defineProperty:function(){Sr(11)},getPrototypeOf:function(t){return Object.getPrototypeOf(t.t)},setPrototypeOf:function(){Sr(12)}},lu={};Da(tc,function(t,e){lu[t]=function(){return arguments[0]=arguments[0][0],e.apply(this,arguments)}}),lu.deleteProperty=function(t,e){return lu.set.call(this,t,e,void 0)},lu.set=function(t,e,r){return tc.set.call(this,t[0],e,r,t[0])};var aO=function(){function t(r){var n=this;this.g=HP,this.F=!0,this.produce=function(i,a,s){if(typeof i=="function"&&typeof a!="function"){var l=a;a=i;var c=n;return function(k){var q=this;k===void 0&&(k=l);for(var P=arguments.length,x=Array(P>1?P-1:0),b=1;b<P;b++)x[b-1]=arguments[b];return c.produce(k,function(j){var R;return(R=a).call.apply(R,[q,j].concat(x))})}}var f;if(typeof a!="function"&&Sr(6),s!==void 0&&typeof s!="function"&&Sr(7),wi(i)){var p=VP(n),h=ug(n,i,void 0),m=!0;try{f=a(h),m=!1}finally{m?fp(p):lg(p)}return typeof Promise!="undefined"&&f instanceof Promise?f.then(function(k){return Vv(p,s),Lv(k,p)},function(k){throw fp(p),k}):(Vv(p,s),Lv(f,p))}if(!i||typeof i!="object"){if((f=a(i))===void 0&&(f=i),f===r1&&(f=void 0),n.F&&$0(f,!0),s){var g=[],y=[];xi("Patches").M(i,f,g,y),s(g,y)}return f}Sr(21,i)},this.produceWithPatches=function(i,a){if(typeof i=="function")return function(f){for(var p=arguments.length,h=Array(p>1?p-1:0),m=1;m<p;m++)h[m-1]=arguments[m];return n.produceWithPatches(f,function(g){return i.apply(void 0,[g].concat(h))})};var s,l,c=n.produce(i,a,function(f,p){s=f,l=p});return typeof Promise!="undefined"&&c instanceof Promise?c.then(function(f){return[f,s,l]}):[c,s,l]},typeof(r==null?void 0:r.useProxies)=="boolean"&&this.setUseProxies(r.useProxies),typeof(r==null?void 0:r.autoFreeze)=="boolean"&&this.setAutoFreeze(r.autoFreeze)}var e=t.prototype;return e.createDraft=function(r){wi(r)||Sr(8),Qi(r)&&(r=$M(r));var n=VP(this),i=ug(this,r,void 0);return i[pt].C=!0,lg(n),i},e.finishDraft=function(r,n){var i=r&&r[pt],a=i.A;return Vv(a,n),Lv(void 0,a)},e.setAutoFreeze=function(r){this.F=r},e.setUseProxies=function(r){r&&!HP&&Sr(20),this.g=r},e.applyPatches=function(r,n){var i;for(i=n.length-1;i>=0;i--){var a=n[i];if(a.path.length===0&&a.op==="replace"){r=a.value;break}}i>-1&&(n=n.slice(i+1));var s=xi("Patches").$;return Qi(r)?s(r,n):this.produce(r,function(l){return s(l,n)})},t}(),ln=new aO,sO=ln.produce,oO=ln.produceWithPatches.bind(ln);ln.setAutoFreeze.bind(ln);ln.setUseProxies.bind(ln);var lO=ln.applyPatches.bind(ln);ln.createDraft.bind(ln);ln.finishDraft.bind(ln);var Do=sO;function Bn(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function MP(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter(function(i){return Object.getOwnPropertyDescriptor(t,i).enumerable})),r.push.apply(r,n)}return r}function OP(t){for(var e=1;e<arguments.length;e++){var r=arguments[e]!=null?arguments[e]:{};e%2?MP(Object(r),!0).forEach(function(n){Bn(t,n,r[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):MP(Object(r)).forEach(function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(r,n))})}return t}function vr(t){return"Minified Redux error #"+t+"; visit https://redux.js.org/Errors?code="+t+" for the full message or use the non-minified dev environment for full errors. "}var zP=function(){return typeof Symbol=="function"&&Symbol.observable||"@@observable"}(),Uv=function(){return Math.random().toString(36).substring(7).split("").join(".")},hp={INIT:"@@redux/INIT"+Uv(),REPLACE:"@@redux/REPLACE"+Uv(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+Uv()}};function uO(t){if(typeof t!="object"||t===null)return!1;for(var e=t;Object.getPrototypeOf(e)!==null;)e=Object.getPrototypeOf(e);return Object.getPrototypeOf(t)===e}function Qq(t,e,r){var n;if(typeof e=="function"&&typeof r=="function"||typeof r=="function"&&typeof arguments[3]=="function")throw new Error(vr(0));if(typeof e=="function"&&typeof r=="undefined"&&(r=e,e=void 0),typeof r!="undefined"){if(typeof r!="function")throw new Error(vr(1));return r(Qq)(t,e)}if(typeof t!="function")throw new Error(vr(2));var i=t,a=e,s=[],l=s,c=!1;function f(){l===s&&(l=s.slice())}function p(){if(c)throw new Error(vr(3));return a}function h(k){if(typeof k!="function")throw new Error(vr(4));if(c)throw new Error(vr(5));var q=!0;return f(),l.push(k),function(){if(!!q){if(c)throw new Error(vr(6));q=!1,f();var x=l.indexOf(k);l.splice(x,1),s=null}}}function m(k){if(!uO(k))throw new Error(vr(7));if(typeof k.type=="undefined")throw new Error(vr(8));if(c)throw new Error(vr(9));try{c=!0,a=i(a,k)}finally{c=!1}for(var q=s=l,P=0;P<q.length;P++){var x=q[P];x()}return k}function g(k){if(typeof k!="function")throw new Error(vr(10));i=k,m({type:hp.REPLACE})}function y(){var k,q=h;return k={subscribe:function(x){if(typeof x!="object"||x===null)throw new Error(vr(11));function b(){x.next&&x.next(p())}b();var j=q(b);return{unsubscribe:j}}},k[zP]=function(){return this},k}return m({type:hp.INIT}),n={dispatch:m,subscribe:h,getState:p,replaceReducer:g},n[zP]=y,n}function cO(t){Object.keys(t).forEach(function(e){var r=t[e],n=r(void 0,{type:hp.INIT});if(typeof n=="undefined")throw new Error(vr(12));if(typeof r(void 0,{type:hp.PROBE_UNKNOWN_ACTION()})=="undefined")throw new Error(vr(13))})}function n1(t){for(var e=Object.keys(t),r={},n=0;n<e.length;n++){var i=e[n];typeof t[i]=="function"&&(r[i]=t[i])}var a=Object.keys(r),s;try{cO(r)}catch(l){s=l}return function(c,f){if(c===void 0&&(c={}),s)throw s;for(var p=!1,h={},m=0;m<a.length;m++){var g=a[m],y=r[g],k=c[g],q=y(k,f);if(typeof q=="undefined")throw f&&f.type,new Error(vr(14));h[g]=q,p=p||q!==k}return p=p||a.length!==Object.keys(c).length,p?h:c}}function rc(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return e.length===0?function(n){return n}:e.length===1?e[0]:e.reduce(function(n,i){return function(){return n(i.apply(void 0,arguments))}})}function fO(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return function(n){return function(){var i=n.apply(void 0,arguments),a=function(){throw new Error(vr(15))},s={getState:i.getState,dispatch:function(){return a.apply(void 0,arguments)}},l=e.map(function(c){return c(s)});return a=rc.apply(void 0,l)(i.dispatch),OP(OP({},i),{},{dispatch:a})}}}var mp="NOT_FOUND";function dO(t){var e;return{get:function(n){return e&&t(e.key,n)?e.value:mp},put:function(n,i){e={key:n,value:i}},getEntries:function(){return e?[e]:[]},clear:function(){e=void 0}}}function pO(t,e){var r=[];function n(l){var c=r.findIndex(function(p){return e(l,p.key)});if(c>-1){var f=r[c];return c>0&&(r.splice(c,1),r.unshift(f)),f.value}return mp}function i(l,c){n(l)===mp&&(r.unshift({key:l,value:c}),r.length>t&&r.pop())}function a(){return r}function s(){r=[]}return{get:n,put:i,getEntries:a,clear:s}}var hO=function(e,r){return e===r};function mO(t){return function(r,n){if(r===null||n===null||r.length!==n.length)return!1;for(var i=r.length,a=0;a<i;a++)if(!t(r[a],n[a]))return!1;return!0}}function fg(t,e){var r=typeof e=="object"?e:{equalityCheck:e},n=r.equalityCheck,i=n===void 0?hO:n,a=r.maxSize,s=a===void 0?1:a,l=r.resultEqualityCheck,c=mO(i),f=s===1?dO(c):pO(s,c);function p(){var h=f.get(arguments);if(h===mp){if(h=t.apply(null,arguments),l){var m=f.getEntries(),g=m.find(function(y){return l(y.value,h)});g&&(h=g.value)}f.put(arguments,h)}return h}return p.clearCache=function(){return f.clear()},p}function vO(t){var e=Array.isArray(t[0])?t[0]:t;if(!e.every(function(n){return typeof n=="function"})){var r=e.map(function(n){return typeof n=="function"?"function "+(n.name||"unnamed")+"()":typeof n}).join(", ");throw new Error("createSelector expects all input-selectors to be functions, but received the following types: ["+r+"]")}return e}function yO(t){for(var e=arguments.length,r=new Array(e>1?e-1:0),n=1;n<e;n++)r[n-1]=arguments[n];var i=function(){for(var s=arguments.length,l=new Array(s),c=0;c<s;c++)l[c]=arguments[c];var f=0,p,h={memoizeOptions:void 0},m=l.pop();if(typeof m=="object"&&(h=m,m=l.pop()),typeof m!="function")throw new Error("createSelector expects an output function after the inputs, but received: ["+typeof m+"]");var g=h,y=g.memoizeOptions,k=y===void 0?r:y,q=Array.isArray(k)?k:[k],P=vO(l),x=t.apply(void 0,[function(){return f++,m.apply(null,arguments)}].concat(q)),b=t(function(){for(var R=[],V=P.length,N=0;N<V;N++)R.push(P[N].apply(null,arguments));return p=x.apply(null,R),p});return Object.assign(b,{resultFunc:m,memoizedResultFunc:x,dependencies:P,lastResult:function(){return p},recomputations:function(){return f},resetRecomputations:function(){return f=0}}),b};return i}var Ts=yO(fg);function _q(t){var e=function(n){var i=n.dispatch,a=n.getState;return function(s){return function(l){return typeof l=="function"?l(i,a,t):s(l)}}};return e}var $q=_q();$q.withExtraArgument=_q;var YP=$q,gO=globalThis&&globalThis.__extends||function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(n[a]=i[a])},t(e,r)};return function(e,r){if(typeof r!="function"&&r!==null)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");t(e,r);function n(){this.constructor=e}e.prototype=r===null?Object.create(r):(n.prototype=r.prototype,new n)}}(),AO=globalThis&&globalThis.__generator||function(t,e){var r={label:0,sent:function(){if(a[0]&1)throw a[1];return a[1]},trys:[],ops:[]},n,i,a,s;return s={next:l(0),throw:l(1),return:l(2)},typeof Symbol=="function"&&(s[Symbol.iterator]=function(){return this}),s;function l(f){return function(p){return c([f,p])}}function c(f){if(n)throw new TypeError("Generator is already executing.");for(;r;)try{if(n=1,i&&(a=f[0]&2?i.return:f[0]?i.throw||((a=i.return)&&a.call(i),0):i.next)&&!(a=a.call(i,f[1])).done)return a;switch(i=0,a&&(f=[f[0]&2,a.value]),f[0]){case 0:case 1:a=f;break;case 4:return r.label++,{value:f[1],done:!1};case 5:r.label++,i=f[1],f=[0];continue;case 7:f=r.ops.pop(),r.trys.pop();continue;default:if(a=r.trys,!(a=a.length>0&&a[a.length-1])&&(f[0]===6||f[0]===2)){r=0;continue}if(f[0]===3&&(!a||f[1]>a[0]&&f[1]<a[3])){r.label=f[1];break}if(f[0]===6&&r.label<a[1]){r.label=a[1],a=f;break}if(a&&r.label<a[2]){r.label=a[2],r.ops.push(f);break}a[2]&&r.ops.pop(),r.trys.pop();continue}f=e.call(t,r)}catch(p){f=[6,p],i=0}finally{n=a=0}if(f[0]&5)throw f[1];return{value:f[0]?f[1]:void 0,done:!0}}},vp=globalThis&&globalThis.__spreadArray||function(t,e){for(var r=0,n=e.length,i=t.length;r<n;r++,i++)t[i]=e[r];return t},SO=Object.defineProperty,xO=Object.defineProperties,PO=Object.getOwnPropertyDescriptors,CP=Object.getOwnPropertySymbols,wO=Object.prototype.hasOwnProperty,kO=Object.prototype.propertyIsEnumerable,FP=function(t,e,r){return e in t?SO(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r},Ya=function(t,e){for(var r in e||(e={}))wO.call(e,r)&&FP(t,r,e[r]);if(CP)for(var n=0,i=CP(e);n<i.length;n++){var r=i[n];kO.call(e,r)&&FP(t,r,e[r])}return t},Hv=function(t,e){return xO(t,PO(e))},bO=function(t,e,r){return new Promise(function(n,i){var a=function(c){try{l(r.next(c))}catch(f){i(f)}},s=function(c){try{l(r.throw(c))}catch(f){i(f)}},l=function(c){return c.done?n(c.value):Promise.resolve(c.value).then(a,s)};l((r=r.apply(t,e)).next())})},qO=typeof window!="undefined"&&window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__:function(){if(arguments.length!==0)return typeof arguments[0]=="object"?rc:rc.apply(null,arguments)};function i1(t){if(typeof t!="object"||t===null)return!1;var e=Object.getPrototypeOf(t);if(e===null)return!0;for(var r=e;Object.getPrototypeOf(r)!==null;)r=Object.getPrototypeOf(r);return e===r}var TO=function(t){gO(e,t);function e(){for(var r=[],n=0;n<arguments.length;n++)r[n]=arguments[n];var i=t.apply(this,r)||this;return Object.setPrototypeOf(i,e.prototype),i}return Object.defineProperty(e,Symbol.species,{get:function(){return e},enumerable:!1,configurable:!0}),e.prototype.concat=function(){for(var r=[],n=0;n<arguments.length;n++)r[n]=arguments[n];return t.prototype.concat.apply(this,r)},e.prototype.prepend=function(){for(var r=[],n=0;n<arguments.length;n++)r[n]=arguments[n];return r.length===1&&Array.isArray(r[0])?new(e.bind.apply(e,vp([void 0],r[0].concat(this)))):new(e.bind.apply(e,vp([void 0],r.concat(this))))},e}(Array);function jO(t){return typeof t=="boolean"}function RO(){return function(e){return VO(e)}}function VO(t){t===void 0&&(t={});var e=t.thunk,r=e===void 0?!0:e;t.immutableCheck,t.serializableCheck;var n=new TO;return r&&(jO(r)?n.push(YP):n.push(YP.withExtraArgument(r.extraArgument))),n}var LO=!0;function NO(t){var e=RO(),r=t||{},n=r.reducer,i=n===void 0?void 0:n,a=r.middleware,s=a===void 0?e():a,l=r.devTools,c=l===void 0?!0:l,f=r.preloadedState,p=f===void 0?void 0:f,h=r.enhancers,m=h===void 0?void 0:h,g;if(typeof i=="function")g=i;else if(i1(i))g=n1(i);else throw new Error('"reducer" is a required argument, and must be a function or an object of functions that can be passed to combineReducers');var y=s;typeof y=="function"&&(y=y(e));var k=fO.apply(void 0,y),q=rc;c&&(q=qO(Ya({trace:!LO},typeof c=="object"&&c)));var P=[k];Array.isArray(m)?P=vp([k],m):typeof m=="function"&&(P=m(P));var x=q.apply(void 0,P);return Qq(g,p,x)}function Gr(t,e){function r(){for(var n=[],i=0;i<arguments.length;i++)n[i]=arguments[i];if(e){var a=e.apply(void 0,n);if(!a)throw new Error("prepareAction did not return an object");return Ya(Ya({type:t,payload:a.payload},"meta"in a&&{meta:a.meta}),"error"in a&&{error:a.error})}return{type:t,payload:n[0]}}return r.toString=function(){return""+t},r.type=t,r.match=function(n){return n.type===t},r}function e5(t){var e={},r=[],n,i={addCase:function(a,s){var l=typeof a=="string"?a:a.type;if(l in e)throw new Error("addCase cannot be called with two reducers for the same action type");return e[l]=s,i},addMatcher:function(a,s){return r.push({matcher:a,reducer:s}),i},addDefaultCase:function(a){return n=a,i}};return t(i),[e,r,n]}function WO(t){return typeof t=="function"}function UO(t,e,r,n){r===void 0&&(r=[]);var i=typeof e=="function"?e5(e):[e,r,n],a=i[0],s=i[1],l=i[2],c;if(WO(t))c=function(){return Do(t(),function(){})};else{var f=Do(t,function(){});c=function(){return f}}function p(h,m){h===void 0&&(h=c());var g=vp([a[m.type]],s.filter(function(y){var k=y.matcher;return k(m)}).map(function(y){var k=y.reducer;return k}));return g.filter(function(y){return!!y}).length===0&&(g=[l]),g.reduce(function(y,k){if(k)if(Qi(y)){var q=y,P=k(q,m);return typeof P=="undefined"?y:P}else{if(wi(y))return Do(y,function(x){return k(x,m)});var P=k(y,m);if(typeof P=="undefined"){if(y===null)return y;throw Error("A case reducer on a non-draftable value must not return undefined")}return P}return y},h)}return p.getInitialState=c,p}function HO(t,e){return t+"/"+e}function Ci(t){var e=t.name;if(!e)throw new Error("`name` is a required option for createSlice");var r=typeof t.initialState=="function"?t.initialState:Do(t.initialState,function(){}),n=t.reducers||{},i=Object.keys(n),a={},s={},l={};i.forEach(function(p){var h=n[p],m=HO(e,p),g,y;"reducer"in h?(g=h.reducer,y=h.prepare):g=h,a[p]=g,s[m]=g,l[p]=y?Gr(m,y):Gr(m)});function c(){var p=typeof t.extraReducers=="function"?e5(t.extraReducers):[t.extraReducers],h=p[0],m=h===void 0?{}:h,g=p[1],y=g===void 0?[]:g,k=p[2],q=k===void 0?void 0:k,P=Ya(Ya({},m),s);return UO(r,P,y,q)}var f;return{name:e,reducer:function(p,h){return f||(f=c()),f(p,h)},actions:l,caseReducers:a,getInitialState:function(){return f||(f=c()),f.getInitialState()}}}var MO="ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW",t5=function(t){t===void 0&&(t=21);for(var e="",r=t;r--;)e+=MO[Math.random()*64|0];return e},OO=["name","message","stack","code"],Mv=function(){function t(e,r){this.payload=e,this.meta=r}return t}(),IP=function(){function t(e,r){this.payload=e,this.meta=r}return t}(),zO=function(t){if(typeof t=="object"&&t!==null){for(var e={},r=0,n=OO;r<n.length;r++){var i=n[r];typeof t[i]=="string"&&(e[i]=t[i])}return e}return{message:String(t)}};function EP(t,e,r){var n=Gr(t+"/fulfilled",function(c,f,p,h){return{payload:c,meta:Hv(Ya({},h||{}),{arg:p,requestId:f,requestStatus:"fulfilled"})}}),i=Gr(t+"/pending",function(c,f,p){return{payload:void 0,meta:Hv(Ya({},p||{}),{arg:f,requestId:c,requestStatus:"pending"})}}),a=Gr(t+"/rejected",function(c,f,p,h,m){return{payload:h,error:(r&&r.serializeError||zO)(c||"Rejected"),meta:Hv(Ya({},m||{}),{arg:p,requestId:f,rejectedWithValue:!!h,requestStatus:"rejected",aborted:(c==null?void 0:c.name)==="AbortError",condition:(c==null?void 0:c.name)==="ConditionError"})}}),s=typeof AbortController!="undefined"?AbortController:function(){function c(){this.signal={aborted:!1,addEventListener:function(){},dispatchEvent:function(){return!1},onabort:function(){},removeEventListener:function(){}}}return c.prototype.abort=function(){},c}();function l(c){return function(f,p,h){var m=r!=null&&r.idGenerator?r.idGenerator(c):t5(),g=new s,y,k=new Promise(function(b,j){return g.signal.addEventListener("abort",function(){return j({name:"AbortError",message:y||"Aborted"})})}),q=!1;function P(b){q&&(y=b,g.abort())}var x=function(){return bO(this,null,function(){var b,j,R,V,N,H;return AO(this,function(O){switch(O.label){case 0:return O.trys.push([0,4,,5]),V=(b=r==null?void 0:r.condition)==null?void 0:b.call(r,c,{getState:p,extra:h}),CO(V)?[4,V]:[3,2];case 1:V=O.sent(),O.label=2;case 2:if(V===!1)throw{name:"ConditionError",message:"Aborted due to condition callback returning false."};return q=!0,f(i(m,c,(j=r==null?void 0:r.getPendingMeta)==null?void 0:j.call(r,{requestId:m,arg:c},{getState:p,extra:h}))),[4,Promise.race([k,Promise.resolve(e(c,{dispatch:f,getState:p,extra:h,requestId:m,signal:g.signal,rejectWithValue:function(M,F){return new Mv(M,F)},fulfillWithValue:function(M,F){return new IP(M,F)}})).then(function(M){if(M instanceof Mv)throw M;return M instanceof IP?n(M.payload,m,c,M.meta):n(M,m,c)})])];case 3:return R=O.sent(),[3,5];case 4:return N=O.sent(),R=N instanceof Mv?a(null,m,c,N.payload,N.meta):a(N,m,c),[3,5];case 5:return H=r&&!r.dispatchConditionRejection&&a.match(R)&&R.meta.condition,H||f(R),[2,R]}})})}();return Object.assign(x,{abort:P,requestId:m,arg:c,unwrap:function(){return x.then(YO)}})}}return Object.assign(l,{pending:i,rejected:a,fulfilled:n,typePrefix:t})}function YO(t){if(t.meta&&t.meta.rejectedWithValue)throw t.payload;if(t.error)throw t.error;return t.payload}function CO(t){return t!==null&&typeof t=="object"&&typeof t.then=="function"}var FO=function(t){return t&&typeof t.match=="function"},r5=function(t,e){return FO(t)?t.match(e):t(e)};function fl(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return function(r){return t.some(function(n){return r5(n,r)})}}function qu(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return function(r){return t.every(function(n){return r5(n,r)})}}function Sh(t,e){if(!t||!t.meta)return!1;var r=typeof t.meta.requestId=="string",n=e.indexOf(t.meta.requestStatus)>-1;return r&&n}function kc(t){return typeof t[0]=="function"&&"pending"in t[0]&&"fulfilled"in t[0]&&"rejected"in t[0]}function a1(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return t.length===0?function(r){return Sh(r,["pending"])}:kc(t)?function(r){var n=t.map(function(a){return a.pending}),i=fl.apply(void 0,n);return i(r)}:a1()(t[0])}function nc(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return t.length===0?function(r){return Sh(r,["rejected"])}:kc(t)?function(r){var n=t.map(function(a){return a.rejected}),i=fl.apply(void 0,n);return i(r)}:nc()(t[0])}function xh(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var r=function(n){return n&&n.meta&&n.meta.rejectedWithValue};return t.length===0?function(n){var i=qu(nc.apply(void 0,t),r);return i(n)}:kc(t)?function(n){var i=qu(nc.apply(void 0,t),r);return i(n)}:xh()(t[0])}function Is(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return t.length===0?function(r){return Sh(r,["fulfilled"])}:kc(t)?function(r){var n=t.map(function(a){return a.fulfilled}),i=fl.apply(void 0,n);return i(r)}:Is()(t[0])}function dg(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return t.length===0?function(r){return Sh(r,["pending","fulfilled","rejected"])}:kc(t)?function(r){for(var n=[],i=0,a=t;i<a.length;i++){var s=a[i];n.push(s.pending,s.rejected,s.fulfilled)}var l=fl.apply(void 0,n);return l(r)}:dg()(t[0])}var s1="listenerMiddleware";Gr(s1+"/add");Gr(s1+"/removeAll");Gr(s1+"/remove");eO();function Ca(t){return Ca=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ca(t)}function Zn(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function JP(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function Xn(t,e,r){return e&&JP(t.prototype,e),r&&JP(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}function DP(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter(function(i){return Object.getOwnPropertyDescriptor(t,i).enumerable})),r.push.apply(r,n)}return r}function GP(t){for(var e=1;e<arguments.length;e++){var r=arguments[e]!=null?arguments[e]:{};e%2?DP(Object(r),!0).forEach(function(n){Bn(t,n,r[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):DP(Object(r)).forEach(function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(r,n))})}return t}var pg={bindI18n:"languageChanged",bindI18nStore:"",transEmptyNodeValue:"",transSupportBasicHtmlNodes:!0,transWrapTextNodes:"",transKeepBasicHtmlNodesFor:["br","strong","i","p"],useSuspense:!0},n5,i5=St.createContext();function IO(){var t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};pg=GP(GP({},pg),t)}function EO(){return pg}var JO=function(){function t(){Zn(this,t),this.usedNamespaces={}}return Xn(t,[{key:"addUsedNamespaces",value:function(r){var n=this;r.forEach(function(i){n.usedNamespaces[i]||(n.usedNamespaces[i]=!0)})}},{key:"getUsedNamespaces",value:function(){return Object.keys(this.usedNamespaces)}}]),t}();function DO(t){n5=t}function GO(){return n5}var KO={type:"3rdParty",init:function(e){IO(e.options.react),DO(e)}};function BO(){if(console&&console.warn){for(var t,e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];typeof r[0]=="string"&&(r[0]="react-i18next:: ".concat(r[0])),(t=console).warn.apply(t,r)}}var KP={};function hg(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];typeof e[0]=="string"&&KP[e[0]]||(typeof e[0]=="string"&&(KP[e[0]]=new Date),BO.apply(void 0,e))}function BP(t,e,r){t.loadNamespaces(e,function(){if(t.isInitialized)r();else{var n=function i(){setTimeout(function(){t.off("initialized",i)},0),r()};t.on("initialized",n)}})}function ZO(t,e){var r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},n=e.languages[0],i=e.options?e.options.fallbackLng:!1,a=e.languages[e.languages.length-1];if(n.toLowerCase()==="cimode")return!0;var s=function(c,f){var p=e.services.backendConnector.state["".concat(c,"|").concat(f)];return p===-1||p===2};return r.bindI18n&&r.bindI18n.indexOf("languageChanging")>-1&&e.services.backendConnector.backend&&e.isLanguageChangingTo&&!s(e.isLanguageChangingTo,t)?!1:!!(e.hasResourceBundle(n,t)||!e.services.backendConnector.backend||e.options.resources&&!e.options.partialBundledLanguages||s(n,t)&&(!i||s(a,t)))}function XO(t,e){var r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};if(!e.languages||!e.languages.length)return hg("i18n.languages were undefined or empty",e.languages),!0;var n=e.options.ignoreJSONStructure!==void 0;return n?e.hasLoadedNamespace(t,{precheck:function(a,s){if(r.bindI18n&&r.bindI18n.indexOf("languageChanging")>-1&&a.services.backendConnector.backend&&a.isLanguageChangingTo&&!s(a.isLanguageChangingTo,t))return!1}}):ZO(t,e,r)}function a5(t){if(Array.isArray(t))return t}function QO(t,e){var r=t==null?null:typeof Symbol!="undefined"&&t[Symbol.iterator]||t["@@iterator"];if(r!=null){var n=[],i=!0,a=!1,s,l;try{for(r=r.call(t);!(i=(s=r.next()).done)&&(n.push(s.value),!(e&&n.length===e));i=!0);}catch(c){a=!0,l=c}finally{try{!i&&r.return!=null&&r.return()}finally{if(a)throw l}}return n}}function ZP(t,e){(e==null||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function s5(t,e){if(!!t){if(typeof t=="string")return ZP(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);if(r==="Object"&&t.constructor&&(r=t.constructor.name),r==="Map"||r==="Set")return Array.from(t);if(r==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return ZP(t,e)}}function o5(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function _O(t,e){return a5(t)||QO(t,e)||s5(t,e)||o5()}function XP(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter(function(i){return Object.getOwnPropertyDescriptor(t,i).enumerable})),r.push.apply(r,n)}return r}function Ov(t){for(var e=1;e<arguments.length;e++){var r=arguments[e]!=null?arguments[e]:{};e%2?XP(Object(r),!0).forEach(function(n){Bn(t,n,r[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):XP(Object(r)).forEach(function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(r,n))})}return t}function $O(t){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},r=e.i18n,n=Y.exports.useContext(i5)||{},i=n.i18n,a=n.defaultNS,s=r||i||GO();if(s&&!s.reportNamespaces&&(s.reportNamespaces=new JO),!s){hg("You will need to pass in an i18next instance by using initReactI18next");var l=function(N){return Array.isArray(N)?N[N.length-1]:N},c=[l,{},!1];return c.t=l,c.i18n={},c.ready=!1,c}s.options.react&&s.options.react.wait!==void 0&&hg("It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.");var f=Ov(Ov(Ov({},EO()),s.options.react),e),p=f.useSuspense,h=f.keyPrefix,m=t||a||s.options&&s.options.defaultNS;m=typeof m=="string"?[m]:m||["translation"],s.reportNamespaces.addUsedNamespaces&&s.reportNamespaces.addUsedNamespaces(m);var g=(s.isInitialized||s.initializedStoreOnce)&&m.every(function(V){return XO(V,s,f)});function y(){return s.getFixedT(null,f.nsMode==="fallback"?m:m[0],h)}var k=Y.exports.useState(y),q=_O(k,2),P=q[0],x=q[1],b=Y.exports.useRef(!0);Y.exports.useEffect(function(){var V=f.bindI18n,N=f.bindI18nStore;b.current=!0,!g&&!p&&BP(s,m,function(){b.current&&x(y)});function H(){b.current&&x(y)}return V&&s&&s.on(V,H),N&&s&&s.store.on(N,H),function(){b.current=!1,V&&s&&V.split(" ").forEach(function(O){return s.off(O,H)}),N&&s&&N.split(" ").forEach(function(O){return s.store.off(O,H)})}},[s,m.join()]);var j=Y.exports.useRef(!0);Y.exports.useEffect(function(){b.current&&!j.current&&x(y),j.current=!1},[s]);var R=[P,s,g];if(R.t=P,R.i18n=s,R.ready=g,g||!g&&!p)return R;throw new Promise(function(V){BP(s,m,function(){V()})})}function ez(t){var e=t.i18n,r=t.defaultNS,n=t.children,i=Y.exports.useMemo(function(){return{i18n:e,defaultNS:r}},[e,r]);return Y.exports.createElement(i5.Provider,{value:i},n)}var Ka=St.createContext(null);function tz(t){t()}var l5=tz,rz=function(e){return l5=e},nz=function(){return l5};function iz(){var t=nz(),e=null,r=null;return{clear:function(){e=null,r=null},notify:function(){t(function(){for(var i=e;i;)i.callback(),i=i.next})},get:function(){for(var i=[],a=e;a;)i.push(a),a=a.next;return i},subscribe:function(i){var a=!0,s=r={callback:i,next:null,prev:r};return s.prev?s.prev.next=s:e=s,function(){!a||e===null||(a=!1,s.next?s.next.prev=s.prev:r=s.prev,s.prev?s.prev.next=s.next:e=s.next)}}}}var QP={notify:function(){},get:function(){return[]}};function u5(t,e){var r,n=QP;function i(h){return c(),n.subscribe(h)}function a(){n.notify()}function s(){p.onStateChange&&p.onStateChange()}function l(){return Boolean(r)}function c(){r||(r=e?e.addNestedSub(s):t.subscribe(s),n=iz())}function f(){r&&(r(),r=void 0,n.clear(),n=QP)}var p={addNestedSub:i,notifyNestedSubs:a,handleChangeWrapper:s,isSubscribed:l,trySubscribe:c,tryUnsubscribe:f,getListeners:function(){return n}};return p}var mg=typeof window!="undefined"&&typeof window.document!="undefined"&&typeof window.document.createElement!="undefined"?Y.exports.useLayoutEffect:Y.exports.useEffect;function az(t){var e=t.store,r=t.context,n=t.children,i=Y.exports.useMemo(function(){var l=u5(e);return{store:e,subscription:l}},[e]),a=Y.exports.useMemo(function(){return e.getState()},[e]);mg(function(){var l=i.subscription;return l.onStateChange=l.notifyNestedSubs,l.trySubscribe(),a!==e.getState()&&l.notifyNestedSubs(),function(){l.tryUnsubscribe(),l.onStateChange=null}},[i,a]);var s=r||Ka;return $(s.Provider,{value:i,children:n})}function _P(t,e){return t===e?t!==0||e!==0||1/t===1/e:t!==t&&e!==e}function yp(t,e){if(_P(t,e))return!0;if(typeof t!="object"||t===null||typeof e!="object"||e===null)return!1;var r=Object.keys(t),n=Object.keys(e);if(r.length!==n.length)return!1;for(var i=0;i<r.length;i++)if(!Object.prototype.hasOwnProperty.call(e,r[i])||!_P(t[r[i]],e[r[i]]))return!1;return!0}function c5(){var t=Y.exports.useContext(Ka);return t}function f5(t){t===void 0&&(t=Ka);var e=t===Ka?c5:function(){return Y.exports.useContext(t)};return function(){var n=e(),i=n.store;return i}}var d5=f5();function sz(t){t===void 0&&(t=Ka);var e=t===Ka?d5:f5(t);return function(){var n=e();return n.dispatch}}var Ph=sz(),oz=function(e,r){return e===r};function lz(t,e,r,n){var i=Y.exports.useReducer(function(y){return y+1},0),a=i[1],s=Y.exports.useMemo(function(){return u5(r,n)},[r,n]),l=Y.exports.useRef(),c=Y.exports.useRef(),f=Y.exports.useRef(),p=Y.exports.useRef(),h=r.getState(),m;try{if(t!==c.current||h!==f.current||l.current){var g=t(h);p.current===void 0||!e(g,p.current)?m=g:m=p.current}else m=p.current}catch(y){throw l.current&&(y.message+=`
The error may be correlated with this previous error:
`+l.current.stack+`

`),y}return mg(function(){c.current=t,f.current=h,p.current=m,l.current=void 0}),mg(function(){function y(){try{var k=r.getState();if(k===f.current)return;var q=c.current(k);if(e(q,p.current))return;p.current=q,f.current=k}catch(P){l.current=P}a()}return s.onStateChange=y,s.trySubscribe(),y(),function(){return s.tryUnsubscribe()}},[r,s]),m}function uz(t){t===void 0&&(t=Ka);var e=t===Ka?c5:function(){return Y.exports.useContext(t)};return function(n,i){i===void 0&&(i=oz);var a=e(),s=a.store,l=a.subscription,c=lz(n,i,s,l);return Y.exports.useDebugValue(c),c}}var p5=uz();rz(ll.exports.unstable_batchedUpdates);var Go=(t=>(t[t.Init=0]="Init",t[t.NewThrow=1]="NewThrow",t[t.ConfirmNewThrow=2]="ConfirmNewThrow",t))(Go||{});const{reducer:cz,actions:gp}=Ci({name:"collectionNavigationpState",initialState:0,reducers:{nextState:t=>{const e=t+1;return Object.values(Go).includes(e)?e:t},previousState:t=>{const e=t-1;return Object.values(Go).includes(e)?e:t},resetState:t=>0}});var Ap=(t=>(t[t.Init=0]="Init",t))(Ap||{});const{reducer:fz,actions:$P}=Ci({name:"labellingNavigationState",initialState:0,reducers:{nextState:t=>{const e=t+1;return Object.values(Ap).includes(e)?e:t},previousState:t=>{const e=t-1;return Object.values(Ap).includes(e)?e:t},resetState:t=>0}}),{reducer:dz,actions:ew}=Ci({name:"labellingNavigationState",initialState:"init",reducers:{setState:(t,e)=>t!==e.payload?e.payload:t}}),vg=Ci({name:"newThrow",initialState:Array(),reducers:{addThrow:(t,e)=>{if(t.length===3)return console.error("Error, trying to append throw when state already has three throws:",t),t;const r=[...t,e.payload];return console.log("Next State",r),r},resetState:t=>[]}});var h5=globalThis&&globalThis.__generator||function(t,e){var r={label:0,sent:function(){if(a[0]&1)throw a[1];return a[1]},trys:[],ops:[]},n,i,a,s;return s={next:l(0),throw:l(1),return:l(2)},typeof Symbol=="function"&&(s[Symbol.iterator]=function(){return this}),s;function l(f){return function(p){return c([f,p])}}function c(f){if(n)throw new TypeError("Generator is already executing.");for(;r;)try{if(n=1,i&&(a=f[0]&2?i.return:f[0]?i.throw||((a=i.return)&&a.call(i),0):i.next)&&!(a=a.call(i,f[1])).done)return a;switch(i=0,a&&(f=[f[0]&2,a.value]),f[0]){case 0:case 1:a=f;break;case 4:return r.label++,{value:f[1],done:!1};case 5:r.label++,i=f[1],f=[0];continue;case 7:f=r.ops.pop(),r.trys.pop();continue;default:if(a=r.trys,!(a=a.length>0&&a[a.length-1])&&(f[0]===6||f[0]===2)){r=0;continue}if(f[0]===3&&(!a||f[1]>a[0]&&f[1]<a[3])){r.label=f[1];break}if(f[0]===6&&r.label<a[1]){r.label=a[1],a=f;break}if(a&&r.label<a[2]){r.label=a[2],r.ops.push(f);break}a[2]&&r.ops.pop(),r.trys.pop();continue}f=e.call(t,r)}catch(p){f=[6,p],i=0}finally{n=a=0}if(f[0]&5)throw f[1];return{value:f[0]?f[1]:void 0,done:!0}}},Sp=globalThis&&globalThis.__spreadArray||function(t,e){for(var r=0,n=e.length,i=t.length;r<n;r++,i++)t[i]=e[r];return t},pz=Object.defineProperty,hz=Object.defineProperties,mz=Object.getOwnPropertyDescriptors,tw=Object.getOwnPropertySymbols,vz=Object.prototype.hasOwnProperty,yz=Object.prototype.propertyIsEnumerable,rw=function(t,e,r){return e in t?pz(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r},yr=function(t,e){for(var r in e||(e={}))vz.call(e,r)&&rw(t,r,e[r]);if(tw)for(var n=0,i=tw(e);n<i.length;n++){var r=i[n];yz.call(e,r)&&rw(t,r,e[r])}return t},Ls=function(t,e){return hz(t,mz(e))},m5=function(t,e,r){return new Promise(function(n,i){var a=function(c){try{l(r.next(c))}catch(f){i(f)}},s=function(c){try{l(r.throw(c))}catch(f){i(f)}},l=function(c){return c.done?n(c.value):Promise.resolve(c.value).then(a,s)};l((r=r.apply(t,e)).next())})},ht;(function(t){t.uninitialized="uninitialized",t.pending="pending",t.fulfilled="fulfilled",t.rejected="rejected"})(ht||(ht={}));function gz(t){return{status:t,isUninitialized:t===ht.uninitialized,isLoading:t===ht.pending,isSuccess:t===ht.fulfilled,isError:t===ht.rejected}}var nw=function(t){return[].concat.apply([],t)};function Az(){return typeof navigator=="undefined"||navigator.onLine===void 0?!0:navigator.onLine}function Sz(){return typeof document=="undefined"?!0:document.visibilityState!=="hidden"}var iw=i1;function v5(t,e){if(t===e||!(iw(t)&&iw(e)||Array.isArray(t)&&Array.isArray(e)))return e;for(var r=Object.keys(e),n=Object.keys(t),i=r.length===n.length,a=Array.isArray(e)?[]:{},s=0,l=r;s<l.length;s++){var c=l[s];a[c]=v5(t[c],e[c]),i&&(i=t[c]===a[c])}return i?t:a}var aw=function(){function t(e,r){r===void 0&&(r=void 0),this.value=e,this.meta=r}return t}(),o1=Gr("__rtkq/focused"),y5=Gr("__rtkq/unfocused"),l1=Gr("__rtkq/online"),g5=Gr("__rtkq/offline"),Dn;(function(t){t.query="query",t.mutation="mutation"})(Dn||(Dn={}));function xz(t){return t.type===Dn.query}function Pz(t){return t.type===Dn.mutation}function A5(t,e,r,n,i,a){return wz(t)?t(e,r,n,i).map(yg).map(a):Array.isArray(t)?t.map(yg).map(a):[]}function wz(t){return typeof t=="function"}function yg(t){return typeof t=="string"?{type:t}:t}function kz(t){return t}function bz(t){var e=this,r=t.reducerPath,n=t.baseQuery,i=t.context.endpointDefinitions,a=t.serializeQueryArgs,s=t.api,l=function(x,b,j){return function(R){var V=i[x];R(s.internalActions.queryResultPatched({queryCacheKey:a({queryArgs:b,endpointDefinition:V,endpointName:x}),patches:j}))}},c=function(x,b,j){return function(R,V){var N,H,O=s.endpoints[x].select(b)(V()),M={patches:[],inversePatches:[],undo:function(){return R(s.util.patchQueryData(x,b,M.inversePatches))}};if(O.status===ht.uninitialized)return M;if("data"in O)if(wi(O.data)){var F=oO(O.data,j),J=F[1],X=F[2];(N=M.patches).push.apply(N,J),(H=M.inversePatches).push.apply(H,X)}else{var re=j(O.data);M.patches.push({op:"replace",path:[],value:re}),M.inversePatches.push({op:"replace",path:[],value:O.data})}return R(s.util.patchQueryData(x,b,M.patches)),M}},f=function(x,b){return m5(e,[x,b],function(j,R){var V,N,H,O,M,F,J,X,re,ae,te,ie=R.signal,K=R.rejectWithValue,oe=R.fulfillWithValue,ne=R.dispatch,ue=R.getState,pe=R.extra;return h5(this,function(Pe){switch(Pe.label){case 0:V=i[j.endpointName],Pe.label=1;case 1:return Pe.trys.push([1,7,,8]),N=kz,H=void 0,O={signal:ie,dispatch:ne,getState:ue,extra:pe,endpoint:j.endpointName,type:j.type,forced:j.type==="query"?p(j,ue()):void 0},V.query?[4,n(V.query(j.originalArgs),O,V.extraOptions)]:[3,3];case 2:return H=Pe.sent(),V.transformResponse&&(N=V.transformResponse),[3,5];case 3:return[4,V.queryFn(j.originalArgs,O,V.extraOptions,function(be){return n(be,O,V.extraOptions)})];case 4:H=Pe.sent(),Pe.label=5;case 5:if(H.error)throw new aw(H.error,H.meta);return ae=oe,[4,N(H.data,H.meta,j.originalArgs)];case 6:return[2,ae.apply(void 0,[Pe.sent(),{fulfilledTimeStamp:Date.now(),baseQueryMeta:H.meta}])];case 7:if(te=Pe.sent(),te instanceof aw)return[2,K(te.value,{baseQueryMeta:te.meta})];throw console.error(te),te;case 8:return[2]}})})};function p(x,b){var j,R,V,N,H=(R=(j=b[r])==null?void 0:j.queries)==null?void 0:R[x.queryCacheKey],O=(V=b[r])==null?void 0:V.config.refetchOnMountOrArgChange,M=H==null?void 0:H.fulfilledTimeStamp,F=(N=x.forceRefetch)!=null?N:x.subscribe&&O;return F?F===!0||(Number(new Date)-Number(M))/1e3>=F:!1}var h=EP(r+"/executeQuery",f,{getPendingMeta:function(){return{startedTimeStamp:Date.now()}},condition:function(x,b){var j=b.getState,R,V,N=j(),H=(V=(R=N[r])==null?void 0:R.queries)==null?void 0:V[x.queryCacheKey],O=H==null?void 0:H.fulfilledTimeStamp;return(H==null?void 0:H.status)==="pending"?!1:p(x,N)?!0:!O},dispatchConditionRejection:!0}),m=EP(r+"/executeMutation",f,{getPendingMeta:function(){return{startedTimeStamp:Date.now()}}}),g=function(x){return"force"in x},y=function(x){return"ifOlderThan"in x},k=function(x,b,j){return function(R,V){var N=g(j)&&j.force,H=y(j)&&j.ifOlderThan,O=function(X){return X===void 0&&(X=!0),s.endpoints[x].initiate(b,{forceRefetch:X})},M=s.endpoints[x].select(b)(V());if(N)R(O());else if(H){var F=M==null?void 0:M.fulfilledTimeStamp;if(!F){R(O());return}var J=(Number(new Date)-Number(new Date(F)))/1e3>=H;J&&R(O())}else R(O(!1))}};function q(x){return function(b){var j,R;return((R=(j=b==null?void 0:b.meta)==null?void 0:j.arg)==null?void 0:R.endpointName)===x}}function P(x,b){return{matchPending:qu(a1(x),q(b)),matchFulfilled:qu(Is(x),q(b)),matchRejected:qu(nc(x),q(b))}}return{queryThunk:h,mutationThunk:m,prefetch:k,updateQueryData:c,patchQueryData:l,buildMatchThunkActions:P}}function S5(t,e,r,n){return A5(r[t.meta.arg.endpointName][e],Is(t)?t.payload:void 0,xh(t)?t.payload:void 0,t.meta.arg.originalArgs,"baseQueryMeta"in t.meta?t.meta.baseQueryMeta:void 0,n)}function Kf(t,e,r){var n=t[e];n&&r(n)}function ic(t){var e;return(e="arg"in t?t.arg.fixedCacheKey:t.fixedCacheKey)!=null?e:t.requestId}function sw(t,e,r){var n=t[ic(e)];n&&r(n)}var Bf={};function qz(t){var e=t.reducerPath,r=t.queryThunk,n=t.mutationThunk,i=t.context,a=i.endpointDefinitions,s=i.apiUid,l=i.extractRehydrationInfo,c=i.hasRehydrationInfo,f=t.assertTagType,p=t.config,h=Gr(e+"/resetApiState"),m=Ci({name:e+"/queries",initialState:Bf,reducers:{removeQueryResult:function(j,R){var V=R.payload.queryCacheKey;delete j[V]},queryResultPatched:function(j,R){var V=R.payload,N=V.queryCacheKey,H=V.patches;Kf(j,N,function(O){O.data=lO(O.data,H.concat())})}},extraReducers:function(j){j.addCase(r.pending,function(R,V){var N=V.meta,H=V.meta.arg,O,M;H.subscribe&&((M=R[O=H.queryCacheKey])!=null||(R[O]={status:ht.uninitialized,endpointName:H.endpointName})),Kf(R,H.queryCacheKey,function(F){F.status=ht.pending,F.requestId=N.requestId,H.originalArgs!==void 0&&(F.originalArgs=H.originalArgs),F.startedTimeStamp=N.startedTimeStamp})}).addCase(r.fulfilled,function(R,V){var N=V.meta,H=V.payload;Kf(R,N.arg.queryCacheKey,function(O){var M;O.requestId===N.requestId&&(O.status=ht.fulfilled,O.data=(M=a[N.arg.endpointName].structuralSharing)==null||M?v5(O.data,H):H,delete O.error,O.fulfilledTimeStamp=N.fulfilledTimeStamp)})}).addCase(r.rejected,function(R,V){var N=V.meta,H=N.condition,O=N.arg,M=N.requestId,F=V.error,J=V.payload;Kf(R,O.queryCacheKey,function(X){if(!H){if(X.requestId!==M)return;X.status=ht.rejected,X.error=J!=null?J:F}})}).addMatcher(c,function(R,V){for(var N=l(V).queries,H=0,O=Object.entries(N);H<O.length;H++){var M=O[H],F=M[0],J=M[1];((J==null?void 0:J.status)===ht.fulfilled||(J==null?void 0:J.status)===ht.rejected)&&(R[F]=J)}})}}),g=Ci({name:e+"/mutations",initialState:Bf,reducers:{removeMutationResult:function(j,R){var V=R.payload,N=ic(V);N in j&&delete j[N]}},extraReducers:function(j){j.addCase(n.pending,function(R,V){var N=V.meta,H=V.meta,O=H.requestId,M=H.arg,F=H.startedTimeStamp;!M.track||(R[ic(N)]={requestId:O,status:ht.pending,endpointName:M.endpointName,startedTimeStamp:F})}).addCase(n.fulfilled,function(R,V){var N=V.payload,H=V.meta;!H.arg.track||sw(R,H,function(O){O.requestId===H.requestId&&(O.status=ht.fulfilled,O.data=N,O.fulfilledTimeStamp=H.fulfilledTimeStamp)})}).addCase(n.rejected,function(R,V){var N=V.payload,H=V.error,O=V.meta;!O.arg.track||sw(R,O,function(M){M.requestId===O.requestId&&(M.status=ht.rejected,M.error=N!=null?N:H)})}).addMatcher(c,function(R,V){for(var N=l(V).mutations,H=0,O=Object.entries(N);H<O.length;H++){var M=O[H],F=M[0],J=M[1];((J==null?void 0:J.status)===ht.fulfilled||(J==null?void 0:J.status)===ht.rejected)&&F!==(J==null?void 0:J.requestId)&&(R[F]=J)}})}}),y=Ci({name:e+"/invalidation",initialState:Bf,reducers:{},extraReducers:function(j){j.addCase(m.actions.removeQueryResult,function(R,V){for(var N=V.payload.queryCacheKey,H=0,O=Object.values(R);H<O.length;H++)for(var M=O[H],F=0,J=Object.values(M);F<J.length;F++){var X=J[F],re=X.indexOf(N);re!==-1&&X.splice(re,1)}}).addMatcher(c,function(R,V){for(var N,H,O,M,F=l(V).provided,J=0,X=Object.entries(F);J<X.length;J++)for(var re=X[J],ae=re[0],te=re[1],ie=0,K=Object.entries(te);ie<K.length;ie++)for(var oe=K[ie],ne=oe[0],ue=oe[1],pe=(M=(H=(N=R[ae])!=null?N:R[ae]={})[O=ne||"__internal_without_id"])!=null?M:H[O]=[],Pe=0,be=ue;Pe<be.length;Pe++){var Be=be[Pe],Ze=pe.includes(Be);Ze||pe.push(Be)}}).addMatcher(fl(Is(r),xh(r)),function(R,V){for(var N,H,O,M,F=S5(V,"providesTags",a,f),J=V.meta.arg.queryCacheKey,X=0,re=F;X<re.length;X++){var ae=re[X],te=ae.type,ie=ae.id,K=(M=(H=(N=R[te])!=null?N:R[te]={})[O=ie||"__internal_without_id"])!=null?M:H[O]=[],oe=K.includes(J);oe||K.push(J)}})}}),k=Ci({name:e+"/subscriptions",initialState:Bf,reducers:{updateSubscriptionOptions:function(j,R){var V=R.payload,N=V.queryCacheKey,H=V.requestId,O=V.options,M;(M=j==null?void 0:j[N])!=null&&M[H]&&(j[N][H]=O)},unsubscribeQueryResult:function(j,R){var V=R.payload,N=V.queryCacheKey,H=V.requestId;j[N]&&delete j[N][H]}},extraReducers:function(j){j.addCase(m.actions.removeQueryResult,function(R,V){var N=V.payload.queryCacheKey;delete R[N]}).addCase(r.pending,function(R,V){var N=V.meta,H=N.arg,O=N.requestId,M,F,J,X;if(H.subscribe){var re=(F=R[M=H.queryCacheKey])!=null?F:R[M]={};re[O]=(X=(J=H.subscriptionOptions)!=null?J:re[O])!=null?X:{}}}).addCase(r.rejected,function(R,V){var N=V.meta,H=N.condition,O=N.arg,M=N.requestId;V.error,V.payload;var F,J,X,re;if(H&&O.subscribe){var ae=(J=R[F=O.queryCacheKey])!=null?J:R[F]={};ae[M]=(re=(X=O.subscriptionOptions)!=null?X:ae[M])!=null?re:{}}}).addMatcher(c,function(R){return yr({},R)})}}),q=Ci({name:e+"/config",initialState:yr({online:Az(),focused:Sz(),middlewareRegistered:!1},p),reducers:{middlewareRegistered:function(j,R){var V=R.payload;j.middlewareRegistered=j.middlewareRegistered==="conflict"||s!==V?"conflict":!0}},extraReducers:function(j){j.addCase(l1,function(R){R.online=!0}).addCase(g5,function(R){R.online=!1}).addCase(o1,function(R){R.focused=!0}).addCase(y5,function(R){R.focused=!1}).addMatcher(c,function(R){return yr({},R)})}}),P=n1({queries:m.reducer,mutations:g.reducer,provided:y.reducer,subscriptions:k.reducer,config:q.reducer}),x=function(j,R){return P(h.match(R)?void 0:j,R)},b=Ls(yr(yr(yr(yr({},q.actions),m.actions),k.actions),g.actions),{unsubscribeMutationResult:g.actions.removeMutationResult,resetApiState:h});return{reducer:x,actions:b}}var js=Symbol.for("RTKQ/skipToken"),x5={status:ht.uninitialized},Tz=Do(x5,function(){}),jz=Do(x5,function(){});function Rz(t){var e=t.serializeQueryArgs,r=t.reducerPath;return{buildQuerySelector:a,buildMutationSelector:s,selectInvalidatedBy:l};function n(c){return yr(yr({},c),gz(c.status))}function i(c){var f=c[r];return f}function a(c,f){return function(p){var h=Ts(i,function(m){var g,y;return(y=p===js||(g=m==null?void 0:m.queries)==null?void 0:g[e({queryArgs:p,endpointDefinition:f,endpointName:c})])!=null?y:Tz});return Ts(h,n)}}function s(){return function(c){var f,p;typeof c=="object"?p=(f=ic(c))!=null?f:js:p=c;var h=Ts(i,function(m){var g,y;return(y=p===js||(g=m==null?void 0:m.mutations)==null?void 0:g[p])!=null?y:jz});return Ts(h,n)}}function l(c,f){for(var p,h=c[r],m=new Set,g=0,y=f.map(yg);g<y.length;g++){var k=y[g],q=h.provided[k.type];if(!!q)for(var P=(p=k.id!==void 0?q[k.id]:nw(Object.values(q)))!=null?p:[],x=0,b=P;x<b.length;x++){var j=b[x];m.add(j)}}return nw(Array.from(m.values()).map(function(R){var V=h.queries[R];return V?[{queryCacheKey:R,endpointName:V.endpointName,originalArgs:V.originalArgs}]:[]}))}}var Vz=function(t){var e=t.endpointName,r=t.queryArgs;return e+"("+JSON.stringify(r,function(n,i){return i1(i)?Object.keys(i).sort().reduce(function(a,s){return a[s]=i[s],a},{}):i})+")"};function Lz(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return function(n){var i=fg(function(p){var h,m;return(m=n.extractRehydrationInfo)==null?void 0:m.call(n,p,{reducerPath:(h=n.reducerPath)!=null?h:"api"})}),a=Ls(yr({reducerPath:"api",serializeQueryArgs:Vz,keepUnusedDataFor:60,refetchOnMountOrArgChange:!1,refetchOnFocus:!1,refetchOnReconnect:!1},n),{extractRehydrationInfo:i,tagTypes:Sp([],n.tagTypes||[])}),s={endpointDefinitions:{},batch:function(p){p()},apiUid:t5(),extractRehydrationInfo:i,hasRehydrationInfo:fg(function(p){return i(p)!=null})},l={injectEndpoints:f,enhanceEndpoints:function(p){var h=p.addTagTypes,m=p.endpoints;if(h)for(var g=0,y=h;g<y.length;g++){var k=y[g];a.tagTypes.includes(k)||a.tagTypes.push(k)}if(m)for(var q=0,P=Object.entries(m);q<P.length;q++){var x=P[q],b=x[0],j=x[1];typeof j=="function"&&j(s.endpointDefinitions[b]),Object.assign(s.endpointDefinitions[b]||{},j)}return l}},c=t.map(function(p){return p.init(l,a,s)});function f(p){for(var h=p.endpoints({query:function(j){return Ls(yr({},j),{type:Dn.query})},mutation:function(j){return Ls(yr({},j),{type:Dn.mutation})}}),m=0,g=Object.entries(h);m<g.length;m++){var y=g[m],k=y[0],q=y[1];if(!(!p.overrideExisting&&k in s.endpointDefinitions)){s.endpointDefinitions[k]=q;for(var P=0,x=c;P<x.length;P++){var b=x[P];b.injectEndpoint(k,q)}}}return l}return l.injectEndpoints({endpoints:n.endpoints})}}var Nz=function(t){var e=t.reducerPath,r=t.api,n=t.context,i=r.internalActions,a=i.removeQueryResult,s=i.unsubscribeQueryResult;return function(l){var c={};return function(p){return function(h){var m,g=p(h);if(s.match(h)){var y=l.getState()[e],k=h.payload.queryCacheKey;f(k,(m=y.queries[k])==null?void 0:m.endpointName,l,y.config)}if(r.util.resetApiState.match(h))for(var q=0,P=Object.entries(c);q<P.length;q++){var x=P[q],b=x[0],j=x[1];j&&clearTimeout(j),delete c[b]}if(n.hasRehydrationInfo(h))for(var y=l.getState()[e],R=n.extractRehydrationInfo(h).queries,V=0,N=Object.entries(R);V<N.length;V++){var H=N[V],k=H[0],O=H[1];f(k,O==null?void 0:O.endpointName,l,y.config)}return g}};function f(p,h,m,g){var y,k=n.endpointDefinitions[h],q=(y=k==null?void 0:k.keepUnusedDataFor)!=null?y:g.keepUnusedDataFor,P=c[p];P&&clearTimeout(P),c[p]=setTimeout(function(){var x=m.getState()[e].subscriptions[p];(!x||Object.keys(x).length===0)&&m.dispatch(a({queryCacheKey:p})),delete c[p]},q*1e3)}}},Wz=function(t){var e=t.reducerPath,r=t.context,n=t.context.endpointDefinitions,i=t.mutationThunk,a=t.api,s=t.assertTagType,l=t.refetchQuery,c=a.internalActions.removeQueryResult;return function(p){return function(h){return function(m){var g=h(m);return fl(Is(i),xh(i))(m)&&f(S5(m,"invalidatesTags",n,s),p),a.util.invalidateTags.match(m)&&f(A5(m.payload,void 0,void 0,void 0,void 0,s),p),g}}};function f(p,h){var m=h.getState(),g=m[e],y=a.util.selectInvalidatedBy(m,p);r.batch(function(){for(var k=Array.from(y.values()),q=0,P=k;q<P.length;q++){var x=P[q].queryCacheKey,b=g.queries[x],j=g.subscriptions[x];b&&j&&(Object.keys(j).length===0?h.dispatch(c({queryCacheKey:x})):b.status!==ht.uninitialized&&h.dispatch(l(b,x)))}})}},Uz=function(t){var e=t.reducerPath,r=t.queryThunk,n=t.api,i=t.refetchQuery;return function(s){var l={};return function(m){return function(g){var y=m(g);return(n.internalActions.updateSubscriptionOptions.match(g)||n.internalActions.unsubscribeQueryResult.match(g))&&f(g.payload,s),(r.pending.match(g)||r.rejected.match(g)&&g.meta.condition)&&f(g.meta.arg,s),(r.fulfilled.match(g)||r.rejected.match(g)&&!g.meta.condition)&&c(g.meta.arg,s),n.util.resetApiState.match(g)&&h(),y}};function c(m,g){var y=m.queryCacheKey,k=g.getState()[e],q=k.queries[y],P=k.subscriptions[y];if(!(!q||q.status===ht.uninitialized)){var x=a(P);if(!!Number.isFinite(x)){var b=l[y];b!=null&&b.timeout&&(clearTimeout(b.timeout),b.timeout=void 0);var j=Date.now()+x,R=l[y]={nextPollTimestamp:j,pollingInterval:x,timeout:setTimeout(function(){R.timeout=void 0,g.dispatch(i(q,y))},x)}}}}function f(m,g){var y=m.queryCacheKey,k=g.getState()[e],q=k.queries[y],P=k.subscriptions[y];if(!(!q||q.status===ht.uninitialized)){var x=a(P);if(!Number.isFinite(x)){p(y);return}var b=l[y],j=Date.now()+x;(!b||j<b.nextPollTimestamp)&&c({queryCacheKey:y},g)}}function p(m){var g=l[m];g!=null&&g.timeout&&clearTimeout(g.timeout),delete l[m]}function h(){for(var m=0,g=Object.keys(l);m<g.length;m++){var y=g[m];p(y)}}};function a(s){s===void 0&&(s={});for(var l=Number.POSITIVE_INFINITY,c=0,f=Object.values(s);c<f.length;c++){var p=f[c];p.pollingInterval&&(l=Math.min(p.pollingInterval,l))}return l}},Hz=function(t){var e=t.reducerPath,r=t.context,n=t.api,i=t.refetchQuery,a=n.internalActions.removeQueryResult;return function(l){return function(c){return function(f){var p=c(f);return o1.match(f)&&s(l,"refetchOnFocus"),l1.match(f)&&s(l,"refetchOnReconnect"),p}}};function s(l,c){var f=l.getState()[e],p=f.queries,h=f.subscriptions;r.batch(function(){for(var m=0,g=Object.keys(h);m<g.length;m++){var y=g[m],k=p[y],q=h[y];if(!(!q||!k)){var P=Object.values(q).some(function(x){return x[c]===!0})||Object.values(q).every(function(x){return x[c]===void 0})&&f.config[c];P&&(Object.keys(q).length===0?l.dispatch(a({queryCacheKey:y})):k.status!==ht.uninitialized&&l.dispatch(i(k,y)))}}})}},ow=new Error("Promise never resolved before cacheEntryRemoved."),Mz=function(t){var e=t.api,r=t.reducerPath,n=t.context,i=t.queryThunk,a=t.mutationThunk,s=dg(i),l=dg(a),c=Is(i,a);return function(f){var p={};return function(g){return function(y){var k=f.getState(),q=g(y),P=h(y);if(i.pending.match(y)){var x=k[r].queries[P],b=f.getState()[r].queries[P];!x&&b&&m(y.meta.arg.endpointName,y.meta.arg.originalArgs,P,f,y.meta.requestId)}else if(a.pending.match(y)){var b=f.getState()[r].mutations[P];b&&m(y.meta.arg.endpointName,y.meta.arg.originalArgs,P,f,y.meta.requestId)}else if(c(y)){var j=p[P];j!=null&&j.valueResolved&&(j.valueResolved({data:y.payload,meta:y.meta.baseQueryMeta}),delete j.valueResolved)}else if(e.internalActions.removeQueryResult.match(y)||e.internalActions.removeMutationResult.match(y)){var j=p[P];j&&(delete p[P],j.cacheEntryRemoved())}else if(e.util.resetApiState.match(y))for(var R=0,V=Object.entries(p);R<V.length;R++){var N=V[R],H=N[0],j=N[1];delete p[H],j.cacheEntryRemoved()}return q}};function h(g){return s(g)?g.meta.arg.queryCacheKey:l(g)?g.meta.requestId:e.internalActions.removeQueryResult.match(g)?g.payload.queryCacheKey:e.internalActions.removeMutationResult.match(g)?ic(g.payload):""}function m(g,y,k,q,P){var x=n.endpointDefinitions[g],b=x==null?void 0:x.onCacheEntryAdded;if(!!b){var j={},R=new Promise(function(F){j.cacheEntryRemoved=F}),V=Promise.race([new Promise(function(F){j.valueResolved=F}),R.then(function(){throw ow})]);V.catch(function(){}),p[k]=j;var N=e.endpoints[g].select(x.type===Dn.query?y:k),H=q.dispatch(function(F,J,X){return X}),O=Ls(yr({},q),{getCacheEntry:function(){return N(q.getState())},requestId:P,extra:H,updateCachedData:x.type===Dn.query?function(F){return q.dispatch(e.util.updateQueryData(g,y,F))}:void 0,cacheDataLoaded:V,cacheEntryRemoved:R}),M=b(y,O);Promise.resolve(M).catch(function(F){if(F!==ow)throw F})}}}},Oz=function(t){var e=t.api,r=t.context,n=t.queryThunk,i=t.mutationThunk,a=a1(n,i),s=nc(n,i),l=Is(n,i);return function(c){var f={};return function(p){return function(h){var m,g,y,k=p(h);if(a(h)){var q=h.meta,P=q.requestId,x=q.arg,b=x.endpointName,j=x.originalArgs,R=r.endpointDefinitions[b],V=R==null?void 0:R.onQueryStarted;if(V){var N={},H=new Promise(function(te,ie){N.resolve=te,N.reject=ie});H.catch(function(){}),f[P]=N;var O=e.endpoints[b].select(R.type===Dn.query?j:P),M=c.dispatch(function(te,ie,K){return K}),F=Ls(yr({},c),{getCacheEntry:function(){return O(c.getState())},requestId:P,extra:M,updateCachedData:R.type===Dn.query?function(te){return c.dispatch(e.util.updateQueryData(b,j,te))}:void 0,queryFulfilled:H});V(j,F)}}else if(l(h)){var J=h.meta,P=J.requestId,X=J.baseQueryMeta;(m=f[P])==null||m.resolve({data:h.payload,meta:X}),delete f[P]}else if(s(h)){var re=h.meta,P=re.requestId,ae=re.rejectedWithValue,X=re.baseQueryMeta;(y=f[P])==null||y.reject({error:(g=h.payload)!=null?g:h.error,isUnhandledError:!ae,meta:X}),delete f[P]}return k}}}},zz=function(t){var e=t.api,r=t.context.apiUid,n=t.reducerPath;return function(i){var a=!1;return function(s){return function(l){var c,f;a||(a=!0,i.dispatch(e.internalActions.middlewareRegistered(r)));var p=s(l);return e.util.resetApiState.match(l)&&i.dispatch(e.internalActions.middlewareRegistered(r)),p}}}};function Yz(t){var e=t.reducerPath,r=t.queryThunk,n={invalidateTags:Gr(e+"/invalidateTags")},i=[zz,Nz,Wz,Uz,Hz,Mz,Oz].map(function(l){return l(Ls(yr({},t),{refetchQuery:s}))}),a=function(l){return function(c){var f=rc.apply(void 0,i.map(function(p){return p(l)}))(c);return function(p){return l.getState()[e]?f(p):c(p)}}};return{middleware:a,actions:n};function s(l,c,f){return f===void 0&&(f={}),r(yr({type:"query",endpointName:l.endpointName,originalArgs:l.originalArgs,subscribe:!1,forceRefetch:!0,queryCacheKey:c},f))}}function Cz(t){var e=t.serializeQueryArgs,r=t.queryThunk,n=t.mutationThunk,i=t.api,a=t.context,s={},l={},c=i.internalActions,f=c.unsubscribeQueryResult,p=c.removeMutationResult,h=c.updateSubscriptionOptions;return{buildInitiateQuery:y,buildInitiateMutation:k,getRunningOperationPromises:g,getRunningOperationPromise:m};function m(q,P){var x=a.endpointDefinitions[q];if(x.type===Dn.query){var b=e({queryArgs:P,endpointDefinition:x,endpointName:q});return s[b]}else return l[P]}function g(){return Sp(Sp([],Object.values(s)),Object.values(l)).filter(function(q){return!!q})}function y(q,P){var x=function(b,j){var R=j===void 0?{}:j,V=R.subscribe,N=V===void 0?!0:V,H=R.forceRefetch,O=R.subscriptionOptions;return function(M,F){var J=e({queryArgs:b,endpointDefinition:P,endpointName:q}),X=r({type:"query",subscribe:N,forceRefetch:H,subscriptionOptions:O,endpointName:q,originalArgs:b,queryCacheKey:J}),re=M(X),ae=re.requestId,te=re.abort,ie=Object.assign(Promise.all([s[J],re]).then(function(){return i.endpoints[q].select(b)(F())}),{arg:b,requestId:ae,subscriptionOptions:O,queryCacheKey:J,abort:te,unwrap:function(){return m5(this,null,function(){var K;return h5(this,function(oe){switch(oe.label){case 0:return[4,ie];case 1:if(K=oe.sent(),K.isError)throw K.error;return[2,K.data]}})})},refetch:function(){M(x(b,{subscribe:!1,forceRefetch:!0}))},unsubscribe:function(){N&&M(f({queryCacheKey:J,requestId:ae}))},updateSubscriptionOptions:function(K){ie.subscriptionOptions=K,M(h({endpointName:q,requestId:ae,queryCacheKey:J,options:K}))}});return s[J]||(s[J]=ie,ie.then(function(){delete s[J]})),ie}};return x}function k(q){return function(P,x){var b=x===void 0?{}:x,j=b.track,R=j===void 0?!0:j,V=b.fixedCacheKey;return function(N,H){var O=n({type:"mutation",endpointName:q,originalArgs:P,track:R,fixedCacheKey:V}),M=N(O),F=M.requestId,J=M.abort,X=M.unwrap,re=M.unwrap().then(function(ie){return{data:ie}}).catch(function(ie){return{error:ie}}),ae=function(){N(p({requestId:F,fixedCacheKey:V}))},te=Object.assign(re,{arg:M.arg,requestId:F,abort:J,unwrap:X,unsubscribe:ae,reset:ae});return l[F]=te,te.then(function(){delete l[F]}),V&&(l[V]=te,te.then(function(){l[V]===te&&delete l[V]})),te}}}}function ga(t){for(var e=[],r=1;r<arguments.length;r++)e[r-1]=arguments[r];Object.assign.apply(Object,Sp([t],e))}var lw=Symbol(),Fz=function(){return{name:lw,init:function(t,e,r){var n=e.baseQuery,i=e.tagTypes,a=e.reducerPath,s=e.serializeQueryArgs,l=e.keepUnusedDataFor,c=e.refetchOnMountOrArgChange,f=e.refetchOnFocus,p=e.refetchOnReconnect;tO();var h=function(K){return K};Object.assign(t,{reducerPath:a,endpoints:{},internalActions:{onOnline:l1,onOffline:g5,onFocus:o1,onFocusLost:y5},util:{}});var m=bz({baseQuery:n,reducerPath:a,context:r,api:t,serializeQueryArgs:s}),g=m.queryThunk,y=m.mutationThunk,k=m.patchQueryData,q=m.updateQueryData,P=m.prefetch,x=m.buildMatchThunkActions,b=qz({context:r,queryThunk:g,mutationThunk:y,reducerPath:a,assertTagType:h,config:{refetchOnFocus:f,refetchOnReconnect:p,refetchOnMountOrArgChange:c,keepUnusedDataFor:l,reducerPath:a}}),j=b.reducer,R=b.actions;ga(t.util,{patchQueryData:k,updateQueryData:q,prefetch:P,resetApiState:R.resetApiState}),ga(t.internalActions,R),Object.defineProperty(t.util,"updateQueryResult",{get:function(){return t.util.updateQueryData}}),Object.defineProperty(t.util,"patchQueryResult",{get:function(){return t.util.patchQueryData}});var V=Yz({reducerPath:a,context:r,queryThunk:g,mutationThunk:y,api:t,assertTagType:h}),N=V.middleware,H=V.actions;ga(t.util,H),ga(t,{reducer:j,middleware:N});var O=Rz({serializeQueryArgs:s,reducerPath:a}),M=O.buildQuerySelector,F=O.buildMutationSelector,J=O.selectInvalidatedBy;ga(t.util,{selectInvalidatedBy:J});var X=Cz({queryThunk:g,mutationThunk:y,api:t,serializeQueryArgs:s,context:r}),re=X.buildInitiateQuery,ae=X.buildInitiateMutation,te=X.getRunningOperationPromises,ie=X.getRunningOperationPromise;return ga(t.util,{getRunningOperationPromises:te,getRunningOperationPromise:ie}),{name:lw,injectEndpoint:function(K,oe){var ne,ue,pe=t;(ue=(ne=pe.endpoints)[K])!=null||(ne[K]={}),xz(oe)?ga(pe.endpoints[K],{select:M(K,oe),initiate:re(K,oe)},x(g,K)):Pz(oe)&&ga(pe.endpoints[K],{select:F(),initiate:ae(K)},x(y,K))}}}}},Iz=globalThis&&globalThis.__spreadArray||function(t,e){for(var r=0,n=e.length,i=t.length;r<n;r++,i++)t[i]=e[r];return t},Ez=Object.defineProperty,Jz=Object.defineProperties,Dz=Object.getOwnPropertyDescriptors,uw=Object.getOwnPropertySymbols,Gz=Object.prototype.hasOwnProperty,Kz=Object.prototype.propertyIsEnumerable,cw=function(t,e,r){return e in t?Ez(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r},Mi=function(t,e){for(var r in e||(e={}))Gz.call(e,r)&&cw(t,r,e[r]);if(uw)for(var n=0,i=uw(e);n<i.length;n++){var r=i[n];Kz.call(e,r)&&cw(t,r,e[r])}return t},Rd=function(t,e){return Jz(t,Dz(e))};function fw(t,e,r,n){var i=Y.exports.useMemo(function(){return{queryArgs:t,serialized:typeof t=="object"?e({queryArgs:t,endpointDefinition:r,endpointName:n}):t}},[t,e,r,n]),a=Y.exports.useRef(i);return Y.exports.useEffect(function(){a.current.serialized!==i.serialized&&(a.current=i)},[i]),a.current.serialized===i.serialized?a.current.queryArgs:t}var zv=Symbol();function Yv(t){var e=Y.exports.useRef(t);return Y.exports.useEffect(function(){yp(e.current,t)||(e.current=t)},[t]),yp(e.current,t)?e.current:t}var Bz=typeof window!="undefined"&&typeof window.document!="undefined"&&typeof window.document.createElement!="undefined"?Y.exports.useLayoutEffect:Y.exports.useEffect,Zz=function(t){return t},Xz=function(t){return t},Qz=function(t){return t.isUninitialized?Rd(Mi({},t),{isUninitialized:!1,isFetching:!0,isLoading:t.data===void 0,status:ht.pending}):t};function _z(t){var e=t.api,r=t.moduleOptions,n=r.batch,i=r.useDispatch,a=r.useSelector,s=r.useStore,l=r.unstable__sideEffectsInRender,c=t.serializeQueryArgs,f=t.context,p=l?function(k){return k()}:Y.exports.useEffect;return{buildQueryHooks:g,buildMutationHook:y,usePrefetch:m};function h(k,q,P){if((q==null?void 0:q.endpointName)&&k.isUninitialized){var x=q.endpointName,b=f.endpointDefinitions[x];c({queryArgs:q.originalArgs,endpointDefinition:b,endpointName:x})===c({queryArgs:P,endpointDefinition:b,endpointName:x})&&(q=void 0)}var j=k.isSuccess?k.data:q==null?void 0:q.data;j===void 0&&(j=k.data);var R=j!==void 0,V=k.isLoading,N=!R&&V,H=k.isSuccess||V&&R;return Rd(Mi({},k),{data:j,currentData:k.data,isFetching:V,isLoading:N,isSuccess:H})}function m(k,q){var P=i(),x=Yv(q);return Y.exports.useCallback(function(b,j){return P(e.util.prefetch(k,b,Mi(Mi({},x),j)))},[k,P,x])}function g(k){var q=function(b,j){var R=j===void 0?{}:j,V=R.refetchOnReconnect,N=R.refetchOnFocus,H=R.refetchOnMountOrArgChange,O=R.skip,M=O===void 0?!1:O,F=R.pollingInterval,J=F===void 0?0:F,X=e.endpoints[k].initiate,re=i(),ae=fw(M?js:b,c,f.endpointDefinitions[k],k),te=Yv({refetchOnReconnect:V,refetchOnFocus:N,pollingInterval:J}),ie=Y.exports.useRef(),K=ie.current||{},oe=K.queryCacheKey,ne=K.requestId,ue=a(function(pe){var Pe;return!!oe&&!!ne&&!((Pe=pe[e.reducerPath].subscriptions[oe])!=null&&Pe[ne])});return p(function(){ie.current=void 0},[ue]),p(function(){var pe,Pe=ie.current;if(ae===js){Pe==null||Pe.unsubscribe(),ie.current=void 0;return}var be=(pe=ie.current)==null?void 0:pe.subscriptionOptions;if(!Pe||Pe.arg!==ae){Pe==null||Pe.unsubscribe();var Be=re(X(ae,{subscriptionOptions:te,forceRefetch:H}));ie.current=Be}else te!==be&&Pe.updateSubscriptionOptions(te)},[re,X,H,ae,te,ue]),Y.exports.useEffect(function(){return function(){var pe;(pe=ie.current)==null||pe.unsubscribe(),ie.current=void 0}},[]),Y.exports.useMemo(function(){return{refetch:function(){var pe;return void((pe=ie.current)==null?void 0:pe.refetch())}}},[])},P=function(b){var j=b===void 0?{}:b,R=j.refetchOnReconnect,V=j.refetchOnFocus,N=j.pollingInterval,H=N===void 0?0:N,O=e.endpoints[k].initiate,M=i(),F=Y.exports.useState(zv),J=F[0],X=F[1],re=Y.exports.useRef(),ae=Yv({refetchOnReconnect:R,refetchOnFocus:V,pollingInterval:H});p(function(){var K,oe,ne=(K=re.current)==null?void 0:K.subscriptionOptions;ae!==ne&&((oe=re.current)==null||oe.updateSubscriptionOptions(ae))},[ae]);var te=Y.exports.useRef(ae);p(function(){te.current=ae},[ae]);var ie=Y.exports.useCallback(function(K,oe){oe===void 0&&(oe=!1);var ne;return n(function(){var ue;(ue=re.current)==null||ue.unsubscribe(),re.current=ne=M(O(K,{subscriptionOptions:te.current,forceRefetch:!oe})),X(K)}),ne},[M,O]);return Y.exports.useEffect(function(){return function(){var K;(K=re==null?void 0:re.current)==null||K.unsubscribe()}},[]),Y.exports.useEffect(function(){J!==zv&&!re.current&&ie(J,!0)},[J,ie]),Y.exports.useMemo(function(){return[ie,J]},[ie,J])},x=function(b,j){var R=j===void 0?{}:j,V=R.skip,N=V===void 0?!1:V,H=R.selectFromResult,O=H===void 0?Zz:H,M=e.endpoints[k].select,F=fw(N?js:b,c,f.endpointDefinitions[k],k),J=Y.exports.useRef(),X=Y.exports.useMemo(function(){return Ts([M(F),function(K,oe){return oe},function(K){return F}],h)},[M,F]),re=Y.exports.useMemo(function(){return Ts([X],O)},[X,O]),ae=a(function(K){return re(K,J.current)},yp),te=s(),ie=X(te.getState(),J.current);return Bz(function(){J.current=ie},[ie]),ae};return{useQueryState:x,useQuerySubscription:q,useLazyQuerySubscription:P,useLazyQuery:function(b){var j=P(b),R=j[0],V=j[1],N=x(V,Rd(Mi({},b),{skip:V===zv})),H=Y.exports.useMemo(function(){return{lastArg:V}},[V]);return Y.exports.useMemo(function(){return[R,N,H]},[R,N,H])},useQuery:function(b,j){var R=q(b,j),V=x(b,Mi({selectFromResult:b===js||(j==null?void 0:j.skip)?void 0:Qz},j));return Y.exports.useMemo(function(){return Mi(Mi({},V),R)},[V,R])}}}function y(k){return function(q){var P=q===void 0?{}:q,x=P.selectFromResult,b=x===void 0?Xz:x,j=P.fixedCacheKey,R=e.endpoints[k],V=R.select,N=R.initiate,H=i(),O=Y.exports.useState(),M=O[0],F=O[1];Y.exports.useEffect(function(){return function(){M!=null&&M.arg.fixedCacheKey||M==null||M.reset()}},[M]);var J=Y.exports.useCallback(function(oe){var ne=H(N(oe,{fixedCacheKey:j}));return F(ne),ne},[H,N,j]),X=(M||{}).requestId,re=Y.exports.useMemo(function(){return Ts([V({fixedCacheKey:j,requestId:M==null?void 0:M.requestId})],b)},[V,M,b,j]),ae=a(re,yp),te=j==null?M==null?void 0:M.arg.originalArgs:void 0,ie=Y.exports.useCallback(function(){n(function(){M&&F(void 0),j&&H(e.internalActions.removeMutationResult({requestId:X,fixedCacheKey:j}))})},[H,j,M,X]),K=Y.exports.useMemo(function(){return Rd(Mi({},ae),{originalArgs:te,reset:ie})},[ae,te,ie]);return Y.exports.useMemo(function(){return[J,K]},[J,K])}}}var xp;(function(t){t.query="query",t.mutation="mutation"})(xp||(xp={}));function $z(t){return t.type===xp.query}function eY(t){return t.type===xp.mutation}function Cv(t){return t.replace(t[0],t[0].toUpperCase())}function Zf(t){for(var e=[],r=1;r<arguments.length;r++)e[r-1]=arguments[r];Object.assign.apply(Object,Iz([t],e))}var tY=Symbol(),rY=function(t){var e=t===void 0?{}:t,r=e.batch,n=r===void 0?ll.exports.unstable_batchedUpdates:r,i=e.useDispatch,a=i===void 0?Ph:i,s=e.useSelector,l=s===void 0?p5:s,c=e.useStore,f=c===void 0?d5:c,p=e.unstable__sideEffectsInRender,h=p===void 0?!1:p;return{name:tY,init:function(m,g,y){var k=g.serializeQueryArgs,q=m,P=_z({api:m,moduleOptions:{batch:n,useDispatch:a,useSelector:l,useStore:f,unstable__sideEffectsInRender:h},serializeQueryArgs:k,context:y}),x=P.buildQueryHooks,b=P.buildMutationHook,j=P.usePrefetch;return Zf(q,{usePrefetch:j}),Zf(y,{batch:n}),{injectEndpoint:function(R,V){if($z(V)){var N=x(R),H=N.useQuery,O=N.useLazyQuery,M=N.useLazyQuerySubscription,F=N.useQueryState,J=N.useQuerySubscription;Zf(q.endpoints[R],{useQuery:H,useLazyQuery:O,useLazyQuerySubscription:M,useQueryState:F,useQuerySubscription:J}),m["use"+Cv(R)+"Query"]=H,m["useLazy"+Cv(R)+"Query"]=O}else if(eY(V)){var X=b(R);Zf(q.endpoints[R],{useMutation:X}),m["use"+Cv(R)+"Mutation"]=X}}}}}},nY=Lz(Fz(),rY()),u1={exports:{}},P5=function(e,r){return function(){for(var i=new Array(arguments.length),a=0;a<i.length;a++)i[a]=arguments[a];return e.apply(r,i)}},iY=P5,ts=Object.prototype.toString;function c1(t){return Array.isArray(t)}function gg(t){return typeof t=="undefined"}function aY(t){return t!==null&&!gg(t)&&t.constructor!==null&&!gg(t.constructor)&&typeof t.constructor.isBuffer=="function"&&t.constructor.isBuffer(t)}function w5(t){return ts.call(t)==="[object ArrayBuffer]"}function sY(t){return ts.call(t)==="[object FormData]"}function oY(t){var e;return typeof ArrayBuffer!="undefined"&&ArrayBuffer.isView?e=ArrayBuffer.isView(t):e=t&&t.buffer&&w5(t.buffer),e}function lY(t){return typeof t=="string"}function uY(t){return typeof t=="number"}function k5(t){return t!==null&&typeof t=="object"}function Vd(t){if(ts.call(t)!=="[object Object]")return!1;var e=Object.getPrototypeOf(t);return e===null||e===Object.prototype}function cY(t){return ts.call(t)==="[object Date]"}function fY(t){return ts.call(t)==="[object File]"}function dY(t){return ts.call(t)==="[object Blob]"}function b5(t){return ts.call(t)==="[object Function]"}function pY(t){return k5(t)&&b5(t.pipe)}function hY(t){return ts.call(t)==="[object URLSearchParams]"}function mY(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}function vY(){return typeof navigator!="undefined"&&(navigator.product==="ReactNative"||navigator.product==="NativeScript"||navigator.product==="NS")?!1:typeof window!="undefined"&&typeof document!="undefined"}function f1(t,e){if(!(t===null||typeof t=="undefined"))if(typeof t!="object"&&(t=[t]),c1(t))for(var r=0,n=t.length;r<n;r++)e.call(null,t[r],r,t);else for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&e.call(null,t[i],i,t)}function Ag(){var t={};function e(i,a){Vd(t[a])&&Vd(i)?t[a]=Ag(t[a],i):Vd(i)?t[a]=Ag({},i):c1(i)?t[a]=i.slice():t[a]=i}for(var r=0,n=arguments.length;r<n;r++)f1(arguments[r],e);return t}function yY(t,e,r){return f1(e,function(i,a){r&&typeof i=="function"?t[a]=iY(i,r):t[a]=i}),t}function gY(t){return t.charCodeAt(0)===65279&&(t=t.slice(1)),t}var Br={isArray:c1,isArrayBuffer:w5,isBuffer:aY,isFormData:sY,isArrayBufferView:oY,isString:lY,isNumber:uY,isObject:k5,isPlainObject:Vd,isUndefined:gg,isDate:cY,isFile:fY,isBlob:dY,isFunction:b5,isStream:pY,isURLSearchParams:hY,isStandardBrowserEnv:vY,forEach:f1,merge:Ag,extend:yY,trim:mY,stripBOM:gY},vo=Br;function dw(t){return encodeURIComponent(t).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}var q5=function(e,r,n){if(!r)return e;var i;if(n)i=n(r);else if(vo.isURLSearchParams(r))i=r.toString();else{var a=[];vo.forEach(r,function(c,f){c===null||typeof c=="undefined"||(vo.isArray(c)?f=f+"[]":c=[c],vo.forEach(c,function(h){vo.isDate(h)?h=h.toISOString():vo.isObject(h)&&(h=JSON.stringify(h)),a.push(dw(f)+"="+dw(h))}))}),i=a.join("&")}if(i){var s=e.indexOf("#");s!==-1&&(e=e.slice(0,s)),e+=(e.indexOf("?")===-1?"?":"&")+i}return e},AY=Br;function wh(){this.handlers=[]}wh.prototype.use=function(e,r,n){return this.handlers.push({fulfilled:e,rejected:r,synchronous:n?n.synchronous:!1,runWhen:n?n.runWhen:null}),this.handlers.length-1};wh.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)};wh.prototype.forEach=function(e){AY.forEach(this.handlers,function(n){n!==null&&e(n)})};var SY=wh,xY=Br,PY=function(e,r){xY.forEach(e,function(i,a){a!==r&&a.toUpperCase()===r.toUpperCase()&&(e[r]=i,delete e[a])})},T5=function(e,r,n,i,a){return e.config=r,n&&(e.code=n),e.request=i,e.response=a,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}},e},j5={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},wY=T5,R5=function(e,r,n,i,a){var s=new Error(e);return wY(s,r,n,i,a)},kY=R5,bY=function(e,r,n){var i=n.config.validateStatus;!n.status||!i||i(n.status)?e(n):r(kY("Request failed with status code "+n.status,n.config,null,n.request,n))},Xf=Br,qY=Xf.isStandardBrowserEnv()?function(){return{write:function(r,n,i,a,s,l){var c=[];c.push(r+"="+encodeURIComponent(n)),Xf.isNumber(i)&&c.push("expires="+new Date(i).toGMTString()),Xf.isString(a)&&c.push("path="+a),Xf.isString(s)&&c.push("domain="+s),l===!0&&c.push("secure"),document.cookie=c.join("; ")},read:function(r){var n=document.cookie.match(new RegExp("(^|;\\s*)("+r+")=([^;]*)"));return n?decodeURIComponent(n[3]):null},remove:function(r){this.write(r,"",Date.now()-864e5)}}}():function(){return{write:function(){},read:function(){return null},remove:function(){}}}(),TY=function(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)},jY=function(e,r){return r?e.replace(/\/+$/,"")+"/"+r.replace(/^\/+/,""):e},RY=TY,VY=jY,LY=function(e,r){return e&&!RY(r)?VY(e,r):r},Fv=Br,NY=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"],WY=function(e){var r={},n,i,a;return e&&Fv.forEach(e.split(`
`),function(l){if(a=l.indexOf(":"),n=Fv.trim(l.substr(0,a)).toLowerCase(),i=Fv.trim(l.substr(a+1)),n){if(r[n]&&NY.indexOf(n)>=0)return;n==="set-cookie"?r[n]=(r[n]?r[n]:[]).concat([i]):r[n]=r[n]?r[n]+", "+i:i}}),r},pw=Br,UY=pw.isStandardBrowserEnv()?function(){var e=/(msie|trident)/i.test(navigator.userAgent),r=document.createElement("a"),n;function i(a){var s=a;return e&&(r.setAttribute("href",s),s=r.href),r.setAttribute("href",s),{href:r.href,protocol:r.protocol?r.protocol.replace(/:$/,""):"",host:r.host,search:r.search?r.search.replace(/^\?/,""):"",hash:r.hash?r.hash.replace(/^#/,""):"",hostname:r.hostname,port:r.port,pathname:r.pathname.charAt(0)==="/"?r.pathname:"/"+r.pathname}}return n=i(window.location.href),function(s){var l=pw.isString(s)?i(s):s;return l.protocol===n.protocol&&l.host===n.host}}():function(){return function(){return!0}}();function d1(t){this.message=t}d1.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")};d1.prototype.__CANCEL__=!0;var kh=d1,Qf=Br,HY=bY,MY=qY,OY=q5,zY=LY,YY=WY,CY=UY,Iv=R5,FY=j5,IY=kh,hw=function(e){return new Promise(function(n,i){var a=e.data,s=e.headers,l=e.responseType,c;function f(){e.cancelToken&&e.cancelToken.unsubscribe(c),e.signal&&e.signal.removeEventListener("abort",c)}Qf.isFormData(a)&&delete s["Content-Type"];var p=new XMLHttpRequest;if(e.auth){var h=e.auth.username||"",m=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";s.Authorization="Basic "+btoa(h+":"+m)}var g=zY(e.baseURL,e.url);p.open(e.method.toUpperCase(),OY(g,e.params,e.paramsSerializer),!0),p.timeout=e.timeout;function y(){if(!!p){var q="getAllResponseHeaders"in p?YY(p.getAllResponseHeaders()):null,P=!l||l==="text"||l==="json"?p.responseText:p.response,x={data:P,status:p.status,statusText:p.statusText,headers:q,config:e,request:p};HY(function(j){n(j),f()},function(j){i(j),f()},x),p=null}}if("onloadend"in p?p.onloadend=y:p.onreadystatechange=function(){!p||p.readyState!==4||p.status===0&&!(p.responseURL&&p.responseURL.indexOf("file:")===0)||setTimeout(y)},p.onabort=function(){!p||(i(Iv("Request aborted",e,"ECONNABORTED",p)),p=null)},p.onerror=function(){i(Iv("Network Error",e,null,p)),p=null},p.ontimeout=function(){var P=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded",x=e.transitional||FY;e.timeoutErrorMessage&&(P=e.timeoutErrorMessage),i(Iv(P,e,x.clarifyTimeoutError?"ETIMEDOUT":"ECONNABORTED",p)),p=null},Qf.isStandardBrowserEnv()){var k=(e.withCredentials||CY(g))&&e.xsrfCookieName?MY.read(e.xsrfCookieName):void 0;k&&(s[e.xsrfHeaderName]=k)}"setRequestHeader"in p&&Qf.forEach(s,function(P,x){typeof a=="undefined"&&x.toLowerCase()==="content-type"?delete s[x]:p.setRequestHeader(x,P)}),Qf.isUndefined(e.withCredentials)||(p.withCredentials=!!e.withCredentials),l&&l!=="json"&&(p.responseType=e.responseType),typeof e.onDownloadProgress=="function"&&p.addEventListener("progress",e.onDownloadProgress),typeof e.onUploadProgress=="function"&&p.upload&&p.upload.addEventListener("progress",e.onUploadProgress),(e.cancelToken||e.signal)&&(c=function(q){!p||(i(!q||q&&q.type?new IY("canceled"):q),p.abort(),p=null)},e.cancelToken&&e.cancelToken.subscribe(c),e.signal&&(e.signal.aborted?c():e.signal.addEventListener("abort",c))),a||(a=null),p.send(a)})},ir=Br,mw=PY,EY=T5,JY=j5,DY={"Content-Type":"application/x-www-form-urlencoded"};function vw(t,e){!ir.isUndefined(t)&&ir.isUndefined(t["Content-Type"])&&(t["Content-Type"]=e)}function GY(){var t;return(typeof XMLHttpRequest!="undefined"||typeof process!="undefined"&&Object.prototype.toString.call(process)==="[object process]")&&(t=hw),t}function KY(t,e,r){if(ir.isString(t))try{return(e||JSON.parse)(t),ir.trim(t)}catch(n){if(n.name!=="SyntaxError")throw n}return(r||JSON.stringify)(t)}var bh={transitional:JY,adapter:GY(),transformRequest:[function(e,r){return mw(r,"Accept"),mw(r,"Content-Type"),ir.isFormData(e)||ir.isArrayBuffer(e)||ir.isBuffer(e)||ir.isStream(e)||ir.isFile(e)||ir.isBlob(e)?e:ir.isArrayBufferView(e)?e.buffer:ir.isURLSearchParams(e)?(vw(r,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):ir.isObject(e)||r&&r["Content-Type"]==="application/json"?(vw(r,"application/json"),KY(e)):e}],transformResponse:[function(e){var r=this.transitional||bh.transitional,n=r&&r.silentJSONParsing,i=r&&r.forcedJSONParsing,a=!n&&this.responseType==="json";if(a||i&&ir.isString(e)&&e.length)try{return JSON.parse(e)}catch(s){if(a)throw s.name==="SyntaxError"?EY(s,this,"E_JSON_PARSE"):s}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};ir.forEach(["delete","get","head"],function(e){bh.headers[e]={}});ir.forEach(["post","put","patch"],function(e){bh.headers[e]=ir.merge(DY)});var p1=bh,BY=Br,ZY=p1,XY=function(e,r,n){var i=this||ZY;return BY.forEach(n,function(s){e=s.call(i,e,r)}),e},V5=function(e){return!!(e&&e.__CANCEL__)},yw=Br,Ev=XY,QY=V5,_Y=p1,$Y=kh;function Jv(t){if(t.cancelToken&&t.cancelToken.throwIfRequested(),t.signal&&t.signal.aborted)throw new $Y("canceled")}var e6=function(e){Jv(e),e.headers=e.headers||{},e.data=Ev.call(e,e.data,e.headers,e.transformRequest),e.headers=yw.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),yw.forEach(["delete","get","head","post","put","patch","common"],function(i){delete e.headers[i]});var r=e.adapter||_Y.adapter;return r(e).then(function(i){return Jv(e),i.data=Ev.call(e,i.data,i.headers,e.transformResponse),i},function(i){return QY(i)||(Jv(e),i&&i.response&&(i.response.data=Ev.call(e,i.response.data,i.response.headers,e.transformResponse))),Promise.reject(i)})},$r=Br,L5=function(e,r){r=r||{};var n={};function i(p,h){return $r.isPlainObject(p)&&$r.isPlainObject(h)?$r.merge(p,h):$r.isPlainObject(h)?$r.merge({},h):$r.isArray(h)?h.slice():h}function a(p){if($r.isUndefined(r[p])){if(!$r.isUndefined(e[p]))return i(void 0,e[p])}else return i(e[p],r[p])}function s(p){if(!$r.isUndefined(r[p]))return i(void 0,r[p])}function l(p){if($r.isUndefined(r[p])){if(!$r.isUndefined(e[p]))return i(void 0,e[p])}else return i(void 0,r[p])}function c(p){if(p in r)return i(e[p],r[p]);if(p in e)return i(void 0,e[p])}var f={url:s,method:s,data:s,baseURL:l,transformRequest:l,transformResponse:l,paramsSerializer:l,timeout:l,timeoutMessage:l,withCredentials:l,adapter:l,responseType:l,xsrfCookieName:l,xsrfHeaderName:l,onUploadProgress:l,onDownloadProgress:l,decompress:l,maxContentLength:l,maxBodyLength:l,transport:l,httpAgent:l,httpsAgent:l,cancelToken:l,socketPath:l,responseEncoding:l,validateStatus:c};return $r.forEach(Object.keys(e).concat(Object.keys(r)),function(h){var m=f[h]||a,g=m(h);$r.isUndefined(g)&&m!==c||(n[h]=g)}),n},N5={version:"0.26.1"},t6=N5.version,h1={};["object","boolean","number","function","string","symbol"].forEach(function(t,e){h1[t]=function(n){return typeof n===t||"a"+(e<1?"n ":" ")+t}});var gw={};h1.transitional=function(e,r,n){function i(a,s){return"[Axios v"+t6+"] Transitional option '"+a+"'"+s+(n?". "+n:"")}return function(a,s,l){if(e===!1)throw new Error(i(s," has been removed"+(r?" in "+r:"")));return r&&!gw[s]&&(gw[s]=!0,console.warn(i(s," has been deprecated since v"+r+" and will be removed in the near future"))),e?e(a,s,l):!0}};function r6(t,e,r){if(typeof t!="object")throw new TypeError("options must be an object");for(var n=Object.keys(t),i=n.length;i-- >0;){var a=n[i],s=e[a];if(s){var l=t[a],c=l===void 0||s(l,a,t);if(c!==!0)throw new TypeError("option "+a+" must be "+c);continue}if(r!==!0)throw Error("Unknown option "+a)}}var n6={assertOptions:r6,validators:h1},W5=Br,i6=q5,Aw=SY,Sw=e6,qh=L5,U5=n6,yo=U5.validators;function bc(t){this.defaults=t,this.interceptors={request:new Aw,response:new Aw}}bc.prototype.request=function(e,r){typeof e=="string"?(r=r||{},r.url=e):r=e||{},r=qh(this.defaults,r),r.method?r.method=r.method.toLowerCase():this.defaults.method?r.method=this.defaults.method.toLowerCase():r.method="get";var n=r.transitional;n!==void 0&&U5.assertOptions(n,{silentJSONParsing:yo.transitional(yo.boolean),forcedJSONParsing:yo.transitional(yo.boolean),clarifyTimeoutError:yo.transitional(yo.boolean)},!1);var i=[],a=!0;this.interceptors.request.forEach(function(g){typeof g.runWhen=="function"&&g.runWhen(r)===!1||(a=a&&g.synchronous,i.unshift(g.fulfilled,g.rejected))});var s=[];this.interceptors.response.forEach(function(g){s.push(g.fulfilled,g.rejected)});var l;if(!a){var c=[Sw,void 0];for(Array.prototype.unshift.apply(c,i),c=c.concat(s),l=Promise.resolve(r);c.length;)l=l.then(c.shift(),c.shift());return l}for(var f=r;i.length;){var p=i.shift(),h=i.shift();try{f=p(f)}catch(m){h(m);break}}try{l=Sw(f)}catch(m){return Promise.reject(m)}for(;s.length;)l=l.then(s.shift(),s.shift());return l};bc.prototype.getUri=function(e){return e=qh(this.defaults,e),i6(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")};W5.forEach(["delete","get","head","options"],function(e){bc.prototype[e]=function(r,n){return this.request(qh(n||{},{method:e,url:r,data:(n||{}).data}))}});W5.forEach(["post","put","patch"],function(e){bc.prototype[e]=function(r,n,i){return this.request(qh(i||{},{method:e,url:r,data:n}))}});var a6=bc,s6=kh;function rl(t){if(typeof t!="function")throw new TypeError("executor must be a function.");var e;this.promise=new Promise(function(i){e=i});var r=this;this.promise.then(function(n){if(!!r._listeners){var i,a=r._listeners.length;for(i=0;i<a;i++)r._listeners[i](n);r._listeners=null}}),this.promise.then=function(n){var i,a=new Promise(function(s){r.subscribe(s),i=s}).then(n);return a.cancel=function(){r.unsubscribe(i)},a},t(function(i){r.reason||(r.reason=new s6(i),e(r.reason))})}rl.prototype.throwIfRequested=function(){if(this.reason)throw this.reason};rl.prototype.subscribe=function(e){if(this.reason){e(this.reason);return}this._listeners?this._listeners.push(e):this._listeners=[e]};rl.prototype.unsubscribe=function(e){if(!!this._listeners){var r=this._listeners.indexOf(e);r!==-1&&this._listeners.splice(r,1)}};rl.source=function(){var e,r=new rl(function(i){e=i});return{token:r,cancel:e}};var o6=rl,l6=function(e){return function(n){return e.apply(null,n)}},u6=Br,c6=function(e){return u6.isObject(e)&&e.isAxiosError===!0},xw=Br,f6=P5,Ld=a6,d6=L5,p6=p1;function H5(t){var e=new Ld(t),r=f6(Ld.prototype.request,e);return xw.extend(r,Ld.prototype,e),xw.extend(r,e),r.create=function(i){return H5(d6(t,i))},r}var qi=H5(p6);qi.Axios=Ld;qi.Cancel=kh;qi.CancelToken=o6;qi.isCancel=V5;qi.VERSION=N5.version;qi.all=function(e){return Promise.all(e)};qi.spread=l6;qi.isAxiosError=c6;u1.exports=qi;u1.exports.default=qi;var M5=u1.exports;const h6=({baseUrl:t}={baseUrl:""})=>async({url:e,method:r,data:n,params:i})=>{var s,l;try{const a=await M5({url:t+e,method:r,data:n,params:i}),{data:c}=a,f=LS(a,["data"]);return{data:c,meta:f}}catch(c){const f=c,p=(s=f.response)==null?void 0:s.data;return{error:{status:(l=f.response)==null?void 0:l.status,data:p}}}};var Nd=(t=>(t.JSON="json",t))(Nd||{});const m6="http://ToDo-AWS-Lambda",Fi={serverUrl:m6,getThrowSequenceNextUnlabeled:{httpType:"get",contentType:Nd.JSON,clientRoute:"/api/throwSequences/nextUnlabeled/",serverRoute:"/api/throwSequences/nextUnlabeled/:exceptId"},postThrowSequenceImageLabels:{httpType:"post",contentType:Nd.JSON,clientRoute:"/api/throwSequences/",serverRoute:"/api/throwSequences/:id"},deleteThrowSequence:{httpType:"delete",contentType:Nd.JSON,clientRoute:"/api/throwSequences/",serverRoute:"/api/throwSequences/:id"}},Th=3,Pw=12,ww=4,v6="#ffbf36",O5=4,y6="#ff0000",g6="#00ff00",A6="#00ffea",Sg=[y6,g6,A6],Dv=600,Gv=800,Pp=nY({reducerPath:"labelingApi",baseQuery:h6({baseUrl:Fi.serverUrl}),endpoints:t=>({getThrowSequenceNextUnlabeled:t.query({query:e=>({url:`${Fi.getThrowSequenceNextUnlabeled.clientRoute}${e}`,method:Fi.getThrowSequenceNextUnlabeled.httpType})}),postImageLabels:t.query({query:({throwSequenceId:e,imageLabels:r})=>({url:`${Fi.postThrowSequenceImageLabels.clientRoute}${e}`,method:Fi.postThrowSequenceImageLabels.httpType,data:{imageLabels:r}})})})}),{useGetThrowSequenceNextUnlabeledQuery:S6,usePostImageLabelsQuery:x6}=Pp,P6=n1({collectionNavigationState:cz,labellingNavigationState:fz,appNavigationState:dz,newThrowState:vg.reducer,[Pp.reducerPath]:Pp.reducer}),Tu=t=>p5(t);var m1={},ea={exports:{}};(function(t){function e(r){return r&&r.__esModule?r:{default:r}}t.exports=e,t.exports.__esModule=!0,t.exports.default=t.exports})(ea);var ta={},w6=V2(FH);(function(t){Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"default",{enumerable:!0,get:function(){return e.createSvgIcon}});var e=w6})(ta);var rs=V2(FR),k6=ea.exports;Object.defineProperty(m1,"__esModule",{value:!0});var z5=m1.default=void 0,b6=k6(ta),q6=rs,T6=(0,b6.default)((0,q6.jsx)("path",{d:"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"}),"Add");z5=m1.default=T6;const j6=()=>{const{t}=$O(),e=Ph();return $(yh,{maxWidth:"sm",children:$(Q0,{sx:{display:"flex",alignItems:"center",justifyContent:"center",minHeight:"100vh"},children:$(tn,{variant:"contained",size:"large",startIcon:$(z5,{}),onClick:()=>{e(gp.nextState())},children:t("newThrow")})})})};var v1={},R6=ea.exports;Object.defineProperty(v1,"__esModule",{value:!0});var Y5=v1.default=void 0,V6=R6(ta),L6=rs,N6=(0,V6.default)((0,L6.jsx)("path",{d:"M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z"}),"ArrowForwardIos");Y5=v1.default=N6;var y1={},W6=ea.exports;Object.defineProperty(y1,"__esModule",{value:!0});var C5=y1.default=void 0,U6=W6(ta),H6=rs,M6=(0,U6.default)((0,H6.jsx)("path",{d:"M11.67 3.87 9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z"}),"ArrowBackIos");C5=y1.default=M6;var O6=Math.PI/180;function z6(){return typeof window!="undefined"&&({}.toString.call(window)==="[object Window]"||{}.toString.call(window)==="[object global]")}const Ko=typeof global!="undefined"?global:typeof window!="undefined"?window:typeof WorkerGlobalScope!="undefined"?self:{},ye={_global:Ko,version:"8.3.9",isBrowser:z6(),isUnminified:/param/.test(function(t){}.toString()),dblClickWindow:400,getAngle(t){return ye.angleDeg?t*O6:t},enableTrace:!1,pointerEventsEnabled:!0,autoDrawEnabled:!0,hitOnDragEnabled:!1,capturePointerEventsEnabled:!1,_mouseListenClick:!1,_touchListenClick:!1,_pointerListenClick:!1,_mouseInDblClickWindow:!1,_touchInDblClickWindow:!1,_pointerInDblClickWindow:!1,_mouseDblClickPointerId:null,_touchDblClickPointerId:null,_pointerDblClickPointerId:null,pixelRatio:typeof window!="undefined"&&window.devicePixelRatio||1,dragDistance:3,angleDeg:!0,showWarnings:!0,dragButtons:[0,1],isDragging(){return ye.DD.isDragging},isDragReady(){return!!ye.DD.node},document:Ko.document,_injectGlobal(t){Ko.Konva=t}},bt=t=>{ye[t.prototype.getClassName()]=t};ye._injectGlobal(ye);class rn{constructor(e=[1,0,0,1,0,0]){this.dirty=!1,this.m=e&&e.slice()||[1,0,0,1,0,0]}reset(){this.m[0]=1,this.m[1]=0,this.m[2]=0,this.m[3]=1,this.m[4]=0,this.m[5]=0}copy(){return new rn(this.m)}copyInto(e){e.m[0]=this.m[0],e.m[1]=this.m[1],e.m[2]=this.m[2],e.m[3]=this.m[3],e.m[4]=this.m[4],e.m[5]=this.m[5]}point(e){var r=this.m;return{x:r[0]*e.x+r[2]*e.y+r[4],y:r[1]*e.x+r[3]*e.y+r[5]}}translate(e,r){return this.m[4]+=this.m[0]*e+this.m[2]*r,this.m[5]+=this.m[1]*e+this.m[3]*r,this}scale(e,r){return this.m[0]*=e,this.m[1]*=e,this.m[2]*=r,this.m[3]*=r,this}rotate(e){var r=Math.cos(e),n=Math.sin(e),i=this.m[0]*r+this.m[2]*n,a=this.m[1]*r+this.m[3]*n,s=this.m[0]*-n+this.m[2]*r,l=this.m[1]*-n+this.m[3]*r;return this.m[0]=i,this.m[1]=a,this.m[2]=s,this.m[3]=l,this}getTranslation(){return{x:this.m[4],y:this.m[5]}}skew(e,r){var n=this.m[0]+this.m[2]*r,i=this.m[1]+this.m[3]*r,a=this.m[2]+this.m[0]*e,s=this.m[3]+this.m[1]*e;return this.m[0]=n,this.m[1]=i,this.m[2]=a,this.m[3]=s,this}multiply(e){var r=this.m[0]*e.m[0]+this.m[2]*e.m[1],n=this.m[1]*e.m[0]+this.m[3]*e.m[1],i=this.m[0]*e.m[2]+this.m[2]*e.m[3],a=this.m[1]*e.m[2]+this.m[3]*e.m[3],s=this.m[0]*e.m[4]+this.m[2]*e.m[5]+this.m[4],l=this.m[1]*e.m[4]+this.m[3]*e.m[5]+this.m[5];return this.m[0]=r,this.m[1]=n,this.m[2]=i,this.m[3]=a,this.m[4]=s,this.m[5]=l,this}invert(){var e=1/(this.m[0]*this.m[3]-this.m[1]*this.m[2]),r=this.m[3]*e,n=-this.m[1]*e,i=-this.m[2]*e,a=this.m[0]*e,s=e*(this.m[2]*this.m[5]-this.m[3]*this.m[4]),l=e*(this.m[1]*this.m[4]-this.m[0]*this.m[5]);return this.m[0]=r,this.m[1]=n,this.m[2]=i,this.m[3]=a,this.m[4]=s,this.m[5]=l,this}getMatrix(){return this.m}decompose(){var e=this.m[0],r=this.m[1],n=this.m[2],i=this.m[3],a=this.m[4],s=this.m[5],l=e*i-r*n;let c={x:a,y:s,rotation:0,scaleX:0,scaleY:0,skewX:0,skewY:0};if(e!=0||r!=0){var f=Math.sqrt(e*e+r*r);c.rotation=r>0?Math.acos(e/f):-Math.acos(e/f),c.scaleX=f,c.scaleY=l/f,c.skewX=(e*n+r*i)/l,c.skewY=0}else if(n!=0||i!=0){var p=Math.sqrt(n*n+i*i);c.rotation=Math.PI/2-(i>0?Math.acos(-n/p):-Math.acos(n/p)),c.scaleX=l/p,c.scaleY=p,c.skewX=0,c.skewY=(e*n+r*i)/l}return c.rotation=D._getRotation(c.rotation),c}}var Y6="[object Array]",C6="[object Number]",F6="[object String]",I6="[object Boolean]",E6=Math.PI/180,J6=180/Math.PI,Kv="#",D6="",G6="0",K6="Konva warning: ",kw="Konva error: ",B6="rgb(",Bv={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,132,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,255,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,203],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[119,128,144],slategrey:[119,128,144],snow:[255,255,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],transparent:[255,255,255,0],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,5]},Z6=/rgb\((\d{1,3}),(\d{1,3}),(\d{1,3})\)/,_f=[];const X6=typeof requestAnimationFrame!="undefined"&&requestAnimationFrame||function(t){setTimeout(t,60)},D={_isElement(t){return!!(t&&t.nodeType==1)},_isFunction(t){return!!(t&&t.constructor&&t.call&&t.apply)},_isPlainObject(t){return!!t&&t.constructor===Object},_isArray(t){return Object.prototype.toString.call(t)===Y6},_isNumber(t){return Object.prototype.toString.call(t)===C6&&!isNaN(t)&&isFinite(t)},_isString(t){return Object.prototype.toString.call(t)===F6},_isBoolean(t){return Object.prototype.toString.call(t)===I6},isObject(t){return t instanceof Object},isValidSelector(t){if(typeof t!="string")return!1;var e=t[0];return e==="#"||e==="."||e===e.toUpperCase()},_sign(t){return t===0||t>0?1:-1},requestAnimFrame(t){_f.push(t),_f.length===1&&X6(function(){const e=_f;_f=[],e.forEach(function(r){r()})})},createCanvasElement(){var t=document.createElement("canvas");try{t.style=t.style||{}}catch{}return t},createImageElement(){return document.createElement("img")},_isInDocument(t){for(;t=t.parentNode;)if(t==document)return!0;return!1},_urlToImage(t,e){var r=D.createImageElement();r.onload=function(){e(r)},r.src=t},_rgbToHex(t,e,r){return((1<<24)+(t<<16)+(e<<8)+r).toString(16).slice(1)},_hexToRgb(t){t=t.replace(Kv,D6);var e=parseInt(t,16);return{r:e>>16&255,g:e>>8&255,b:e&255}},getRandomColor(){for(var t=(Math.random()*16777215<<0).toString(16);t.length<6;)t=G6+t;return Kv+t},getRGB(t){var e;return t in Bv?(e=Bv[t],{r:e[0],g:e[1],b:e[2]}):t[0]===Kv?this._hexToRgb(t.substring(1)):t.substr(0,4)===B6?(e=Z6.exec(t.replace(/ /g,"")),{r:parseInt(e[1],10),g:parseInt(e[2],10),b:parseInt(e[3],10)}):{r:0,g:0,b:0}},colorToRGBA(t){return t=t||"black",D._namedColorToRBA(t)||D._hex3ColorToRGBA(t)||D._hex6ColorToRGBA(t)||D._rgbColorToRGBA(t)||D._rgbaColorToRGBA(t)||D._hslColorToRGBA(t)},_namedColorToRBA(t){var e=Bv[t.toLowerCase()];return e?{r:e[0],g:e[1],b:e[2],a:1}:null},_rgbColorToRGBA(t){if(t.indexOf("rgb(")===0){t=t.match(/rgb\(([^)]+)\)/)[1];var e=t.split(/ *, */).map(Number);return{r:e[0],g:e[1],b:e[2],a:1}}},_rgbaColorToRGBA(t){if(t.indexOf("rgba(")===0){t=t.match(/rgba\(([^)]+)\)/)[1];var e=t.split(/ *, */).map((r,n)=>r.slice(-1)==="%"?n===3?parseInt(r)/100:parseInt(r)/100*255:Number(r));return{r:e[0],g:e[1],b:e[2],a:e[3]}}},_hex6ColorToRGBA(t){if(t[0]==="#"&&t.length===7)return{r:parseInt(t.slice(1,3),16),g:parseInt(t.slice(3,5),16),b:parseInt(t.slice(5,7),16),a:1}},_hex3ColorToRGBA(t){if(t[0]==="#"&&t.length===4)return{r:parseInt(t[1]+t[1],16),g:parseInt(t[2]+t[2],16),b:parseInt(t[3]+t[3],16),a:1}},_hslColorToRGBA(t){if(/hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/g.test(t)){const[e,...r]=/hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/g.exec(t),n=Number(r[0])/360,i=Number(r[1])/100,a=Number(r[2])/100;let s,l,c;if(i===0)return c=a*255,{r:Math.round(c),g:Math.round(c),b:Math.round(c),a:1};a<.5?s=a*(1+i):s=a+i-a*i;const f=2*a-s,p=[0,0,0];for(let h=0;h<3;h++)l=n+1/3*-(h-1),l<0&&l++,l>1&&l--,6*l<1?c=f+(s-f)*6*l:2*l<1?c=s:3*l<2?c=f+(s-f)*(2/3-l)*6:c=f,p[h]=c*255;return{r:Math.round(p[0]),g:Math.round(p[1]),b:Math.round(p[2]),a:1}}},haveIntersection(t,e){return!(e.x>t.x+t.width||e.x+e.width<t.x||e.y>t.y+t.height||e.y+e.height<t.y)},cloneObject(t){var e={};for(var r in t)this._isPlainObject(t[r])?e[r]=this.cloneObject(t[r]):this._isArray(t[r])?e[r]=this.cloneArray(t[r]):e[r]=t[r];return e},cloneArray(t){return t.slice(0)},degToRad(t){return t*E6},radToDeg(t){return t*J6},_degToRad(t){return D.warn("Util._degToRad is removed. Please use public Util.degToRad instead."),D.degToRad(t)},_radToDeg(t){return D.warn("Util._radToDeg is removed. Please use public Util.radToDeg instead."),D.radToDeg(t)},_getRotation(t){return ye.angleDeg?D.radToDeg(t):t},_capitalize(t){return t.charAt(0).toUpperCase()+t.slice(1)},throw(t){throw new Error(kw+t)},error(t){console.error(kw+t)},warn(t){!ye.showWarnings||console.warn(K6+t)},each(t,e){for(var r in t)e(r,t[r])},_inRange(t,e,r){return e<=t&&t<r},_getProjectionToSegment(t,e,r,n,i,a){var s,l,c,f=(t-r)*(t-r)+(e-n)*(e-n);if(f==0)s=t,l=e,c=(i-r)*(i-r)+(a-n)*(a-n);else{var p=((i-t)*(r-t)+(a-e)*(n-e))/f;p<0?(s=t,l=e,c=(t-i)*(t-i)+(e-a)*(e-a)):p>1?(s=r,l=n,c=(r-i)*(r-i)+(n-a)*(n-a)):(s=t+p*(r-t),l=e+p*(n-e),c=(s-i)*(s-i)+(l-a)*(l-a))}return[s,l,c]},_getProjectionToLine(t,e,r){var n=D.cloneObject(t),i=Number.MAX_VALUE;return e.forEach(function(a,s){if(!(!r&&s===e.length-1)){var l=e[(s+1)%e.length],c=D._getProjectionToSegment(a.x,a.y,l.x,l.y,t.x,t.y),f=c[0],p=c[1],h=c[2];h<i&&(n.x=f,n.y=p,i=h)}}),n},_prepareArrayForTween(t,e,r){var n,i=[],a=[];if(t.length>e.length){var s=e;e=t,t=s}for(n=0;n<t.length;n+=2)i.push({x:t[n],y:t[n+1]});for(n=0;n<e.length;n+=2)a.push({x:e[n],y:e[n+1]});var l=[];return a.forEach(function(c){var f=D._getProjectionToLine(c,i,r);l.push(f.x),l.push(f.y)}),l},_prepareToStringify(t){var e;t.visitedByCircularReferenceRemoval=!0;for(var r in t)if(!!(t.hasOwnProperty(r)&&t[r]&&typeof t[r]=="object")){if(e=Object.getOwnPropertyDescriptor(t,r),t[r].visitedByCircularReferenceRemoval||D._isElement(t[r]))if(e.configurable)delete t[r];else return null;else if(D._prepareToStringify(t[r])===null)if(e.configurable)delete t[r];else return null}return delete t.visitedByCircularReferenceRemoval,t},_assign(t,e){for(var r in e)t[r]=e[r];return t},_getFirstPointerId(t){return t.touches?t.changedTouches[0].identifier:t.pointerId||999}};function ns(t){return D._isString(t)?'"'+t+'"':Object.prototype.toString.call(t)==="[object Number]"||D._isBoolean(t)?t:Object.prototype.toString.call(t)}function F5(t){return t>255?255:t<0?0:Math.round(t)}function ce(){if(ye.isUnminified)return function(t,e){return D._isNumber(t)||D.warn(ns(t)+' is a not valid value for "'+e+'" attribute. The value should be a number.'),t}}function I5(t){if(ye.isUnminified)return function(e,r){let n=D._isNumber(e),i=D._isArray(e)&&e.length==t;return!n&&!i&&D.warn(ns(e)+' is a not valid value for "'+r+'" attribute. The value should be a number or Array<number>('+t+")"),e}}function g1(){if(ye.isUnminified)return function(t,e){var r=D._isNumber(t),n=t==="auto";return r||n||D.warn(ns(t)+' is a not valid value for "'+e+'" attribute. The value should be a number or "auto".'),t}}function dl(){if(ye.isUnminified)return function(t,e){return D._isString(t)||D.warn(ns(t)+' is a not valid value for "'+e+'" attribute. The value should be a string.'),t}}function E5(){if(ye.isUnminified)return function(t,e){const r=D._isString(t),n=Object.prototype.toString.call(t)==="[object CanvasGradient]"||t&&t.addColorStop;return r||n||D.warn(ns(t)+' is a not valid value for "'+e+'" attribute. The value should be a string or a native gradient.'),t}}function Q6(){if(ye.isUnminified)return function(t,e){return D._isArray(t)?t.forEach(function(r){D._isNumber(r)||D.warn('"'+e+'" attribute has non numeric element '+r+". Make sure that all elements are numbers.")}):D.warn(ns(t)+' is a not valid value for "'+e+'" attribute. The value should be a array of numbers.'),t}}function Qn(){if(ye.isUnminified)return function(t,e){var r=t===!0||t===!1;return r||D.warn(ns(t)+' is a not valid value for "'+e+'" attribute. The value should be a boolean.'),t}}function _6(t){if(ye.isUnminified)return function(e,r){return D.isObject(e)||D.warn(ns(e)+' is a not valid value for "'+r+'" attribute. The value should be an object with properties '+t),e}}var Xl="get",Ql="set";const z={addGetterSetter(t,e,r,n,i){z.addGetter(t,e,r),z.addSetter(t,e,n,i),z.addOverloadedGetterSetter(t,e)},addGetter(t,e,r){var n=Xl+D._capitalize(e);t.prototype[n]=t.prototype[n]||function(){var i=this.attrs[e];return i===void 0?r:i}},addSetter(t,e,r,n){var i=Ql+D._capitalize(e);t.prototype[i]||z.overWriteSetter(t,e,r,n)},overWriteSetter(t,e,r,n){var i=Ql+D._capitalize(e);t.prototype[i]=function(a){return r&&a!==void 0&&a!==null&&(a=r.call(this,a,e)),this._setAttr(e,a),n&&n.call(this),this}},addComponentsGetterSetter(t,e,r,n,i){var a=r.length,s=D._capitalize,l=Xl+s(e),c=Ql+s(e),f,p;t.prototype[l]=function(){var m={};for(f=0;f<a;f++)p=r[f],m[p]=this.getAttr(e+s(p));return m};var h=_6(r);t.prototype[c]=function(m){var g=this.attrs[e],y;n&&(m=n.call(this,m)),h&&h.call(this,m,e);for(y in m)!m.hasOwnProperty(y)||this._setAttr(e+s(y),m[y]);return this._fireChangeEvent(e,g,m),i&&i.call(this),this},z.addOverloadedGetterSetter(t,e)},addOverloadedGetterSetter(t,e){var r=D._capitalize(e),n=Ql+r,i=Xl+r;t.prototype[e]=function(){return arguments.length?(this[n](arguments[0]),this):this[i]()}},addDeprecatedGetterSetter(t,e,r,n){D.error("Adding deprecated "+e);var i=Xl+D._capitalize(e),a=e+" property is deprecated and will be removed soon. Look at Konva change log for more information.";t.prototype[i]=function(){D.error(a);var s=this.attrs[e];return s===void 0?r:s},z.addSetter(t,e,n,function(){D.error(a)}),z.addOverloadedGetterSetter(t,e)},backCompat(t,e){D.each(e,function(r,n){var i=t.prototype[n],a=Xl+D._capitalize(r),s=Ql+D._capitalize(r);function l(){i.apply(this,arguments),D.error('"'+r+'" method is deprecated and will be removed soon. Use ""'+n+'" instead.')}t.prototype[r]=l,t.prototype[a]=l,t.prototype[s]=l})},afterSetFilter(){this._filterUpToDate=!1}};function $6(t){var e=[],r=t.length,n=D,i,a;for(i=0;i<r;i++)a=t[i],n._isNumber(a)?a=Math.round(a*1e3)/1e3:n._isString(a)||(a=a+""),e.push(a);return e}var bw=",",eC="(",tC=")",rC="([",nC="])",iC=";",aC="()",sC="=",qw=["arc","arcTo","beginPath","bezierCurveTo","clearRect","clip","closePath","createLinearGradient","createPattern","createRadialGradient","drawImage","ellipse","fill","fillText","getImageData","createImageData","lineTo","moveTo","putImageData","quadraticCurveTo","rect","restore","rotate","save","scale","setLineDash","setTransform","stroke","strokeText","transform","translate"],oC=["fillStyle","strokeStyle","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","lineCap","lineDashOffset","lineJoin","lineWidth","miterLimit","font","textAlign","textBaseline","globalAlpha","globalCompositeOperation","imageSmoothingEnabled"];const lC=100;class jh{constructor(e){this.canvas=e,this._context=e._canvas.getContext("2d"),ye.enableTrace&&(this.traceArr=[],this._enableTrace())}fillShape(e){e.fillEnabled()&&this._fill(e)}_fill(e){}strokeShape(e){e.hasStroke()&&this._stroke(e)}_stroke(e){}fillStrokeShape(e){e.attrs.fillAfterStrokeEnabled?(this.strokeShape(e),this.fillShape(e)):(this.fillShape(e),this.strokeShape(e))}getTrace(e,r){var n=this.traceArr,i=n.length,a="",s,l,c,f;for(s=0;s<i;s++)l=n[s],c=l.method,c?(f=l.args,a+=c,e?a+=aC:D._isArray(f[0])?a+=rC+f.join(bw)+nC:(r&&(f=f.map(p=>typeof p=="number"?Math.floor(p):p)),a+=eC+f.join(bw)+tC)):(a+=l.property,e||(a+=sC+l.val)),a+=iC;return a}clearTrace(){this.traceArr=[]}_trace(e){var r=this.traceArr,n;r.push(e),n=r.length,n>=lC&&r.shift()}reset(){var e=this.getCanvas().getPixelRatio();this.setTransform(1*e,0,0,1*e,0,0)}getCanvas(){return this.canvas}clear(e){var r=this.getCanvas();e?this.clearRect(e.x||0,e.y||0,e.width||0,e.height||0):this.clearRect(0,0,r.getWidth()/r.pixelRatio,r.getHeight()/r.pixelRatio)}_applyLineCap(e){var r=e.getLineCap();r&&this.setAttr("lineCap",r)}_applyOpacity(e){var r=e.getAbsoluteOpacity();r!==1&&this.setAttr("globalAlpha",r)}_applyLineJoin(e){var r=e.attrs.lineJoin;r&&this.setAttr("lineJoin",r)}setAttr(e,r){this._context[e]=r}arc(e,r,n,i,a,s){this._context.arc(e,r,n,i,a,s)}arcTo(e,r,n,i,a){this._context.arcTo(e,r,n,i,a)}beginPath(){this._context.beginPath()}bezierCurveTo(e,r,n,i,a,s){this._context.bezierCurveTo(e,r,n,i,a,s)}clearRect(e,r,n,i){this._context.clearRect(e,r,n,i)}clip(){this._context.clip()}closePath(){this._context.closePath()}createImageData(e,r){var n=arguments;if(n.length===2)return this._context.createImageData(e,r);if(n.length===1)return this._context.createImageData(e)}createLinearGradient(e,r,n,i){return this._context.createLinearGradient(e,r,n,i)}createPattern(e,r){return this._context.createPattern(e,r)}createRadialGradient(e,r,n,i,a,s){return this._context.createRadialGradient(e,r,n,i,a,s)}drawImage(e,r,n,i,a,s,l,c,f){var p=arguments,h=this._context;p.length===3?h.drawImage(e,r,n):p.length===5?h.drawImage(e,r,n,i,a):p.length===9&&h.drawImage(e,r,n,i,a,s,l,c,f)}ellipse(e,r,n,i,a,s,l,c){this._context.ellipse(e,r,n,i,a,s,l,c)}isPointInPath(e,r){return this._context.isPointInPath(e,r)}fill(e){e?this._context.fill(e):this._context.fill()}fillRect(e,r,n,i){this._context.fillRect(e,r,n,i)}strokeRect(e,r,n,i){this._context.strokeRect(e,r,n,i)}fillText(e,r,n,i){i?this._context.fillText(e,r,n,i):this._context.fillText(e,r,n)}measureText(e){return this._context.measureText(e)}getImageData(e,r,n,i){return this._context.getImageData(e,r,n,i)}lineTo(e,r){this._context.lineTo(e,r)}moveTo(e,r){this._context.moveTo(e,r)}rect(e,r,n,i){this._context.rect(e,r,n,i)}putImageData(e,r,n){this._context.putImageData(e,r,n)}quadraticCurveTo(e,r,n,i){this._context.quadraticCurveTo(e,r,n,i)}restore(){this._context.restore()}rotate(e){this._context.rotate(e)}save(){this._context.save()}scale(e,r){this._context.scale(e,r)}setLineDash(e){this._context.setLineDash?this._context.setLineDash(e):"mozDash"in this._context?this._context.mozDash=e:"webkitLineDash"in this._context&&(this._context.webkitLineDash=e)}getLineDash(){return this._context.getLineDash()}setTransform(e,r,n,i,a,s){this._context.setTransform(e,r,n,i,a,s)}stroke(e){e?this._context.stroke(e):this._context.stroke()}strokeText(e,r,n,i){this._context.strokeText(e,r,n,i)}transform(e,r,n,i,a,s){this._context.transform(e,r,n,i,a,s)}translate(e,r){this._context.translate(e,r)}_enableTrace(){var e=this,r=qw.length,n=this.setAttr,i,a,s=function(l){var c=e[l],f;e[l]=function(){return a=$6(Array.prototype.slice.call(arguments,0)),f=c.apply(e,arguments),e._trace({method:l,args:a}),f}};for(i=0;i<r;i++)s(qw[i]);e.setAttr=function(){n.apply(e,arguments);var l=arguments[0],c=arguments[1];(l==="shadowOffsetX"||l==="shadowOffsetY"||l==="shadowBlur")&&(c=c/this.canvas.getPixelRatio()),e._trace({property:l,val:c})}}_applyGlobalCompositeOperation(e){const r=e.attrs.globalCompositeOperation;var n=!r||r==="source-over";n||this.setAttr("globalCompositeOperation",r)}}oC.forEach(function(t){Object.defineProperty(jh.prototype,t,{get(){return this._context[t]},set(e){this._context[t]=e}})});class uC extends jh{_fillColor(e){var r=e.fill();this.setAttr("fillStyle",r),e._fillFunc(this)}_fillPattern(e){this.setAttr("fillStyle",e._getFillPattern()),e._fillFunc(this)}_fillLinearGradient(e){var r=e._getLinearGradient();r&&(this.setAttr("fillStyle",r),e._fillFunc(this))}_fillRadialGradient(e){var r=e._getRadialGradient();r&&(this.setAttr("fillStyle",r),e._fillFunc(this))}_fill(e){var r=e.fill(),n=e.getFillPriority();if(r&&n==="color"){this._fillColor(e);return}var i=e.getFillPatternImage();if(i&&n==="pattern"){this._fillPattern(e);return}var a=e.getFillLinearGradientColorStops();if(a&&n==="linear-gradient"){this._fillLinearGradient(e);return}var s=e.getFillRadialGradientColorStops();if(s&&n==="radial-gradient"){this._fillRadialGradient(e);return}r?this._fillColor(e):i?this._fillPattern(e):a?this._fillLinearGradient(e):s&&this._fillRadialGradient(e)}_strokeLinearGradient(e){var r=e.getStrokeLinearGradientStartPoint(),n=e.getStrokeLinearGradientEndPoint(),i=e.getStrokeLinearGradientColorStops(),a=this.createLinearGradient(r.x,r.y,n.x,n.y);if(i){for(var s=0;s<i.length;s+=2)a.addColorStop(i[s],i[s+1]);this.setAttr("strokeStyle",a)}}_stroke(e){var r=e.dash(),n=e.getStrokeScaleEnabled();if(e.hasStroke()){if(!n){this.save();var i=this.getCanvas().getPixelRatio();this.setTransform(i,0,0,i,0,0)}this._applyLineCap(e),r&&e.dashEnabled()&&(this.setLineDash(r),this.setAttr("lineDashOffset",e.dashOffset())),this.setAttr("lineWidth",e.strokeWidth()),e.getShadowForStrokeEnabled()||this.setAttr("shadowColor","rgba(0,0,0,0)");var a=e.getStrokeLinearGradientColorStops();a?this._strokeLinearGradient(e):this.setAttr("strokeStyle",e.stroke()),e._strokeFunc(this),n||this.restore()}}_applyShadow(e){var r,n,i,a=(r=e.getShadowRGBA())!==null&&r!==void 0?r:"black",s=(n=e.getShadowBlur())!==null&&n!==void 0?n:5,l=(i=e.getShadowOffset())!==null&&i!==void 0?i:{x:0,y:0},c=e.getAbsoluteScale(),f=this.canvas.getPixelRatio(),p=c.x*f,h=c.y*f;this.setAttr("shadowColor",a),this.setAttr("shadowBlur",s*Math.min(Math.abs(p),Math.abs(h))),this.setAttr("shadowOffsetX",l.x*p),this.setAttr("shadowOffsetY",l.y*h)}}class cC extends jh{_fill(e){this.save(),this.setAttr("fillStyle",e.colorKey),e._fillFuncHit(this),this.restore()}strokeShape(e){e.hasHitStroke()&&this._stroke(e)}_stroke(e){if(e.hasHitStroke()){var r=e.getStrokeScaleEnabled();if(!r){this.save();var n=this.getCanvas().getPixelRatio();this.setTransform(n,0,0,n,0,0)}this._applyLineCap(e);var i=e.hitStrokeWidth(),a=i==="auto"?e.strokeWidth():i;this.setAttr("lineWidth",a),this.setAttr("strokeStyle",e.colorKey),e._strokeFuncHit(this),r||this.restore()}}}var $f;function fC(){if($f)return $f;var t=D.createCanvasElement(),e=t.getContext("2d");return $f=function(){var r=ye._global.devicePixelRatio||1,n=e.webkitBackingStorePixelRatio||e.mozBackingStorePixelRatio||e.msBackingStorePixelRatio||e.oBackingStorePixelRatio||e.backingStorePixelRatio||1;return r/n}(),$f}class Rh{constructor(e){this.pixelRatio=1,this.width=0,this.height=0,this.isCache=!1;var r=e||{},n=r.pixelRatio||ye.pixelRatio||fC();this.pixelRatio=n,this._canvas=D.createCanvasElement(),this._canvas.style.padding="0",this._canvas.style.margin="0",this._canvas.style.border="0",this._canvas.style.background="transparent",this._canvas.style.position="absolute",this._canvas.style.top="0",this._canvas.style.left="0"}getContext(){return this.context}getPixelRatio(){return this.pixelRatio}setPixelRatio(e){var r=this.pixelRatio;this.pixelRatio=e,this.setSize(this.getWidth()/r,this.getHeight()/r)}setWidth(e){this.width=this._canvas.width=e*this.pixelRatio,this._canvas.style.width=e+"px";var r=this.pixelRatio,n=this.getContext()._context;n.scale(r,r)}setHeight(e){this.height=this._canvas.height=e*this.pixelRatio,this._canvas.style.height=e+"px";var r=this.pixelRatio,n=this.getContext()._context;n.scale(r,r)}getWidth(){return this.width}getHeight(){return this.height}setSize(e,r){this.setWidth(e||0),this.setHeight(r||0)}toDataURL(e,r){try{return this._canvas.toDataURL(e,r)}catch{try{return this._canvas.toDataURL()}catch(i){return D.error("Unable to get data URL. "+i.message+" For more info read https://konvajs.org/docs/posts/Tainted_Canvas.html."),""}}}}z.addGetterSetter(Rh,"pixelRatio",void 0,ce());class Bo extends Rh{constructor(e={width:0,height:0}){super(e),this.context=new uC(this),this.setSize(e.width,e.height)}}class A1 extends Rh{constructor(e={width:0,height:0}){super(e),this.hitCanvas=!0,this.context=new cC(this),this.setSize(e.width,e.height)}}const ze={get isDragging(){var t=!1;return ze._dragElements.forEach(e=>{e.dragStatus==="dragging"&&(t=!0)}),t},justDragged:!1,get node(){var t;return ze._dragElements.forEach(e=>{t=e.node}),t},_dragElements:new Map,_drag(t){const e=[];ze._dragElements.forEach((r,n)=>{const{node:i}=r,a=i.getStage();a.setPointersPositions(t),r.pointerId===void 0&&(r.pointerId=D._getFirstPointerId(t));const s=a._changedPointerPositions.find(f=>f.id===r.pointerId);if(!!s){if(r.dragStatus!=="dragging"){var l=i.dragDistance(),c=Math.max(Math.abs(s.x-r.startPointerPos.x),Math.abs(s.y-r.startPointerPos.y));if(c<l||(i.startDrag({evt:t}),!i.isDragging()))return}i._setDragPosition(t,r),e.push(i)}}),e.forEach(r=>{r.fire("dragmove",{type:"dragmove",target:r,evt:t},!0)})},_endDragBefore(t){ze._dragElements.forEach(e=>{const{node:r}=e,n=r.getStage();if(t&&n.setPointersPositions(t),!n._changedPointerPositions.find(s=>s.id===e.pointerId))return;(e.dragStatus==="dragging"||e.dragStatus==="stopped")&&(ze.justDragged=!0,ye._mouseListenClick=!1,ye._touchListenClick=!1,ye._pointerListenClick=!1,e.dragStatus="stopped");const a=e.node.getLayer()||e.node instanceof ye.Stage&&e.node;a&&a.batchDraw()})},_endDragAfter(t){ze._dragElements.forEach((e,r)=>{e.dragStatus==="stopped"&&e.node.fire("dragend",{type:"dragend",target:e.node,evt:t},!0),e.dragStatus!=="dragging"&&ze._dragElements.delete(r)})}};ye.isBrowser&&(window.addEventListener("mouseup",ze._endDragBefore,!0),window.addEventListener("touchend",ze._endDragBefore,!0),window.addEventListener("mousemove",ze._drag),window.addEventListener("touchmove",ze._drag),window.addEventListener("mouseup",ze._endDragAfter,!1),window.addEventListener("touchend",ze._endDragAfter,!1));var Wd="absoluteOpacity",ed="allEventListeners",Oi="absoluteTransform",Tw="absoluteScale",_l="canvas",dC="Change",pC="children",hC="konva",xg="listening",jw="mouseenter",Rw="mouseleave",Vw="set",Lw="Shape",Ud=" ",Nw="stage",Sa="transform",mC="Stage",Pg="visible",vC=["xChange.konva","yChange.konva","scaleXChange.konva","scaleYChange.konva","skewXChange.konva","skewYChange.konva","rotationChange.konva","offsetXChange.konva","offsetYChange.konva","transformsEnabledChange.konva"].join(Ud);let yC=1;class fe{constructor(e){this._id=yC++,this.eventListeners={},this.attrs={},this.index=0,this._allEventListeners=null,this.parent=null,this._cache=new Map,this._attachedDepsListeners=new Map,this._lastPos=null,this._batchingTransformChange=!1,this._needClearTransformCache=!1,this._filterUpToDate=!1,this._isUnderCache=!1,this._dragEventId=null,this._shouldFireChangeEvents=!1,this.setAttrs(e),this._shouldFireChangeEvents=!0}hasChildren(){return!1}_clearCache(e){(e===Sa||e===Oi)&&this._cache.get(e)?this._cache.get(e).dirty=!0:e?this._cache.delete(e):this._cache.clear()}_getCache(e,r){var n=this._cache.get(e),i=e===Sa||e===Oi,a=n===void 0||i&&n.dirty===!0;return a&&(n=r.call(this),this._cache.set(e,n)),n}_calculate(e,r,n){if(!this._attachedDepsListeners.get(e)){const i=r.map(a=>a+"Change.konva").join(Ud);this.on(i,()=>{this._clearCache(e)}),this._attachedDepsListeners.set(e,!0)}return this._getCache(e,n)}_getCanvasCache(){return this._cache.get(_l)}_clearSelfAndDescendantCache(e){this._clearCache(e),e===Oi&&this.fire("absoluteTransformChange")}clearCache(){return this._cache.delete(_l),this._clearSelfAndDescendantCache(),this._requestDraw(),this}cache(e){var r=e||{},n={};(r.x===void 0||r.y===void 0||r.width===void 0||r.height===void 0)&&(n=this.getClientRect({skipTransform:!0,relativeTo:this.getParent()}));var i=Math.ceil(r.width||n.width),a=Math.ceil(r.height||n.height),s=r.pixelRatio,l=r.x===void 0?Math.floor(n.x):r.x,c=r.y===void 0?Math.floor(n.y):r.y,f=r.offset||0,p=r.drawBorder||!1,h=r.hitCanvasPixelRatio||1;if(!i||!a){D.error("Can not cache the node. Width or height of the node equals 0. Caching is skipped.");return}i+=f*2+1,a+=f*2+1,l-=f,c-=f;var m=new Bo({pixelRatio:s,width:i,height:a}),g=new Bo({pixelRatio:s,width:0,height:0}),y=new A1({pixelRatio:h,width:i,height:a}),k=m.getContext(),q=y.getContext();return y.isCache=!0,m.isCache=!0,this._cache.delete(_l),this._filterUpToDate=!1,r.imageSmoothingEnabled===!1&&(m.getContext()._context.imageSmoothingEnabled=!1,g.getContext()._context.imageSmoothingEnabled=!1),k.save(),q.save(),k.translate(-l,-c),q.translate(-l,-c),this._isUnderCache=!0,this._clearSelfAndDescendantCache(Wd),this._clearSelfAndDescendantCache(Tw),this.drawScene(m,this),this.drawHit(y,this),this._isUnderCache=!1,k.restore(),q.restore(),p&&(k.save(),k.beginPath(),k.rect(0,0,i,a),k.closePath(),k.setAttr("strokeStyle","red"),k.setAttr("lineWidth",5),k.stroke(),k.restore()),this._cache.set(_l,{scene:m,filter:g,hit:y,x:l,y:c}),this._requestDraw(),this}isCached(){return this._cache.has(_l)}getClientRect(e){throw new Error('abstract "getClientRect" method call')}_transformedRect(e,r){var n=[{x:e.x,y:e.y},{x:e.x+e.width,y:e.y},{x:e.x+e.width,y:e.y+e.height},{x:e.x,y:e.y+e.height}],i,a,s,l,c=this.getAbsoluteTransform(r);return n.forEach(function(f){var p=c.point(f);i===void 0&&(i=s=p.x,a=l=p.y),i=Math.min(i,p.x),a=Math.min(a,p.y),s=Math.max(s,p.x),l=Math.max(l,p.y)}),{x:i,y:a,width:s-i,height:l-a}}_drawCachedSceneCanvas(e){e.save(),e._applyOpacity(this),e._applyGlobalCompositeOperation(this);const r=this._getCanvasCache();e.translate(r.x,r.y);var n=this._getCachedSceneCanvas(),i=n.pixelRatio;e.drawImage(n._canvas,0,0,n.width/i,n.height/i),e.restore()}_drawCachedHitCanvas(e){var r=this._getCanvasCache(),n=r.hit;e.save(),e.translate(r.x,r.y),e.drawImage(n._canvas,0,0,n.width/n.pixelRatio,n.height/n.pixelRatio),e.restore()}_getCachedSceneCanvas(){var e=this.filters(),r=this._getCanvasCache(),n=r.scene,i=r.filter,a=i.getContext(),s,l,c,f;if(e){if(!this._filterUpToDate){var p=n.pixelRatio;i.setSize(n.width/n.pixelRatio,n.height/n.pixelRatio);try{for(s=e.length,a.clear(),a.drawImage(n._canvas,0,0,n.getWidth()/p,n.getHeight()/p),l=a.getImageData(0,0,i.getWidth(),i.getHeight()),c=0;c<s;c++){if(f=e[c],typeof f!="function"){D.error("Filter should be type of function, but got "+typeof f+" instead. Please check correct filters");continue}f.call(this,l),a.putImageData(l,0,0)}}catch(h){D.error("Unable to apply filter. "+h.message+" This post my help you https://konvajs.org/docs/posts/Tainted_Canvas.html.")}this._filterUpToDate=!0}return i}return n}on(e,r){if(this._cache&&this._cache.delete(ed),arguments.length===3)return this._delegate.apply(this,arguments);var n=e.split(Ud),i=n.length,a,s,l,c,f;for(a=0;a<i;a++)s=n[a],l=s.split("."),c=l[0],f=l[1]||"",this.eventListeners[c]||(this.eventListeners[c]=[]),this.eventListeners[c].push({name:f,handler:r});return this}off(e,r){var n=(e||"").split(Ud),i=n.length,a,s,l,c,f,p;if(this._cache&&this._cache.delete(ed),!e)for(s in this.eventListeners)this._off(s);for(a=0;a<i;a++)if(l=n[a],c=l.split("."),f=c[0],p=c[1],f)this.eventListeners[f]&&this._off(f,p,r);else for(s in this.eventListeners)this._off(s,p,r);return this}dispatchEvent(e){var r={target:this,type:e.type,evt:e};return this.fire(e.type,r),this}addEventListener(e,r){return this.on(e,function(n){r.call(this,n.evt)}),this}removeEventListener(e){return this.off(e),this}_delegate(e,r,n){var i=this;this.on(e,function(a){for(var s=a.target.findAncestors(r,!0,i),l=0;l<s.length;l++)a=D.cloneObject(a),a.currentTarget=s[l],n.call(s[l],a)})}remove(){return this.isDragging()&&this.stopDrag(),ze._dragElements.delete(this._id),this._remove(),this}_clearCaches(){this._clearSelfAndDescendantCache(Oi),this._clearSelfAndDescendantCache(Wd),this._clearSelfAndDescendantCache(Tw),this._clearSelfAndDescendantCache(Nw),this._clearSelfAndDescendantCache(Pg),this._clearSelfAndDescendantCache(xg)}_remove(){this._clearCaches();var e=this.getParent();e&&e.children&&(e.children.splice(this.index,1),e._setChildrenIndices(),this.parent=null)}destroy(){return this.remove(),this}getAttr(e){var r="get"+D._capitalize(e);return D._isFunction(this[r])?this[r]():this.attrs[e]}getAncestors(){for(var e=this.getParent(),r=[];e;)r.push(e),e=e.getParent();return r}getAttrs(){return this.attrs||{}}setAttrs(e){return this._batchTransformChanges(()=>{var r,n;if(!e)return this;for(r in e)r!==pC&&(n=Vw+D._capitalize(r),D._isFunction(this[n])?this[n](e[r]):this._setAttr(r,e[r]))}),this}isListening(){return this._getCache(xg,this._isListening)}_isListening(e){if(!this.listening())return!1;const n=this.getParent();return n&&n!==e&&this!==e?n._isListening(e):!0}isVisible(){return this._getCache(Pg,this._isVisible)}_isVisible(e){if(!this.visible())return!1;const n=this.getParent();return n&&n!==e&&this!==e?n._isVisible(e):!0}shouldDrawHit(e,r=!1){if(e)return this._isVisible(e)&&this._isListening(e);var n=this.getLayer(),i=!1;ze._dragElements.forEach(s=>{s.dragStatus==="dragging"&&(s.node.nodeType==="Stage"||s.node.getLayer()===n)&&(i=!0)});var a=!r&&!ye.hitOnDragEnabled&&i;return this.isListening()&&this.isVisible()&&!a}show(){return this.visible(!0),this}hide(){return this.visible(!1),this}getZIndex(){return this.index||0}getAbsoluteZIndex(){var e=this.getDepth(),r=this,n=0,i,a,s,l;function c(f){for(i=[],a=f.length,s=0;s<a;s++)l=f[s],n++,l.nodeType!==Lw&&(i=i.concat(l.getChildren().slice())),l._id===r._id&&(s=a);i.length>0&&i[0].getDepth()<=e&&c(i)}return r.nodeType!==mC&&c(r.getStage().getChildren()),n}getDepth(){for(var e=0,r=this.parent;r;)e++,r=r.parent;return e}_batchTransformChanges(e){this._batchingTransformChange=!0,e(),this._batchingTransformChange=!1,this._needClearTransformCache&&(this._clearCache(Sa),this._clearSelfAndDescendantCache(Oi)),this._needClearTransformCache=!1}setPosition(e){return this._batchTransformChanges(()=>{this.x(e.x),this.y(e.y)}),this}getPosition(){return{x:this.x(),y:this.y()}}getRelativePointerPosition(){if(!this.getStage())return null;var e=this.getStage().getPointerPosition();if(!e)return null;var r=this.getAbsoluteTransform().copy();return r.invert(),r.point(e)}getAbsolutePosition(e){let r=!1,n=this.parent;for(;n;){if(n.isCached()){r=!0;break}n=n.parent}r&&!e&&(e=!0);var i=this.getAbsoluteTransform(e).getMatrix(),a=new rn,s=this.offset();return a.m=i.slice(),a.translate(s.x,s.y),a.getTranslation()}setAbsolutePosition(e){var r=this._clearTransform();this.attrs.x=r.x,this.attrs.y=r.y,delete r.x,delete r.y,this._clearCache(Sa);var n=this._getAbsoluteTransform().copy();return n.invert(),n.translate(e.x,e.y),e={x:this.attrs.x+n.getTranslation().x,y:this.attrs.y+n.getTranslation().y},this._setTransform(r),this.setPosition({x:e.x,y:e.y}),this._clearCache(Sa),this._clearSelfAndDescendantCache(Oi),this}_setTransform(e){var r;for(r in e)this.attrs[r]=e[r]}_clearTransform(){var e={x:this.x(),y:this.y(),rotation:this.rotation(),scaleX:this.scaleX(),scaleY:this.scaleY(),offsetX:this.offsetX(),offsetY:this.offsetY(),skewX:this.skewX(),skewY:this.skewY()};return this.attrs.x=0,this.attrs.y=0,this.attrs.rotation=0,this.attrs.scaleX=1,this.attrs.scaleY=1,this.attrs.offsetX=0,this.attrs.offsetY=0,this.attrs.skewX=0,this.attrs.skewY=0,e}move(e){var r=e.x,n=e.y,i=this.x(),a=this.y();return r!==void 0&&(i+=r),n!==void 0&&(a+=n),this.setPosition({x:i,y:a}),this}_eachAncestorReverse(e,r){var n=[],i=this.getParent(),a,s;if(!(r&&r._id===this._id)){for(n.unshift(this);i&&(!r||i._id!==r._id);)n.unshift(i),i=i.parent;for(a=n.length,s=0;s<a;s++)e(n[s])}}rotate(e){return this.rotation(this.rotation()+e),this}moveToTop(){if(!this.parent)return D.warn("Node has no parent. moveToTop function is ignored."),!1;var e=this.index,r=this.parent.getChildren().length;return e<r-1?(this.parent.children.splice(e,1),this.parent.children.push(this),this.parent._setChildrenIndices(),!0):!1}moveUp(){if(!this.parent)return D.warn("Node has no parent. moveUp function is ignored."),!1;var e=this.index,r=this.parent.getChildren().length;return e<r-1?(this.parent.children.splice(e,1),this.parent.children.splice(e+1,0,this),this.parent._setChildrenIndices(),!0):!1}moveDown(){if(!this.parent)return D.warn("Node has no parent. moveDown function is ignored."),!1;var e=this.index;return e>0?(this.parent.children.splice(e,1),this.parent.children.splice(e-1,0,this),this.parent._setChildrenIndices(),!0):!1}moveToBottom(){if(!this.parent)return D.warn("Node has no parent. moveToBottom function is ignored."),!1;var e=this.index;return e>0?(this.parent.children.splice(e,1),this.parent.children.unshift(this),this.parent._setChildrenIndices(),!0):!1}setZIndex(e){if(!this.parent)return D.warn("Node has no parent. zIndex parameter is ignored."),this;(e<0||e>=this.parent.children.length)&&D.warn("Unexpected value "+e+" for zIndex property. zIndex is just index of a node in children of its parent. Expected value is from 0 to "+(this.parent.children.length-1)+".");var r=this.index;return this.parent.children.splice(r,1),this.parent.children.splice(e,0,this),this.parent._setChildrenIndices(),this}getAbsoluteOpacity(){return this._getCache(Wd,this._getAbsoluteOpacity)}_getAbsoluteOpacity(){var e=this.opacity(),r=this.getParent();return r&&!r._isUnderCache&&(e*=r.getAbsoluteOpacity()),e}moveTo(e){return this.getParent()!==e&&(this._remove(),e.add(this)),this}toObject(){var e={},r=this.getAttrs(),n,i,a,s,l;e.attrs={};for(n in r)i=r[n],l=D.isObject(i)&&!D._isPlainObject(i)&&!D._isArray(i),!l&&(a=typeof this[n]=="function"&&this[n],delete r[n],s=a?a.call(this):null,r[n]=i,s!==i&&(e.attrs[n]=i));return e.className=this.getClassName(),D._prepareToStringify(e)}toJSON(){return JSON.stringify(this.toObject())}getParent(){return this.parent}findAncestors(e,r,n){var i=[];r&&this._isMatch(e)&&i.push(this);for(var a=this.parent;a;){if(a===n)return i;a._isMatch(e)&&i.push(a),a=a.parent}return i}isAncestorOf(e){return!1}findAncestor(e,r,n){return this.findAncestors(e,r,n)[0]}_isMatch(e){if(!e)return!1;if(typeof e=="function")return e(this);var r=e.replace(/ /g,"").split(","),n=r.length,i,a;for(i=0;i<n;i++)if(a=r[i],D.isValidSelector(a)||(D.warn('Selector "'+a+'" is invalid. Allowed selectors examples are "#foo", ".bar" or "Group".'),D.warn('If you have a custom shape with such className, please change it to start with upper letter like "Triangle".'),D.warn("Konva is awesome, right?")),a.charAt(0)==="#"){if(this.id()===a.slice(1))return!0}else if(a.charAt(0)==="."){if(this.hasName(a.slice(1)))return!0}else if(this.className===a||this.nodeType===a)return!0;return!1}getLayer(){var e=this.getParent();return e?e.getLayer():null}getStage(){return this._getCache(Nw,this._getStage)}_getStage(){var e=this.getParent();if(e)return e.getStage()}fire(e,r={},n){return r.target=r.target||this,n?this._fireAndBubble(e,r):this._fire(e,r),this}getAbsoluteTransform(e){return e?this._getAbsoluteTransform(e):this._getCache(Oi,this._getAbsoluteTransform)}_getAbsoluteTransform(e){var r;if(e)return r=new rn,this._eachAncestorReverse(function(i){var a=i.transformsEnabled();a==="all"?r.multiply(i.getTransform()):a==="position"&&r.translate(i.x()-i.offsetX(),i.y()-i.offsetY())},e),r;r=this._cache.get(Oi)||new rn,this.parent?this.parent.getAbsoluteTransform().copyInto(r):r.reset();var n=this.transformsEnabled();if(n==="all")r.multiply(this.getTransform());else if(n==="position"){const i=this.attrs.x||0,a=this.attrs.y||0,s=this.attrs.offsetX||0,l=this.attrs.offsetY||0;r.translate(i-s,a-l)}return r.dirty=!1,r}getAbsoluteScale(e){for(var r=this;r;)r._isUnderCache&&(e=r),r=r.getParent();const i=this.getAbsoluteTransform(e).decompose();return{x:i.scaleX,y:i.scaleY}}getAbsoluteRotation(){return this.getAbsoluteTransform().decompose().rotation}getTransform(){return this._getCache(Sa,this._getTransform)}_getTransform(){var e,r,n=this._cache.get(Sa)||new rn;n.reset();var i=this.x(),a=this.y(),s=ye.getAngle(this.rotation()),l=(e=this.attrs.scaleX)!==null&&e!==void 0?e:1,c=(r=this.attrs.scaleY)!==null&&r!==void 0?r:1,f=this.attrs.skewX||0,p=this.attrs.skewY||0,h=this.attrs.offsetX||0,m=this.attrs.offsetY||0;return(i!==0||a!==0)&&n.translate(i,a),s!==0&&n.rotate(s),(f!==0||p!==0)&&n.skew(f,p),(l!==1||c!==1)&&n.scale(l,c),(h!==0||m!==0)&&n.translate(-1*h,-1*m),n.dirty=!1,n}clone(e){var r=D.cloneObject(this.attrs),n,i,a,s,l;for(n in e)r[n]=e[n];var c=new this.constructor(r);for(n in this.eventListeners)for(i=this.eventListeners[n],a=i.length,s=0;s<a;s++)l=i[s],l.name.indexOf(hC)<0&&(c.eventListeners[n]||(c.eventListeners[n]=[]),c.eventListeners[n].push(l));return c}_toKonvaCanvas(e){e=e||{};var r=this.getClientRect(),n=this.getStage(),i=e.x!==void 0?e.x:Math.floor(r.x),a=e.y!==void 0?e.y:Math.floor(r.y),s=e.pixelRatio||1,l=new Bo({width:e.width||Math.ceil(r.width)||(n?n.width():0),height:e.height||Math.ceil(r.height)||(n?n.height():0),pixelRatio:s}),c=l.getContext();return e.imageSmoothingEnabled===!1&&(c._context.imageSmoothingEnabled=!1),c.save(),(i||a)&&c.translate(-1*i,-1*a),this.drawScene(l),c.restore(),l}toCanvas(e){return this._toKonvaCanvas(e)._canvas}toDataURL(e){e=e||{};var r=e.mimeType||null,n=e.quality||null,i=this._toKonvaCanvas(e).toDataURL(r,n);return e.callback&&e.callback(i),i}toImage(e){if(!e||!e.callback)throw"callback required for toImage method config argument";var r=e.callback;delete e.callback,D._urlToImage(this.toDataURL(e),function(n){r(n)})}setSize(e){return this.width(e.width),this.height(e.height),this}getSize(){return{width:this.width(),height:this.height()}}getClassName(){return this.className||this.nodeType}getType(){return this.nodeType}getDragDistance(){return this.attrs.dragDistance!==void 0?this.attrs.dragDistance:this.parent?this.parent.getDragDistance():ye.dragDistance}_off(e,r,n){var i=this.eventListeners[e],a,s,l;for(a=0;a<i.length;a++)if(s=i[a].name,l=i[a].handler,(s!=="konva"||r==="konva")&&(!r||s===r)&&(!n||n===l)){if(i.splice(a,1),i.length===0){delete this.eventListeners[e];break}a--}}_fireChangeEvent(e,r,n){this._fire(e+dC,{oldVal:r,newVal:n})}addName(e){if(!this.hasName(e)){var r=this.name(),n=r?r+" "+e:e;this.name(n)}return this}hasName(e){if(!e)return!1;const r=this.name();if(!r)return!1;var n=(r||"").split(/\s/g);return n.indexOf(e)!==-1}removeName(e){var r=(this.name()||"").split(/\s/g),n=r.indexOf(e);return n!==-1&&(r.splice(n,1),this.name(r.join(" "))),this}setAttr(e,r){var n=this[Vw+D._capitalize(e)];return D._isFunction(n)?n.call(this,r):this._setAttr(e,r),this}_requestDraw(){if(ye.autoDrawEnabled){const e=this.getLayer()||this.getStage();e==null||e.batchDraw()}}_setAttr(e,r){var n=this.attrs[e];n===r&&!D.isObject(r)||(r==null?delete this.attrs[e]:this.attrs[e]=r,this._shouldFireChangeEvents&&this._fireChangeEvent(e,n,r),this._requestDraw())}_setComponentAttr(e,r,n){var i;n!==void 0&&(i=this.attrs[e],i||(this.attrs[e]=this.getAttr(e)),this.attrs[e][r]=n,this._fireChangeEvent(e,i,n))}_fireAndBubble(e,r,n){r&&this.nodeType===Lw&&(r.target=this);var i=(e===jw||e===Rw)&&(n&&(this===n||this.isAncestorOf&&this.isAncestorOf(n))||this.nodeType==="Stage"&&!n);if(!i){this._fire(e,r);var a=(e===jw||e===Rw)&&n&&n.isAncestorOf&&n.isAncestorOf(this)&&!n.isAncestorOf(this.parent);(r&&!r.cancelBubble||!r)&&this.parent&&this.parent.isListening()&&!a&&(n&&n.parent?this._fireAndBubble.call(this.parent,e,r,n):this._fireAndBubble.call(this.parent,e,r))}}_getProtoListeners(e){let r=this._cache.get(ed);if(!r){r={};let i=Object.getPrototypeOf(this);for(;i;){if(!i.eventListeners){i=Object.getPrototypeOf(i);continue}for(var n in i.eventListeners){const a=i.eventListeners[n],s=r[n]||[];r[n]=a.concat(s)}i=Object.getPrototypeOf(i)}this._cache.set(ed,r)}return r[e]}_fire(e,r){r=r||{},r.currentTarget=this,r.type=e;const n=this._getProtoListeners(e);if(n)for(var i=0;i<n.length;i++)n[i].handler.call(this,r);const a=this.eventListeners[e];if(a)for(var i=0;i<a.length;i++)a[i].handler.call(this,r)}draw(){return this.drawScene(),this.drawHit(),this}_createDragElement(e){var r=e?e.pointerId:void 0,n=this.getStage(),i=this.getAbsolutePosition(),a=n._getPointerById(r)||n._changedPointerPositions[0]||i;ze._dragElements.set(this._id,{node:this,startPointerPos:a,offset:{x:a.x-i.x,y:a.y-i.y},dragStatus:"ready",pointerId:r})}startDrag(e,r=!0){ze._dragElements.has(this._id)||this._createDragElement(e);const n=ze._dragElements.get(this._id);n.dragStatus="dragging",this.fire("dragstart",{type:"dragstart",target:this,evt:e&&e.evt},r)}_setDragPosition(e,r){const n=this.getStage()._getPointerById(r.pointerId);if(!!n){var i={x:n.x-r.offset.x,y:n.y-r.offset.y},a=this.dragBoundFunc();if(a!==void 0){const s=a.call(this,i,e);s?i=s:D.warn("dragBoundFunc did not return any value. That is unexpected behavior. You must return new absolute position from dragBoundFunc.")}(!this._lastPos||this._lastPos.x!==i.x||this._lastPos.y!==i.y)&&(this.setAbsolutePosition(i),this._requestDraw()),this._lastPos=i}}stopDrag(e){const r=ze._dragElements.get(this._id);r&&(r.dragStatus="stopped"),ze._endDragBefore(e),ze._endDragAfter(e)}setDraggable(e){this._setAttr("draggable",e),this._dragChange()}isDragging(){const e=ze._dragElements.get(this._id);return e?e.dragStatus==="dragging":!1}_listenDrag(){this._dragCleanup(),this.on("mousedown.konva touchstart.konva",function(e){var r=e.evt.button!==void 0,n=!r||ye.dragButtons.indexOf(e.evt.button)>=0;if(!!n&&!this.isDragging()){var i=!1;ze._dragElements.forEach(a=>{this.isAncestorOf(a.node)&&(i=!0)}),i||this._createDragElement(e)}})}_dragChange(){if(this.attrs.draggable)this._listenDrag();else{this._dragCleanup();var e=this.getStage();if(!e)return;const r=ze._dragElements.get(this._id),n=r&&r.dragStatus==="dragging",i=r&&r.dragStatus==="ready";n?this.stopDrag():i&&ze._dragElements.delete(this._id)}}_dragCleanup(){this.off("mousedown.konva"),this.off("touchstart.konva")}isClientRectOnScreen(e={x:0,y:0}){const r=this.getStage();if(!r)return!1;const n={x:-e.x,y:-e.y,width:r.width()+2*e.x,height:r.height()+2*e.y};return D.haveIntersection(n,this.getClientRect())}static create(e,r){return D._isString(e)&&(e=JSON.parse(e)),this._createNode(e,r)}static _createNode(e,r){var n=fe.prototype.getClassName.call(e),i=e.children,a,s,l;r&&(e.attrs.container=r),ye[n]||(D.warn('Can not find a node with class name "'+n+'". Fallback to "Shape".'),n="Shape");const c=ye[n];if(a=new c(e.attrs),i)for(s=i.length,l=0;l<s;l++)a.add(fe._createNode(i[l]));return a}}fe.prototype.nodeType="Node";fe.prototype._attrsAffectingSize=[];fe.prototype.eventListeners={};fe.prototype.on.call(fe.prototype,vC,function(){if(this._batchingTransformChange){this._needClearTransformCache=!0;return}this._clearCache(Sa),this._clearSelfAndDescendantCache(Oi)});fe.prototype.on.call(fe.prototype,"visibleChange.konva",function(){this._clearSelfAndDescendantCache(Pg)});fe.prototype.on.call(fe.prototype,"listeningChange.konva",function(){this._clearSelfAndDescendantCache(xg)});fe.prototype.on.call(fe.prototype,"opacityChange.konva",function(){this._clearSelfAndDescendantCache(Wd)});const Qe=z.addGetterSetter;Qe(fe,"zIndex");Qe(fe,"absolutePosition");Qe(fe,"position");Qe(fe,"x",0,ce());Qe(fe,"y",0,ce());Qe(fe,"globalCompositeOperation","source-over",dl());Qe(fe,"opacity",1,ce());Qe(fe,"name","",dl());Qe(fe,"id","",dl());Qe(fe,"rotation",0,ce());z.addComponentsGetterSetter(fe,"scale",["x","y"]);Qe(fe,"scaleX",1,ce());Qe(fe,"scaleY",1,ce());z.addComponentsGetterSetter(fe,"skew",["x","y"]);Qe(fe,"skewX",0,ce());Qe(fe,"skewY",0,ce());z.addComponentsGetterSetter(fe,"offset",["x","y"]);Qe(fe,"offsetX",0,ce());Qe(fe,"offsetY",0,ce());Qe(fe,"dragDistance",null,ce());Qe(fe,"width",0,ce());Qe(fe,"height",0,ce());Qe(fe,"listening",!0,Qn());Qe(fe,"preventDefault",!0,Qn());Qe(fe,"filters",null,function(t){return this._filterUpToDate=!1,t});Qe(fe,"visible",!0,Qn());Qe(fe,"transformsEnabled","all",dl());Qe(fe,"size");Qe(fe,"dragBoundFunc");Qe(fe,"draggable",!1,Qn());z.backCompat(fe,{rotateDeg:"rotate",setRotationDeg:"setRotation",getRotationDeg:"getRotation"});class sn extends fe{constructor(){super(...arguments),this.children=[]}getChildren(e){if(!e)return this.children||[];const r=this.children||[];var n=[];return r.forEach(function(i){e(i)&&n.push(i)}),n}hasChildren(){return this.getChildren().length>0}removeChildren(){return this.getChildren().forEach(e=>{e.parent=null,e.index=0,e.remove()}),this.children=[],this._requestDraw(),this}destroyChildren(){return this.getChildren().forEach(e=>{e.parent=null,e.index=0,e.destroy()}),this.children=[],this._requestDraw(),this}add(...e){if(arguments.length>1){for(var r=0;r<arguments.length;r++)this.add(arguments[r]);return this}var n=e[0];return n.getParent()?(n.moveTo(this),this):(this._validateAdd(n),n.index=this.getChildren().length,n.parent=this,n._clearCaches(),this.getChildren().push(n),this._fire("add",{child:n}),this._requestDraw(),this)}destroy(){return this.hasChildren()&&this.destroyChildren(),super.destroy(),this}find(e){return this._generalFind(e,!1)}findOne(e){var r=this._generalFind(e,!0);return r.length>0?r[0]:void 0}_generalFind(e,r){var n=[];return this._descendants(i=>{const a=i._isMatch(e);return a&&n.push(i),!!(a&&r)}),n}_descendants(e){let r=!1;const n=this.getChildren();for(const i of n){if(r=e(i),r)return!0;if(!!i.hasChildren()&&(r=i._descendants(e),r))return!0}return!1}toObject(){var e=fe.prototype.toObject.call(this);return e.children=[],this.getChildren().forEach(r=>{e.children.push(r.toObject())}),e}isAncestorOf(e){for(var r=e.getParent();r;){if(r._id===this._id)return!0;r=r.getParent()}return!1}clone(e){var r=fe.prototype.clone.call(this,e);return this.getChildren().forEach(function(n){r.add(n.clone())}),r}getAllIntersections(e){var r=[];return this.find("Shape").forEach(function(n){n.isVisible()&&n.intersects(e)&&r.push(n)}),r}_clearSelfAndDescendantCache(e){var r;super._clearSelfAndDescendantCache(e),!this.isCached()&&((r=this.children)===null||r===void 0||r.forEach(function(n){n._clearSelfAndDescendantCache(e)}))}_setChildrenIndices(){var e;(e=this.children)===null||e===void 0||e.forEach(function(r,n){r.index=n}),this._requestDraw()}drawScene(e,r){var n=this.getLayer(),i=e||n&&n.getCanvas(),a=i&&i.getContext(),s=this._getCanvasCache(),l=s&&s.scene,c=i&&i.isCache;if(!this.isVisible()&&!c)return this;if(l){a.save();var f=this.getAbsoluteTransform(r).getMatrix();a.transform(f[0],f[1],f[2],f[3],f[4],f[5]),this._drawCachedSceneCanvas(a),a.restore()}else this._drawChildren("drawScene",i,r);return this}drawHit(e,r){if(!this.shouldDrawHit(r))return this;var n=this.getLayer(),i=e||n&&n.hitCanvas,a=i&&i.getContext(),s=this._getCanvasCache(),l=s&&s.hit;if(l){a.save();var c=this.getAbsoluteTransform(r).getMatrix();a.transform(c[0],c[1],c[2],c[3],c[4],c[5]),this._drawCachedHitCanvas(a),a.restore()}else this._drawChildren("drawHit",i,r);return this}_drawChildren(e,r,n){var i,a=r&&r.getContext(),s=this.clipWidth(),l=this.clipHeight(),c=this.clipFunc(),f=s&&l||c;const p=n===this;if(f){a.save();var h=this.getAbsoluteTransform(n),m=h.getMatrix();if(a.transform(m[0],m[1],m[2],m[3],m[4],m[5]),a.beginPath(),c)c.call(this,a,this);else{var g=this.clipX(),y=this.clipY();a.rect(g,y,s,l)}a.clip(),m=h.copy().invert().getMatrix(),a.transform(m[0],m[1],m[2],m[3],m[4],m[5])}var k=!p&&this.globalCompositeOperation()!=="source-over"&&e==="drawScene";k&&(a.save(),a._applyGlobalCompositeOperation(this)),(i=this.children)===null||i===void 0||i.forEach(function(q){q[e](r,n)}),k&&a.restore(),f&&a.restore()}getClientRect(e){var r;e=e||{};var n=e.skipTransform,i=e.relativeTo,a,s,l,c,f={x:1/0,y:1/0,width:0,height:0},p=this;(r=this.children)===null||r===void 0||r.forEach(function(k){if(!!k.visible()){var q=k.getClientRect({relativeTo:p,skipShadow:e.skipShadow,skipStroke:e.skipStroke});q.width===0&&q.height===0||(a===void 0?(a=q.x,s=q.y,l=q.x+q.width,c=q.y+q.height):(a=Math.min(a,q.x),s=Math.min(s,q.y),l=Math.max(l,q.x+q.width),c=Math.max(c,q.y+q.height)))}});for(var h=this.find("Shape"),m=!1,g=0;g<h.length;g++){var y=h[g];if(y._isVisible(this)){m=!0;break}}return m&&a!==void 0?f={x:a,y:s,width:l-a,height:c-s}:f={x:0,y:0,width:0,height:0},n?f:this._transformedRect(f,i)}}z.addComponentsGetterSetter(sn,"clip",["x","y","width","height"]);z.addGetterSetter(sn,"clipX",void 0,ce());z.addGetterSetter(sn,"clipY",void 0,ce());z.addGetterSetter(sn,"clipWidth",void 0,ce());z.addGetterSetter(sn,"clipHeight",void 0,ce());z.addGetterSetter(sn,"clipFunc");const ac=new Map,J5=ye._global.PointerEvent!==void 0;function Zv(t){return ac.get(t)}function S1(t){return{evt:t,pointerId:t.pointerId}}function D5(t,e){return ac.get(t)===e}function G5(t,e){ju(t),e.getStage()&&(ac.set(t,e),J5&&e._fire("gotpointercapture",S1(new PointerEvent("gotpointercapture"))))}function ju(t,e){const r=ac.get(t);if(!r)return;const n=r.getStage();n&&n.content,ac.delete(t),J5&&r._fire("lostpointercapture",S1(new PointerEvent("lostpointercapture")))}var gC="Stage",AC="string",Ww="px",SC="mouseout",K5="mouseleave",B5="mouseover",Z5="mouseenter",X5="mousemove",Q5="mousedown",_5="mouseup",uu="pointermove",cu="pointerdown",Uo="pointerup",fu="pointercancel",xC="lostpointercapture",td="pointerout",rd="pointerleave",nd="pointerover",id="pointerenter",wg="contextmenu",$5="touchstart",eT="touchend",tT="touchmove",rT="touchcancel",kg="wheel",PC=5,wC=[[Z5,"_pointerenter"],[Q5,"_pointerdown"],[X5,"_pointermove"],[_5,"_pointerup"],[K5,"_pointerleave"],[$5,"_pointerdown"],[tT,"_pointermove"],[eT,"_pointerup"],[rT,"_pointercancel"],[B5,"_pointerover"],[kg,"_wheel"],[wg,"_contextmenu"],[cu,"_pointerdown"],[uu,"_pointermove"],[Uo,"_pointerup"],[fu,"_pointercancel"],[xC,"_lostpointercapture"]];const Xv={mouse:{[td]:SC,[rd]:K5,[nd]:B5,[id]:Z5,[uu]:X5,[cu]:Q5,[Uo]:_5,[fu]:"mousecancel",pointerclick:"click",pointerdblclick:"dblclick"},touch:{[td]:"touchout",[rd]:"touchleave",[nd]:"touchover",[id]:"touchenter",[uu]:tT,[cu]:$5,[Uo]:eT,[fu]:rT,pointerclick:"tap",pointerdblclick:"dbltap"},pointer:{[td]:td,[rd]:rd,[nd]:nd,[id]:id,[uu]:uu,[cu]:cu,[Uo]:Uo,[fu]:fu,pointerclick:"pointerclick",pointerdblclick:"pointerdblclick"}},du=t=>t.indexOf("pointer")>=0?"pointer":t.indexOf("touch")>=0?"touch":"mouse",go=t=>{const e=du(t);if(e==="pointer")return ye.pointerEventsEnabled&&Xv.pointer;if(e==="touch")return Xv.touch;if(e==="mouse")return Xv.mouse};function Uw(t={}){return(t.clipFunc||t.clipWidth||t.clipHeight)&&D.warn("Stage does not support clipping. Please use clip for Layers or Groups."),t}const kC="Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);",Hd=[];class Vh extends sn{constructor(e){super(Uw(e)),this._pointerPositions=[],this._changedPointerPositions=[],this._buildDOM(),this._bindContentEvents(),Hd.push(this),this.on("widthChange.konva heightChange.konva",this._resizeDOM),this.on("visibleChange.konva",this._checkVisibility),this.on("clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva",()=>{Uw(this.attrs)}),this._checkVisibility()}_validateAdd(e){const r=e.getType()==="Layer",n=e.getType()==="FastLayer";r||n||D.throw("You may only add layers to the stage.")}_checkVisibility(){if(!this.content)return;const e=this.visible()?"":"none";this.content.style.display=e}setContainer(e){if(typeof e===AC){if(e.charAt(0)==="."){var r=e.slice(1);e=document.getElementsByClassName(r)[0]}else{var n;e.charAt(0)!=="#"?n=e:n=e.slice(1),e=document.getElementById(n)}if(!e)throw"Can not find container in document with id "+n}return this._setAttr("container",e),this.content&&(this.content.parentElement&&this.content.parentElement.removeChild(this.content),e.appendChild(this.content)),this}shouldDrawHit(){return!0}clear(){var e=this.children,r=e.length,n;for(n=0;n<r;n++)e[n].clear();return this}clone(e){return e||(e={}),e.container=typeof document!="undefined"&&document.createElement("div"),sn.prototype.clone.call(this,e)}destroy(){super.destroy();var e=this.content;e&&D._isInDocument(e)&&this.container().removeChild(e);var r=Hd.indexOf(this);return r>-1&&Hd.splice(r,1),this}getPointerPosition(){const e=this._pointerPositions[0]||this._changedPointerPositions[0];return e?{x:e.x,y:e.y}:(D.warn(kC),null)}_getPointerById(e){return this._pointerPositions.find(r=>r.id===e)}getPointersPositions(){return this._pointerPositions}getStage(){return this}getContent(){return this.content}_toKonvaCanvas(e){e=e||{},e.x=e.x||0,e.y=e.y||0,e.width=e.width||this.width(),e.height=e.height||this.height();var r=new Bo({width:e.width,height:e.height,pixelRatio:e.pixelRatio||1}),n=r.getContext()._context,i=this.children;return(e.x||e.y)&&n.translate(-1*e.x,-1*e.y),i.forEach(function(a){if(!!a.isVisible()){var s=a._toKonvaCanvas(e);n.drawImage(s._canvas,e.x,e.y,s.getWidth()/s.getPixelRatio(),s.getHeight()/s.getPixelRatio())}}),r}getIntersection(e){if(!e)return null;var r=this.children,n=r.length,i=n-1,a;for(a=i;a>=0;a--){const s=r[a].getIntersection(e);if(s)return s}return null}_resizeDOM(){var e=this.width(),r=this.height();this.content&&(this.content.style.width=e+Ww,this.content.style.height=r+Ww),this.bufferCanvas.setSize(e,r),this.bufferHitCanvas.setSize(e,r),this.children.forEach(n=>{n.setSize({width:e,height:r}),n.draw()})}add(e,...r){if(arguments.length>1){for(var n=0;n<arguments.length;n++)this.add(arguments[n]);return this}super.add(e);var i=this.children.length;return i>PC&&D.warn("The stage has "+i+" layers. Recommended maximum number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group."),e.setSize({width:this.width(),height:this.height()}),e.draw(),ye.isBrowser&&this.content.appendChild(e.canvas._canvas),this}getParent(){return null}getLayer(){return null}hasPointerCapture(e){return D5(e,this)}setPointerCapture(e){G5(e,this)}releaseCapture(e){ju(e)}getLayers(){return this.children}_bindContentEvents(){!ye.isBrowser||wC.forEach(([e,r])=>{this.content.addEventListener(e,n=>{this[r](n)})})}_pointerenter(e){this.setPointersPositions(e);const r=go(e.type);this._fire(r.pointerenter,{evt:e,target:this,currentTarget:this})}_pointerover(e){this.setPointersPositions(e);const r=go(e.type);this._fire(r.pointerover,{evt:e,target:this,currentTarget:this})}_getTargetShape(e){let r=this[e+"targetShape"];return r&&!r.getStage()&&(r=null),r}_pointerleave(e){const r=go(e.type),n=du(e.type);if(!!r){this.setPointersPositions(e);var i=this._getTargetShape(n),a=!ze.isDragging||ye.hitOnDragEnabled;i&&a?(i._fireAndBubble(r.pointerout,{evt:e}),i._fireAndBubble(r.pointerleave,{evt:e}),this._fire(r.pointerleave,{evt:e,target:this,currentTarget:this}),this[n+"targetShape"]=null):a&&(this._fire(r.pointerleave,{evt:e,target:this,currentTarget:this}),this._fire(r.pointerout,{evt:e,target:this,currentTarget:this})),this.pointerPos=void 0,this._pointerPositions=[]}}_pointerdown(e){const r=go(e.type),n=du(e.type);if(!!r){this.setPointersPositions(e);var i=!1;this._changedPointerPositions.forEach(a=>{var s=this.getIntersection(a);if(ze.justDragged=!1,ye["_"+n+"ListenClick"]=!0,!(s&&s.isListening()))return;ye.capturePointerEventsEnabled&&s.setPointerCapture(a.id),this[n+"ClickStartShape"]=s,s._fireAndBubble(r.pointerdown,{evt:e,pointerId:a.id}),i=!0;const c=e.type.indexOf("touch")>=0;s.preventDefault()&&e.cancelable&&c&&e.preventDefault()}),i||this._fire(r.pointerdown,{evt:e,target:this,currentTarget:this,pointerId:this._pointerPositions[0].id})}}_pointermove(e){const r=go(e.type),n=du(e.type);if(!r)return;ze.isDragging&&ze.node.preventDefault()&&e.cancelable&&e.preventDefault(),this.setPointersPositions(e);var i=!ze.isDragging||ye.hitOnDragEnabled;if(!i)return;var a={};let s=!1;var l=this._getTargetShape(n);this._changedPointerPositions.forEach(c=>{const f=Zv(c.id)||this.getIntersection(c),p=c.id,h={evt:e,pointerId:p};var m=l!==f;if(m&&l&&(l._fireAndBubble(r.pointerout,Object.assign({},h),f),l._fireAndBubble(r.pointerleave,Object.assign({},h),f)),f){if(a[f._id])return;a[f._id]=!0}f&&f.isListening()?(s=!0,m&&(f._fireAndBubble(r.pointerover,Object.assign({},h),l),f._fireAndBubble(r.pointerenter,Object.assign({},h),l),this[n+"targetShape"]=f),f._fireAndBubble(r.pointermove,Object.assign({},h))):l&&(this._fire(r.pointerover,{evt:e,target:this,currentTarget:this,pointerId:p}),this[n+"targetShape"]=null)}),s||this._fire(r.pointermove,{evt:e,target:this,currentTarget:this,pointerId:this._changedPointerPositions[0].id})}_pointerup(e){const r=go(e.type),n=du(e.type);if(!r)return;this.setPointersPositions(e);const i=this[n+"ClickStartShape"],a=this[n+"ClickEndShape"];var s={};let l=!1;this._changedPointerPositions.forEach(c=>{const f=Zv(c.id)||this.getIntersection(c);if(f){if(f.releaseCapture(c.id),s[f._id])return;s[f._id]=!0}const p=c.id,h={evt:e,pointerId:p};let m=!1;ye["_"+n+"InDblClickWindow"]?(m=!0,clearTimeout(this[n+"DblTimeout"])):ze.justDragged||(ye["_"+n+"InDblClickWindow"]=!0,clearTimeout(this[n+"DblTimeout"])),this[n+"DblTimeout"]=setTimeout(function(){ye["_"+n+"InDblClickWindow"]=!1},ye.dblClickWindow),f&&f.isListening()?(l=!0,this[n+"ClickEndShape"]=f,f._fireAndBubble(r.pointerup,Object.assign({},h)),ye["_"+n+"ListenClick"]&&i&&i===f&&(f._fireAndBubble(r.pointerclick,Object.assign({},h)),m&&a&&a===f&&f._fireAndBubble(r.pointerdblclick,Object.assign({},h)))):(this[n+"ClickEndShape"]=null,ye["_"+n+"ListenClick"]&&this._fire(r.pointerclick,{evt:e,target:this,currentTarget:this,pointerId:p}),m&&this._fire(r.pointerdblclick,{evt:e,target:this,currentTarget:this,pointerId:p}))}),l||this._fire(r.pointerup,{evt:e,target:this,currentTarget:this,pointerId:this._changedPointerPositions[0].id}),ye["_"+n+"ListenClick"]=!1,e.cancelable&&e.preventDefault()}_contextmenu(e){this.setPointersPositions(e);var r=this.getIntersection(this.getPointerPosition());r&&r.isListening()?r._fireAndBubble(wg,{evt:e}):this._fire(wg,{evt:e,target:this,currentTarget:this})}_wheel(e){this.setPointersPositions(e);var r=this.getIntersection(this.getPointerPosition());r&&r.isListening()?r._fireAndBubble(kg,{evt:e}):this._fire(kg,{evt:e,target:this,currentTarget:this})}_pointercancel(e){this.setPointersPositions(e);const r=Zv(e.pointerId)||this.getIntersection(this.getPointerPosition());r&&r._fireAndBubble(Uo,S1(e)),ju(e.pointerId)}_lostpointercapture(e){ju(e.pointerId)}setPointersPositions(e){var r=this._getContentPosition(),n=null,i=null;e=e||window.event,e.touches!==void 0?(this._pointerPositions=[],this._changedPointerPositions=[],Array.prototype.forEach.call(e.touches,a=>{this._pointerPositions.push({id:a.identifier,x:(a.clientX-r.left)/r.scaleX,y:(a.clientY-r.top)/r.scaleY})}),Array.prototype.forEach.call(e.changedTouches||e.touches,a=>{this._changedPointerPositions.push({id:a.identifier,x:(a.clientX-r.left)/r.scaleX,y:(a.clientY-r.top)/r.scaleY})})):(n=(e.clientX-r.left)/r.scaleX,i=(e.clientY-r.top)/r.scaleY,this.pointerPos={x:n,y:i},this._pointerPositions=[{x:n,y:i,id:D._getFirstPointerId(e)}],this._changedPointerPositions=[{x:n,y:i,id:D._getFirstPointerId(e)}])}_setPointerPosition(e){D.warn('Method _setPointerPosition is deprecated. Use "stage.setPointersPositions(event)" instead.'),this.setPointersPositions(e)}_getContentPosition(){if(!this.content||!this.content.getBoundingClientRect)return{top:0,left:0,scaleX:1,scaleY:1};var e=this.content.getBoundingClientRect();return{top:e.top,left:e.left,scaleX:e.width/this.content.clientWidth||1,scaleY:e.height/this.content.clientHeight||1}}_buildDOM(){if(this.bufferCanvas=new Bo({width:this.width(),height:this.height()}),this.bufferHitCanvas=new A1({pixelRatio:1,width:this.width(),height:this.height()}),!!ye.isBrowser){var e=this.container();if(!e)throw"Stage has no container. A container is required.";e.innerHTML="",this.content=document.createElement("div"),this.content.style.position="relative",this.content.style.userSelect="none",this.content.className="konvajs-content",this.content.setAttribute("role","presentation"),e.appendChild(this.content),this._resizeDOM()}}cache(){return D.warn("Cache function is not allowed for stage. You may use cache only for layers, groups and shapes."),this}clearCache(){return this}batchDraw(){return this.getChildren().forEach(function(e){e.batchDraw()}),this}}Vh.prototype.nodeType=gC;bt(Vh);z.addGetterSetter(Vh,"container");var nT="hasShadow",iT="shadowRGBA",aT="patternImage",sT="linearGradient",oT="radialGradient";let ad;function Qv(){return ad||(ad=D.createCanvasElement().getContext("2d"),ad)}const Ru={};function bC(t){t.fill()}function qC(t){t.stroke()}function TC(t){t.fill()}function jC(t){t.stroke()}function RC(){this._clearCache(nT)}function VC(){this._clearCache(iT)}function LC(){this._clearCache(aT)}function NC(){this._clearCache(sT)}function WC(){this._clearCache(oT)}class se extends fe{constructor(e){super(e);let r;for(;r=D.getRandomColor(),!(r&&!(r in Ru)););this.colorKey=r,Ru[r]=this}getContext(){return D.warn("shape.getContext() method is deprecated. Please do not use it."),this.getLayer().getContext()}getCanvas(){return D.warn("shape.getCanvas() method is deprecated. Please do not use it."),this.getLayer().getCanvas()}getSceneFunc(){return this.attrs.sceneFunc||this._sceneFunc}getHitFunc(){return this.attrs.hitFunc||this._hitFunc}hasShadow(){return this._getCache(nT,this._hasShadow)}_hasShadow(){return this.shadowEnabled()&&this.shadowOpacity()!==0&&!!(this.shadowColor()||this.shadowBlur()||this.shadowOffsetX()||this.shadowOffsetY())}_getFillPattern(){return this._getCache(aT,this.__getFillPattern)}__getFillPattern(){if(this.fillPatternImage()){var e=Qv();const r=e.createPattern(this.fillPatternImage(),this.fillPatternRepeat()||"repeat");if(r&&r.setTransform){const n=new rn;n.translate(this.fillPatternX(),this.fillPatternY()),n.rotate(ye.getAngle(this.fillPatternRotation())),n.scale(this.fillPatternScaleX(),this.fillPatternScaleY()),n.translate(-1*this.fillPatternOffsetX(),-1*this.fillPatternOffsetY());const i=n.getMatrix(),a=typeof DOMMatrix=="undefined"?{a:i[0],b:i[1],c:i[2],d:i[3],e:i[4],f:i[5]}:new DOMMatrix(i);r.setTransform(a)}return r}}_getLinearGradient(){return this._getCache(sT,this.__getLinearGradient)}__getLinearGradient(){var e=this.fillLinearGradientColorStops();if(e){for(var r=Qv(),n=this.fillLinearGradientStartPoint(),i=this.fillLinearGradientEndPoint(),a=r.createLinearGradient(n.x,n.y,i.x,i.y),s=0;s<e.length;s+=2)a.addColorStop(e[s],e[s+1]);return a}}_getRadialGradient(){return this._getCache(oT,this.__getRadialGradient)}__getRadialGradient(){var e=this.fillRadialGradientColorStops();if(e){for(var r=Qv(),n=this.fillRadialGradientStartPoint(),i=this.fillRadialGradientEndPoint(),a=r.createRadialGradient(n.x,n.y,this.fillRadialGradientStartRadius(),i.x,i.y,this.fillRadialGradientEndRadius()),s=0;s<e.length;s+=2)a.addColorStop(e[s],e[s+1]);return a}}getShadowRGBA(){return this._getCache(iT,this._getShadowRGBA)}_getShadowRGBA(){if(this.hasShadow()){var e=D.colorToRGBA(this.shadowColor());return"rgba("+e.r+","+e.g+","+e.b+","+e.a*(this.shadowOpacity()||1)+")"}}hasFill(){return this._calculate("hasFill",["fillEnabled","fill","fillPatternImage","fillLinearGradientColorStops","fillRadialGradientColorStops"],()=>this.fillEnabled()&&!!(this.fill()||this.fillPatternImage()||this.fillLinearGradientColorStops()||this.fillRadialGradientColorStops()))}hasStroke(){return this._calculate("hasStroke",["strokeEnabled","strokeWidth","stroke","strokeLinearGradientColorStops"],()=>this.strokeEnabled()&&this.strokeWidth()&&!!(this.stroke()||this.strokeLinearGradientColorStops()))}hasHitStroke(){const e=this.hitStrokeWidth();return e==="auto"?this.hasStroke():this.strokeEnabled()&&!!e}intersects(e){var r=this.getStage(),n=r.bufferHitCanvas,i;return n.getContext().clear(),this.drawHit(n,null,!0),i=n.context.getImageData(Math.round(e.x),Math.round(e.y),1,1).data,i[3]>0}destroy(){return fe.prototype.destroy.call(this),delete Ru[this.colorKey],delete this.colorKey,this}_useBufferCanvas(e){var r;if(!this.getStage()||!((r=this.attrs.perfectDrawEnabled)!==null&&r!==void 0?r:!0))return!1;const i=e||this.hasFill(),a=this.hasStroke(),s=this.getAbsoluteOpacity()!==1;if(i&&a&&s)return!0;const l=this.hasShadow(),c=this.shadowForStrokeEnabled();return!!(i&&a&&l&&c)}setStrokeHitEnabled(e){D.warn("strokeHitEnabled property is deprecated. Please use hitStrokeWidth instead."),e?this.hitStrokeWidth("auto"):this.hitStrokeWidth(0)}getStrokeHitEnabled(){return this.hitStrokeWidth()!==0}getSelfRect(){var e=this.size();return{x:this._centroid?-e.width/2:0,y:this._centroid?-e.height/2:0,width:e.width,height:e.height}}getClientRect(e={}){const r=e.skipTransform,n=e.relativeTo,i=this.getSelfRect(),s=!e.skipStroke&&this.hasStroke()&&this.strokeWidth()||0,l=i.width+s,c=i.height+s,f=!e.skipShadow&&this.hasShadow(),p=f?this.shadowOffsetX():0,h=f?this.shadowOffsetY():0,m=l+Math.abs(p),g=c+Math.abs(h),y=f&&this.shadowBlur()||0,k=m+y*2,q=g+y*2,P={width:k,height:q,x:-(s/2+y)+Math.min(p,0)+i.x,y:-(s/2+y)+Math.min(h,0)+i.y};return r?P:this._transformedRect(P,n)}drawScene(e,r){var n=this.getLayer(),i=e||n.getCanvas(),a=i.getContext(),s=this._getCanvasCache(),l=this.getSceneFunc(),c=this.hasShadow(),f,p,h,m=i.isCache,g=r===this;if(!this.isVisible()&&!g)return this;if(s){a.save();var y=this.getAbsoluteTransform(r).getMatrix();return a.transform(y[0],y[1],y[2],y[3],y[4],y[5]),this._drawCachedSceneCanvas(a),a.restore(),this}if(!l)return this;if(a.save(),this._useBufferCanvas()&&!m){f=this.getStage(),p=f.bufferCanvas,h=p.getContext(),h.clear(),h.save(),h._applyLineJoin(this);var k=this.getAbsoluteTransform(r).getMatrix();h.transform(k[0],k[1],k[2],k[3],k[4],k[5]),l.call(this,h,this),h.restore();var q=p.pixelRatio;c&&a._applyShadow(this),a._applyOpacity(this),a._applyGlobalCompositeOperation(this),a.drawImage(p._canvas,0,0,p.width/q,p.height/q)}else{if(a._applyLineJoin(this),!g){var k=this.getAbsoluteTransform(r).getMatrix();a.transform(k[0],k[1],k[2],k[3],k[4],k[5]),a._applyOpacity(this),a._applyGlobalCompositeOperation(this)}c&&a._applyShadow(this),l.call(this,a,this)}return a.restore(),this}drawHit(e,r,n=!1){if(!this.shouldDrawHit(r,n))return this;var i=this.getLayer(),a=e||i.hitCanvas,s=a&&a.getContext(),l=this.hitFunc()||this.sceneFunc(),c=this._getCanvasCache(),f=c&&c.hit;if(this.colorKey||D.warn("Looks like your canvas has a destroyed shape in it. Do not reuse shape after you destroyed it. If you want to reuse shape you should call remove() instead of destroy()"),f){s.save();var p=this.getAbsoluteTransform(r).getMatrix();return s.transform(p[0],p[1],p[2],p[3],p[4],p[5]),this._drawCachedHitCanvas(s),s.restore(),this}if(!l)return this;if(s.save(),s._applyLineJoin(this),!(this===r)){var m=this.getAbsoluteTransform(r).getMatrix();s.transform(m[0],m[1],m[2],m[3],m[4],m[5])}return l.call(this,s,this),s.restore(),this}drawHitFromCache(e=0){var r=this._getCanvasCache(),n=this._getCachedSceneCanvas(),i=r.hit,a=i.getContext(),s=i.getWidth(),l=i.getHeight(),c,f,p,h,m,g;a.clear(),a.drawImage(n._canvas,0,0,s,l);try{for(c=a.getImageData(0,0,s,l),f=c.data,p=f.length,h=D._hexToRgb(this.colorKey),m=0;m<p;m+=4)g=f[m+3],g>e?(f[m]=h.r,f[m+1]=h.g,f[m+2]=h.b,f[m+3]=255):f[m+3]=0;a.putImageData(c,0,0)}catch(y){D.error("Unable to draw hit graph from cached scene canvas. "+y.message)}return this}hasPointerCapture(e){return D5(e,this)}setPointerCapture(e){G5(e,this)}releaseCapture(e){ju(e)}}se.prototype._fillFunc=bC;se.prototype._strokeFunc=qC;se.prototype._fillFuncHit=TC;se.prototype._strokeFuncHit=jC;se.prototype._centroid=!1;se.prototype.nodeType="Shape";bt(se);se.prototype.eventListeners={};se.prototype.on.call(se.prototype,"shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva",RC);se.prototype.on.call(se.prototype,"shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva",VC);se.prototype.on.call(se.prototype,"fillPriorityChange.konva fillPatternImageChange.konva fillPatternRepeatChange.konva fillPatternScaleXChange.konva fillPatternScaleYChange.konva fillPatternOffsetXChange.konva fillPatternOffsetYChange.konva fillPatternXChange.konva fillPatternYChange.konva fillPatternRotationChange.konva",LC);se.prototype.on.call(se.prototype,"fillPriorityChange.konva fillLinearGradientColorStopsChange.konva fillLinearGradientStartPointXChange.konva fillLinearGradientStartPointYChange.konva fillLinearGradientEndPointXChange.konva fillLinearGradientEndPointYChange.konva",NC);se.prototype.on.call(se.prototype,"fillPriorityChange.konva fillRadialGradientColorStopsChange.konva fillRadialGradientStartPointXChange.konva fillRadialGradientStartPointYChange.konva fillRadialGradientEndPointXChange.konva fillRadialGradientEndPointYChange.konva fillRadialGradientStartRadiusChange.konva fillRadialGradientEndRadiusChange.konva",WC);z.addGetterSetter(se,"stroke",void 0,E5());z.addGetterSetter(se,"strokeWidth",2,ce());z.addGetterSetter(se,"fillAfterStrokeEnabled",!1);z.addGetterSetter(se,"hitStrokeWidth","auto",g1());z.addGetterSetter(se,"strokeHitEnabled",!0,Qn());z.addGetterSetter(se,"perfectDrawEnabled",!0,Qn());z.addGetterSetter(se,"shadowForStrokeEnabled",!0,Qn());z.addGetterSetter(se,"lineJoin");z.addGetterSetter(se,"lineCap");z.addGetterSetter(se,"sceneFunc");z.addGetterSetter(se,"hitFunc");z.addGetterSetter(se,"dash");z.addGetterSetter(se,"dashOffset",0,ce());z.addGetterSetter(se,"shadowColor",void 0,dl());z.addGetterSetter(se,"shadowBlur",0,ce());z.addGetterSetter(se,"shadowOpacity",1,ce());z.addComponentsGetterSetter(se,"shadowOffset",["x","y"]);z.addGetterSetter(se,"shadowOffsetX",0,ce());z.addGetterSetter(se,"shadowOffsetY",0,ce());z.addGetterSetter(se,"fillPatternImage");z.addGetterSetter(se,"fill",void 0,E5());z.addGetterSetter(se,"fillPatternX",0,ce());z.addGetterSetter(se,"fillPatternY",0,ce());z.addGetterSetter(se,"fillLinearGradientColorStops");z.addGetterSetter(se,"strokeLinearGradientColorStops");z.addGetterSetter(se,"fillRadialGradientStartRadius",0);z.addGetterSetter(se,"fillRadialGradientEndRadius",0);z.addGetterSetter(se,"fillRadialGradientColorStops");z.addGetterSetter(se,"fillPatternRepeat","repeat");z.addGetterSetter(se,"fillEnabled",!0);z.addGetterSetter(se,"strokeEnabled",!0);z.addGetterSetter(se,"shadowEnabled",!0);z.addGetterSetter(se,"dashEnabled",!0);z.addGetterSetter(se,"strokeScaleEnabled",!0);z.addGetterSetter(se,"fillPriority","color");z.addComponentsGetterSetter(se,"fillPatternOffset",["x","y"]);z.addGetterSetter(se,"fillPatternOffsetX",0,ce());z.addGetterSetter(se,"fillPatternOffsetY",0,ce());z.addComponentsGetterSetter(se,"fillPatternScale",["x","y"]);z.addGetterSetter(se,"fillPatternScaleX",1,ce());z.addGetterSetter(se,"fillPatternScaleY",1,ce());z.addComponentsGetterSetter(se,"fillLinearGradientStartPoint",["x","y"]);z.addComponentsGetterSetter(se,"strokeLinearGradientStartPoint",["x","y"]);z.addGetterSetter(se,"fillLinearGradientStartPointX",0);z.addGetterSetter(se,"strokeLinearGradientStartPointX",0);z.addGetterSetter(se,"fillLinearGradientStartPointY",0);z.addGetterSetter(se,"strokeLinearGradientStartPointY",0);z.addComponentsGetterSetter(se,"fillLinearGradientEndPoint",["x","y"]);z.addComponentsGetterSetter(se,"strokeLinearGradientEndPoint",["x","y"]);z.addGetterSetter(se,"fillLinearGradientEndPointX",0);z.addGetterSetter(se,"strokeLinearGradientEndPointX",0);z.addGetterSetter(se,"fillLinearGradientEndPointY",0);z.addGetterSetter(se,"strokeLinearGradientEndPointY",0);z.addComponentsGetterSetter(se,"fillRadialGradientStartPoint",["x","y"]);z.addGetterSetter(se,"fillRadialGradientStartPointX",0);z.addGetterSetter(se,"fillRadialGradientStartPointY",0);z.addComponentsGetterSetter(se,"fillRadialGradientEndPoint",["x","y"]);z.addGetterSetter(se,"fillRadialGradientEndPointX",0);z.addGetterSetter(se,"fillRadialGradientEndPointY",0);z.addGetterSetter(se,"fillPatternRotation",0);z.backCompat(se,{dashArray:"dash",getDashArray:"getDash",setDashArray:"getDash",drawFunc:"sceneFunc",getDrawFunc:"getSceneFunc",setDrawFunc:"setSceneFunc",drawHitFunc:"hitFunc",getDrawHitFunc:"getHitFunc",setDrawHitFunc:"setHitFunc"});var UC="#",HC="beforeDraw",MC="draw",lT=[{x:0,y:0},{x:-1,y:-1},{x:1,y:-1},{x:1,y:1},{x:-1,y:1}],OC=lT.length;class Es extends sn{constructor(e){super(e),this.canvas=new Bo,this.hitCanvas=new A1({pixelRatio:1}),this._waitingForDraw=!1,this.on("visibleChange.konva",this._checkVisibility),this._checkVisibility(),this.on("imageSmoothingEnabledChange.konva",this._setSmoothEnabled),this._setSmoothEnabled()}createPNGStream(){return this.canvas._canvas.createPNGStream()}getCanvas(){return this.canvas}getNativeCanvasElement(){return this.canvas._canvas}getHitCanvas(){return this.hitCanvas}getContext(){return this.getCanvas().getContext()}clear(e){return this.getContext().clear(e),this.getHitCanvas().getContext().clear(e),this}setZIndex(e){super.setZIndex(e);var r=this.getStage();return r&&r.content&&(r.content.removeChild(this.getNativeCanvasElement()),e<r.children.length-1?r.content.insertBefore(this.getNativeCanvasElement(),r.children[e+1].getCanvas()._canvas):r.content.appendChild(this.getNativeCanvasElement())),this}moveToTop(){fe.prototype.moveToTop.call(this);var e=this.getStage();return e&&e.content&&(e.content.removeChild(this.getNativeCanvasElement()),e.content.appendChild(this.getNativeCanvasElement())),!0}moveUp(){var e=fe.prototype.moveUp.call(this);if(!e)return!1;var r=this.getStage();return!r||!r.content?!1:(r.content.removeChild(this.getNativeCanvasElement()),this.index<r.children.length-1?r.content.insertBefore(this.getNativeCanvasElement(),r.children[this.index+1].getCanvas()._canvas):r.content.appendChild(this.getNativeCanvasElement()),!0)}moveDown(){if(fe.prototype.moveDown.call(this)){var e=this.getStage();if(e){var r=e.children;e.content&&(e.content.removeChild(this.getNativeCanvasElement()),e.content.insertBefore(this.getNativeCanvasElement(),r[this.index+1].getCanvas()._canvas))}return!0}return!1}moveToBottom(){if(fe.prototype.moveToBottom.call(this)){var e=this.getStage();if(e){var r=e.children;e.content&&(e.content.removeChild(this.getNativeCanvasElement()),e.content.insertBefore(this.getNativeCanvasElement(),r[1].getCanvas()._canvas))}return!0}return!1}getLayer(){return this}remove(){var e=this.getNativeCanvasElement();return fe.prototype.remove.call(this),e&&e.parentNode&&D._isInDocument(e)&&e.parentNode.removeChild(e),this}getStage(){return this.parent}setSize({width:e,height:r}){return this.canvas.setSize(e,r),this.hitCanvas.setSize(e,r),this._setSmoothEnabled(),this}_validateAdd(e){var r=e.getType();r!=="Group"&&r!=="Shape"&&D.throw("You may only add groups and shapes to a layer.")}_toKonvaCanvas(e){return e=e||{},e.width=e.width||this.getWidth(),e.height=e.height||this.getHeight(),e.x=e.x!==void 0?e.x:this.x(),e.y=e.y!==void 0?e.y:this.y(),fe.prototype._toKonvaCanvas.call(this,e)}_checkVisibility(){this.visible()?this.canvas._canvas.style.display="block":this.canvas._canvas.style.display="none"}_setSmoothEnabled(){this.getContext()._context.imageSmoothingEnabled=this.imageSmoothingEnabled()}getWidth(){if(this.parent)return this.parent.width()}setWidth(){D.warn('Can not change width of layer. Use "stage.width(value)" function instead.')}getHeight(){if(this.parent)return this.parent.height()}setHeight(){D.warn('Can not change height of layer. Use "stage.height(value)" function instead.')}batchDraw(){return this._waitingForDraw||(this._waitingForDraw=!0,D.requestAnimFrame(()=>{this.draw(),this._waitingForDraw=!1})),this}getIntersection(e){if(!this.isListening()||!this.isVisible())return null;for(var r=1,n=!1;;){for(let i=0;i<OC;i++){const a=lT[i],s=this._getIntersection({x:e.x+a.x*r,y:e.y+a.y*r}),l=s.shape;if(l)return l;if(n=!!s.antialiased,!s.antialiased)break}if(n)r+=1;else return null}}_getIntersection(e){const r=this.hitCanvas.pixelRatio,n=this.hitCanvas.context.getImageData(Math.round(e.x*r),Math.round(e.y*r),1,1).data,i=n[3];if(i===255){const a=D._rgbToHex(n[0],n[1],n[2]),s=Ru[UC+a];return s?{shape:s}:{antialiased:!0}}else if(i>0)return{antialiased:!0};return{}}drawScene(e,r){var n=this.getLayer(),i=e||n&&n.getCanvas();return this._fire(HC,{node:this}),this.clearBeforeDraw()&&i.getContext().clear(),sn.prototype.drawScene.call(this,i,r),this._fire(MC,{node:this}),this}drawHit(e,r){var n=this.getLayer(),i=e||n&&n.hitCanvas;return n&&n.clearBeforeDraw()&&n.getHitCanvas().getContext().clear(),sn.prototype.drawHit.call(this,i,r),this}enableHitGraph(){return this.hitGraphEnabled(!0),this}disableHitGraph(){return this.hitGraphEnabled(!1),this}setHitGraphEnabled(e){D.warn("hitGraphEnabled method is deprecated. Please use layer.listening() instead."),this.listening(e)}getHitGraphEnabled(e){return D.warn("hitGraphEnabled method is deprecated. Please use layer.listening() instead."),this.listening()}toggleHitCanvas(){if(!(!this.parent||!this.parent.content)){var e=this.parent,r=!!this.hitCanvas._canvas.parentNode;r?e.content.removeChild(this.hitCanvas._canvas):e.content.appendChild(this.hitCanvas._canvas)}}}Es.prototype.nodeType="Layer";bt(Es);z.addGetterSetter(Es,"imageSmoothingEnabled",!0);z.addGetterSetter(Es,"clearBeforeDraw",!0);z.addGetterSetter(Es,"hitGraphEnabled",!0,Qn());class x1 extends Es{constructor(e){super(e),this.listening(!1),D.warn('Konva.Fast layer is deprecated. Please use "new Konva.Layer({ listening: false })" instead.')}}x1.prototype.nodeType="FastLayer";bt(x1);class nl extends sn{_validateAdd(e){var r=e.getType();r!=="Group"&&r!=="Shape"&&D.throw("You may only add groups and shapes to groups.")}}nl.prototype.nodeType="Group";bt(nl);var _v=function(){return Ko.performance&&Ko.performance.now?function(){return Ko.performance.now()}:function(){return new Date().getTime()}}();class kn{constructor(e,r){this.id=kn.animIdCounter++,this.frame={time:0,timeDiff:0,lastTime:_v(),frameRate:0},this.func=e,this.setLayers(r)}setLayers(e){var r=[];return e?e.length>0?r=e:r=[e]:r=[],this.layers=r,this}getLayers(){return this.layers}addLayer(e){var r=this.layers,n=r.length,i;for(i=0;i<n;i++)if(r[i]._id===e._id)return!1;return this.layers.push(e),!0}isRunning(){var e=kn,r=e.animations,n=r.length,i;for(i=0;i<n;i++)if(r[i].id===this.id)return!0;return!1}start(){return this.stop(),this.frame.timeDiff=0,this.frame.lastTime=_v(),kn._addAnimation(this),this}stop(){return kn._removeAnimation(this),this}_updateFrameObject(e){this.frame.timeDiff=e-this.frame.lastTime,this.frame.lastTime=e,this.frame.time+=this.frame.timeDiff,this.frame.frameRate=1e3/this.frame.timeDiff}static _addAnimation(e){this.animations.push(e),this._handleAnimation()}static _removeAnimation(e){var r=e.id,n=this.animations,i=n.length,a;for(a=0;a<i;a++)if(n[a].id===r){this.animations.splice(a,1);break}}static _runFrames(){var e={},r=this.animations,n,i,a,s,l,c,f,p,h;for(s=0;s<r.length;s++)if(n=r[s],i=n.layers,a=n.func,n._updateFrameObject(_v()),c=i.length,a?h=a.call(n,n.frame)!==!1:h=!0,!!h)for(l=0;l<c;l++)f=i[l],f._id!==void 0&&(e[f._id]=f);for(p in e)!e.hasOwnProperty(p)||e[p].batchDraw()}static _animationLoop(){var e=kn;e.animations.length?(e._runFrames(),D.requestAnimFrame(e._animationLoop)):e.animRunning=!1}static _handleAnimation(){this.animRunning||(this.animRunning=!0,D.requestAnimFrame(this._animationLoop))}}kn.animations=[];kn.animIdCounter=0;kn.animRunning=!1;var zC={node:1,duration:1,easing:1,onFinish:1,yoyo:1},YC=1,Hw=2,Mw=3,CC=0,Ow=["fill","stroke","shadowColor"];class FC{constructor(e,r,n,i,a,s,l){this.prop=e,this.propFunc=r,this.begin=i,this._pos=i,this.duration=s,this._change=0,this.prevPos=0,this.yoyo=l,this._time=0,this._position=0,this._startTime=0,this._finish=0,this.func=n,this._change=a-this.begin,this.pause()}fire(e){var r=this[e];r&&r()}setTime(e){e>this.duration?this.yoyo?(this._time=this.duration,this.reverse()):this.finish():e<0?this.yoyo?(this._time=0,this.play()):this.reset():(this._time=e,this.update())}getTime(){return this._time}setPosition(e){this.prevPos=this._pos,this.propFunc(e),this._pos=e}getPosition(e){return e===void 0&&(e=this._time),this.func(e,this.begin,this._change,this.duration)}play(){this.state=Hw,this._startTime=this.getTimer()-this._time,this.onEnterFrame(),this.fire("onPlay")}reverse(){this.state=Mw,this._time=this.duration-this._time,this._startTime=this.getTimer()-this._time,this.onEnterFrame(),this.fire("onReverse")}seek(e){this.pause(),this._time=e,this.update(),this.fire("onSeek")}reset(){this.pause(),this._time=0,this.update(),this.fire("onReset")}finish(){this.pause(),this._time=this.duration,this.update(),this.fire("onFinish")}update(){this.setPosition(this.getPosition(this._time)),this.fire("onUpdate")}onEnterFrame(){var e=this.getTimer()-this._startTime;this.state===Hw?this.setTime(e):this.state===Mw&&this.setTime(this.duration-e)}pause(){this.state=YC,this.fire("onPause")}getTimer(){return new Date().getTime()}}class Vt{constructor(e){var r=this,n=e.node,i=n._id,a,s=e.easing||Vu.Linear,l=!!e.yoyo,c;typeof e.duration=="undefined"?a=.3:e.duration===0?a=.001:a=e.duration,this.node=n,this._id=CC++;var f=n.getLayer()||(n instanceof ye.Stage?n.getLayers():null);f||D.error("Tween constructor have `node` that is not in a layer. Please add node into layer first."),this.anim=new kn(function(){r.tween.onEnterFrame()},f),this.tween=new FC(c,function(p){r._tweenFunc(p)},s,0,1,a*1e3,l),this._addListeners(),Vt.attrs[i]||(Vt.attrs[i]={}),Vt.attrs[i][this._id]||(Vt.attrs[i][this._id]={}),Vt.tweens[i]||(Vt.tweens[i]={});for(c in e)zC[c]===void 0&&this._addAttr(c,e[c]);this.reset(),this.onFinish=e.onFinish,this.onReset=e.onReset,this.onUpdate=e.onUpdate}_addAttr(e,r){var n=this.node,i=n._id,a,s,l,c,f,p,h,m;if(l=Vt.tweens[i][e],l&&delete Vt.attrs[i][l][e],a=n.getAttr(e),D._isArray(r))if(s=[],f=Math.max(r.length,a.length),e==="points"&&r.length!==a.length&&(r.length>a.length?(h=a,a=D._prepareArrayForTween(a,r,n.closed())):(p=r,r=D._prepareArrayForTween(r,a,n.closed()))),e.indexOf("fill")===0)for(c=0;c<f;c++)if(c%2===0)s.push(r[c]-a[c]);else{var g=D.colorToRGBA(a[c]);m=D.colorToRGBA(r[c]),a[c]=g,s.push({r:m.r-g.r,g:m.g-g.g,b:m.b-g.b,a:m.a-g.a})}else for(c=0;c<f;c++)s.push(r[c]-a[c]);else Ow.indexOf(e)!==-1?(a=D.colorToRGBA(a),m=D.colorToRGBA(r),s={r:m.r-a.r,g:m.g-a.g,b:m.b-a.b,a:m.a-a.a}):s=r-a;Vt.attrs[i][this._id][e]={start:a,diff:s,end:r,trueEnd:p,trueStart:h},Vt.tweens[i][e]=this._id}_tweenFunc(e){var r=this.node,n=Vt.attrs[r._id][this._id],i,a,s,l,c,f,p,h;for(i in n){if(a=n[i],s=a.start,l=a.diff,h=a.end,D._isArray(s))if(c=[],p=Math.max(s.length,h.length),i.indexOf("fill")===0)for(f=0;f<p;f++)f%2===0?c.push((s[f]||0)+l[f]*e):c.push("rgba("+Math.round(s[f].r+l[f].r*e)+","+Math.round(s[f].g+l[f].g*e)+","+Math.round(s[f].b+l[f].b*e)+","+(s[f].a+l[f].a*e)+")");else for(f=0;f<p;f++)c.push((s[f]||0)+l[f]*e);else Ow.indexOf(i)!==-1?c="rgba("+Math.round(s.r+l.r*e)+","+Math.round(s.g+l.g*e)+","+Math.round(s.b+l.b*e)+","+(s.a+l.a*e)+")":c=s+l*e;r.setAttr(i,c)}}_addListeners(){this.tween.onPlay=()=>{this.anim.start()},this.tween.onReverse=()=>{this.anim.start()},this.tween.onPause=()=>{this.anim.stop()},this.tween.onFinish=()=>{var e=this.node,r=Vt.attrs[e._id][this._id];r.points&&r.points.trueEnd&&e.setAttr("points",r.points.trueEnd),this.onFinish&&this.onFinish.call(this)},this.tween.onReset=()=>{var e=this.node,r=Vt.attrs[e._id][this._id];r.points&&r.points.trueStart&&e.points(r.points.trueStart),this.onReset&&this.onReset()},this.tween.onUpdate=()=>{this.onUpdate&&this.onUpdate.call(this)}}play(){return this.tween.play(),this}reverse(){return this.tween.reverse(),this}reset(){return this.tween.reset(),this}seek(e){return this.tween.seek(e*1e3),this}pause(){return this.tween.pause(),this}finish(){return this.tween.finish(),this}destroy(){var e=this.node._id,r=this._id,n=Vt.tweens[e],i;this.pause();for(i in n)delete Vt.tweens[e][i];delete Vt.attrs[e][r]}}Vt.attrs={};Vt.tweens={};fe.prototype.to=function(t){var e=t.onFinish;t.node=this,t.onFinish=function(){this.destroy(),e&&e()};var r=new Vt(t);r.play()};const Vu={BackEaseIn(t,e,r,n){var i=1.70158;return r*(t/=n)*t*((i+1)*t-i)+e},BackEaseOut(t,e,r,n){var i=1.70158;return r*((t=t/n-1)*t*((i+1)*t+i)+1)+e},BackEaseInOut(t,e,r,n){var i=1.70158;return(t/=n/2)<1?r/2*(t*t*(((i*=1.525)+1)*t-i))+e:r/2*((t-=2)*t*(((i*=1.525)+1)*t+i)+2)+e},ElasticEaseIn(t,e,r,n,i,a){var s=0;return t===0?e:(t/=n)===1?e+r:(a||(a=n*.3),!i||i<Math.abs(r)?(i=r,s=a/4):s=a/(2*Math.PI)*Math.asin(r/i),-(i*Math.pow(2,10*(t-=1))*Math.sin((t*n-s)*(2*Math.PI)/a))+e)},ElasticEaseOut(t,e,r,n,i,a){var s=0;return t===0?e:(t/=n)===1?e+r:(a||(a=n*.3),!i||i<Math.abs(r)?(i=r,s=a/4):s=a/(2*Math.PI)*Math.asin(r/i),i*Math.pow(2,-10*t)*Math.sin((t*n-s)*(2*Math.PI)/a)+r+e)},ElasticEaseInOut(t,e,r,n,i,a){var s=0;return t===0?e:(t/=n/2)===2?e+r:(a||(a=n*(.3*1.5)),!i||i<Math.abs(r)?(i=r,s=a/4):s=a/(2*Math.PI)*Math.asin(r/i),t<1?-.5*(i*Math.pow(2,10*(t-=1))*Math.sin((t*n-s)*(2*Math.PI)/a))+e:i*Math.pow(2,-10*(t-=1))*Math.sin((t*n-s)*(2*Math.PI)/a)*.5+r+e)},BounceEaseOut(t,e,r,n){return(t/=n)<1/2.75?r*(7.5625*t*t)+e:t<2/2.75?r*(7.5625*(t-=1.5/2.75)*t+.75)+e:t<2.5/2.75?r*(7.5625*(t-=2.25/2.75)*t+.9375)+e:r*(7.5625*(t-=2.625/2.75)*t+.984375)+e},BounceEaseIn(t,e,r,n){return r-Vu.BounceEaseOut(n-t,0,r,n)+e},BounceEaseInOut(t,e,r,n){return t<n/2?Vu.BounceEaseIn(t*2,0,r,n)*.5+e:Vu.BounceEaseOut(t*2-n,0,r,n)*.5+r*.5+e},EaseIn(t,e,r,n){return r*(t/=n)*t+e},EaseOut(t,e,r,n){return-r*(t/=n)*(t-2)+e},EaseInOut(t,e,r,n){return(t/=n/2)<1?r/2*t*t+e:-r/2*(--t*(t-2)-1)+e},StrongEaseIn(t,e,r,n){return r*(t/=n)*t*t*t*t+e},StrongEaseOut(t,e,r,n){return r*((t=t/n-1)*t*t*t*t+1)+e},StrongEaseInOut(t,e,r,n){return(t/=n/2)<1?r/2*t*t*t*t*t+e:r/2*((t-=2)*t*t*t*t+2)+e},Linear(t,e,r,n){return r*t/n+e}},Ys=D._assign(ye,{Util:D,Transform:rn,Node:fe,Container:sn,Stage:Vh,stages:Hd,Layer:Es,FastLayer:x1,Group:nl,DD:ze,Shape:se,shapes:Ru,Animation:kn,Tween:Vt,Easings:Vu,Context:jh,Canvas:Rh});class ra extends se{_sceneFunc(e){var r=ye.getAngle(this.angle()),n=this.clockwise();e.beginPath(),e.arc(0,0,this.outerRadius(),0,r,n),e.arc(0,0,this.innerRadius(),r,0,!n),e.closePath(),e.fillStrokeShape(this)}getWidth(){return this.outerRadius()*2}getHeight(){return this.outerRadius()*2}setWidth(e){this.outerRadius(e/2)}setHeight(e){this.outerRadius(e/2)}getSelfRect(){const e=this.innerRadius(),r=this.outerRadius(),n=this.clockwise(),i=ye.getAngle(n?360-this.angle():this.angle()),a=Math.cos(Math.min(i,Math.PI)),s=1,l=Math.sin(Math.min(Math.max(Math.PI,i),3*Math.PI/2)),c=Math.sin(Math.min(i,Math.PI/2)),f=a*(a>0?e:r),p=s*r,h=l*(l>0?e:r),m=c*(c>0?r:e);return{x:f,y:n?-1*m:h,width:p-f,height:m-h}}}ra.prototype._centroid=!0;ra.prototype.className="Arc";ra.prototype._attrsAffectingSize=["innerRadius","outerRadius"];bt(ra);z.addGetterSetter(ra,"innerRadius",0,ce());z.addGetterSetter(ra,"outerRadius",0,ce());z.addGetterSetter(ra,"angle",0,ce());z.addGetterSetter(ra,"clockwise",!1,Qn());function bg(t,e,r,n,i,a,s){var l=Math.sqrt(Math.pow(r-t,2)+Math.pow(n-e,2)),c=Math.sqrt(Math.pow(i-r,2)+Math.pow(a-n,2)),f=s*l/(l+c),p=s*c/(l+c),h=r-f*(i-t),m=n-f*(a-e),g=r+p*(i-t),y=n+p*(a-e);return[h,m,g,y]}function zw(t,e){var r=t.length,n=[],i,a;for(i=2;i<r-2;i+=2)a=bg(t[i-2],t[i-1],t[i],t[i+1],t[i+2],t[i+3],e),!isNaN(a[0])&&(n.push(a[0]),n.push(a[1]),n.push(t[i]),n.push(t[i+1]),n.push(a[2]),n.push(a[3]));return n}class na extends se{constructor(e){super(e),this.on("pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva",function(){this._clearCache("tensionPoints")})}_sceneFunc(e){var r=this.points(),n=r.length,i=this.tension(),a=this.closed(),s=this.bezier(),l,c,f;if(!!n){if(e.beginPath(),e.moveTo(r[0],r[1]),i!==0&&n>4){for(l=this.getTensionPoints(),c=l.length,f=a?0:4,a||e.quadraticCurveTo(l[0],l[1],l[2],l[3]);f<c-2;)e.bezierCurveTo(l[f++],l[f++],l[f++],l[f++],l[f++],l[f++]);a||e.quadraticCurveTo(l[c-2],l[c-1],r[n-2],r[n-1])}else if(s)for(f=2;f<n;)e.bezierCurveTo(r[f++],r[f++],r[f++],r[f++],r[f++],r[f++]);else for(f=2;f<n;f+=2)e.lineTo(r[f],r[f+1]);a?(e.closePath(),e.fillStrokeShape(this)):e.strokeShape(this)}}getTensionPoints(){return this._getCache("tensionPoints",this._getTensionPoints)}_getTensionPoints(){return this.closed()?this._getTensionPointsClosed():zw(this.points(),this.tension())}_getTensionPointsClosed(){var e=this.points(),r=e.length,n=this.tension(),i=bg(e[r-2],e[r-1],e[0],e[1],e[2],e[3],n),a=bg(e[r-4],e[r-3],e[r-2],e[r-1],e[0],e[1],n),s=zw(e,n),l=[i[2],i[3]].concat(s).concat([a[0],a[1],e[r-2],e[r-1],a[2],a[3],i[0],i[1],e[0],e[1]]);return l}getWidth(){return this.getSelfRect().width}getHeight(){return this.getSelfRect().height}getSelfRect(){var e=this.points();if(e.length<4)return{x:e[0]||0,y:e[1]||0,width:0,height:0};this.tension()!==0?e=[e[0],e[1],...this._getTensionPoints(),e[e.length-2],e[e.length-1]]:e=this.points();for(var r=e[0],n=e[0],i=e[1],a=e[1],s,l,c=0;c<e.length/2;c++)s=e[c*2],l=e[c*2+1],r=Math.min(r,s),n=Math.max(n,s),i=Math.min(i,l),a=Math.max(a,l);return{x:r,y:i,width:n-r,height:a-i}}}na.prototype.className="Line";na.prototype._attrsAffectingSize=["points","bezier","tension"];bt(na);z.addGetterSetter(na,"closed",!1);z.addGetterSetter(na,"bezier",!1);z.addGetterSetter(na,"tension",0,ce());z.addGetterSetter(na,"points",[],Q6());class Ke extends se{constructor(e){super(e),this.dataArray=[],this.pathLength=0,this.dataArray=Ke.parsePathData(this.data()),this.pathLength=0;for(var r=0;r<this.dataArray.length;++r)this.pathLength+=this.dataArray[r].pathLength;this.on("dataChange.konva",function(){this.dataArray=Ke.parsePathData(this.data()),this.pathLength=0;for(var n=0;n<this.dataArray.length;++n)this.pathLength+=this.dataArray[n].pathLength})}_sceneFunc(e){var r=this.dataArray;e.beginPath();for(var n=!1,i=0;i<r.length;i++){var a=r[i].command,s=r[i].points;switch(a){case"L":e.lineTo(s[0],s[1]);break;case"M":e.moveTo(s[0],s[1]);break;case"C":e.bezierCurveTo(s[0],s[1],s[2],s[3],s[4],s[5]);break;case"Q":e.quadraticCurveTo(s[0],s[1],s[2],s[3]);break;case"A":var l=s[0],c=s[1],f=s[2],p=s[3],h=s[4],m=s[5],g=s[6],y=s[7],k=f>p?f:p,q=f>p?1:f/p,P=f>p?p/f:1;e.translate(l,c),e.rotate(g),e.scale(q,P),e.arc(0,0,k,h,h+m,1-y),e.scale(1/q,1/P),e.rotate(-g),e.translate(-l,-c);break;case"z":n=!0,e.closePath();break}}!n&&!this.hasFill()?e.strokeShape(this):e.fillStrokeShape(this)}getSelfRect(){var e=[];this.dataArray.forEach(function(f){if(f.command==="A"){var p=f.points[4],h=f.points[5],m=f.points[4]+h,g=Math.PI/180;if(Math.abs(p-m)<g&&(g=Math.abs(p-m)),h<0)for(let y=p-g;y>m;y-=g){const k=Ke.getPointOnEllipticalArc(f.points[0],f.points[1],f.points[2],f.points[3],y,0);e.push(k.x,k.y)}else for(let y=p+g;y<m;y+=g){const k=Ke.getPointOnEllipticalArc(f.points[0],f.points[1],f.points[2],f.points[3],y,0);e.push(k.x,k.y)}}else if(f.command==="C")for(let y=0;y<=1;y+=.01){const k=Ke.getPointOnCubicBezier(y,f.start.x,f.start.y,f.points[0],f.points[1],f.points[2],f.points[3],f.points[4],f.points[5]);e.push(k.x,k.y)}else e=e.concat(f.points)});for(var r=e[0],n=e[0],i=e[1],a=e[1],s,l,c=0;c<e.length/2;c++)s=e[c*2],l=e[c*2+1],isNaN(s)||(r=Math.min(r,s),n=Math.max(n,s)),isNaN(l)||(i=Math.min(i,l),a=Math.max(a,l));return{x:r,y:i,width:n-r,height:a-i}}getLength(){return this.pathLength}getPointAtLength(e){var r,n=0,i=this.dataArray.length;if(!i)return null;for(;n<i&&e>this.dataArray[n].pathLength;)e-=this.dataArray[n].pathLength,++n;if(n===i)return r=this.dataArray[n-1].points.slice(-2),{x:r[0],y:r[1]};if(e<.01)return r=this.dataArray[n].points.slice(0,2),{x:r[0],y:r[1]};var a=this.dataArray[n],s=a.points;switch(a.command){case"L":return Ke.getPointOnLine(e,a.start.x,a.start.y,s[0],s[1]);case"C":return Ke.getPointOnCubicBezier(e/a.pathLength,a.start.x,a.start.y,s[0],s[1],s[2],s[3],s[4],s[5]);case"Q":return Ke.getPointOnQuadraticBezier(e/a.pathLength,a.start.x,a.start.y,s[0],s[1],s[2],s[3]);case"A":var l=s[0],c=s[1],f=s[2],p=s[3],h=s[4],m=s[5],g=s[6];return h+=m*e/a.pathLength,Ke.getPointOnEllipticalArc(l,c,f,p,h,g)}return null}static getLineLength(e,r,n,i){return Math.sqrt((n-e)*(n-e)+(i-r)*(i-r))}static getPointOnLine(e,r,n,i,a,s,l){s===void 0&&(s=r),l===void 0&&(l=n);var c=(a-n)/(i-r+1e-8),f=Math.sqrt(e*e/(1+c*c));i<r&&(f*=-1);var p=c*f,h;if(i===r)h={x:s,y:l+p};else if((l-n)/(s-r+1e-8)===c)h={x:s+f,y:l+p};else{var m,g,y=this.getLineLength(r,n,i,a),k=(s-r)*(i-r)+(l-n)*(a-n);k=k/(y*y),m=r+k*(i-r),g=n+k*(a-n);var q=this.getLineLength(s,l,m,g),P=Math.sqrt(e*e-q*q);f=Math.sqrt(P*P/(1+c*c)),i<r&&(f*=-1),p=c*f,h={x:m+f,y:g+p}}return h}static getPointOnCubicBezier(e,r,n,i,a,s,l,c,f){function p(q){return q*q*q}function h(q){return 3*q*q*(1-q)}function m(q){return 3*q*(1-q)*(1-q)}function g(q){return(1-q)*(1-q)*(1-q)}var y=c*p(e)+s*h(e)+i*m(e)+r*g(e),k=f*p(e)+l*h(e)+a*m(e)+n*g(e);return{x:y,y:k}}static getPointOnQuadraticBezier(e,r,n,i,a,s,l){function c(g){return g*g}function f(g){return 2*g*(1-g)}function p(g){return(1-g)*(1-g)}var h=s*c(e)+i*f(e)+r*p(e),m=l*c(e)+a*f(e)+n*p(e);return{x:h,y:m}}static getPointOnEllipticalArc(e,r,n,i,a,s){var l=Math.cos(s),c=Math.sin(s),f={x:n*Math.cos(a),y:i*Math.sin(a)};return{x:e+(f.x*l-f.y*c),y:r+(f.x*c+f.y*l)}}static parsePathData(e){if(!e)return[];var r=e,n=["m","M","l","L","v","V","h","H","z","Z","c","C","q","Q","t","T","s","S","a","A"];r=r.replace(new RegExp(" ","g"),",");for(var i=0;i<n.length;i++)r=r.replace(new RegExp(n[i],"g"),"|"+n[i]);var a=r.split("|"),s=[],l=[],c=0,f=0,p=/([-+]?((\d+\.\d+)|((\d+)|(\.\d+)))(?:e[-+]?\d+)?)/gi,h;for(i=1;i<a.length;i++){var m=a[i],g=m.charAt(0);for(m=m.slice(1),l.length=0;h=p.exec(m);)l.push(h[0]);for(var y=[],k=0,q=l.length;k<q;k++){if(l[k]==="00"){y.push(0,0);continue}var P=parseFloat(l[k]);isNaN(P)?y.push(0):y.push(P)}for(;y.length>0&&!isNaN(y[0]);){var x=null,b=[],j=c,R=f,V,N,H,O,M,F,J,X,re,ae;switch(g){case"l":c+=y.shift(),f+=y.shift(),x="L",b.push(c,f);break;case"L":c=y.shift(),f=y.shift(),b.push(c,f);break;case"m":var te=y.shift(),ie=y.shift();if(c+=te,f+=ie,x="M",s.length>2&&s[s.length-1].command==="z"){for(var K=s.length-2;K>=0;K--)if(s[K].command==="M"){c=s[K].points[0]+te,f=s[K].points[1]+ie;break}}b.push(c,f),g="l";break;case"M":c=y.shift(),f=y.shift(),x="M",b.push(c,f),g="L";break;case"h":c+=y.shift(),x="L",b.push(c,f);break;case"H":c=y.shift(),x="L",b.push(c,f);break;case"v":f+=y.shift(),x="L",b.push(c,f);break;case"V":f=y.shift(),x="L",b.push(c,f);break;case"C":b.push(y.shift(),y.shift(),y.shift(),y.shift()),c=y.shift(),f=y.shift(),b.push(c,f);break;case"c":b.push(c+y.shift(),f+y.shift(),c+y.shift(),f+y.shift()),c+=y.shift(),f+=y.shift(),x="C",b.push(c,f);break;case"S":N=c,H=f,V=s[s.length-1],V.command==="C"&&(N=c+(c-V.points[2]),H=f+(f-V.points[3])),b.push(N,H,y.shift(),y.shift()),c=y.shift(),f=y.shift(),x="C",b.push(c,f);break;case"s":N=c,H=f,V=s[s.length-1],V.command==="C"&&(N=c+(c-V.points[2]),H=f+(f-V.points[3])),b.push(N,H,c+y.shift(),f+y.shift()),c+=y.shift(),f+=y.shift(),x="C",b.push(c,f);break;case"Q":b.push(y.shift(),y.shift()),c=y.shift(),f=y.shift(),b.push(c,f);break;case"q":b.push(c+y.shift(),f+y.shift()),c+=y.shift(),f+=y.shift(),x="Q",b.push(c,f);break;case"T":N=c,H=f,V=s[s.length-1],V.command==="Q"&&(N=c+(c-V.points[0]),H=f+(f-V.points[1])),c=y.shift(),f=y.shift(),x="Q",b.push(N,H,c,f);break;case"t":N=c,H=f,V=s[s.length-1],V.command==="Q"&&(N=c+(c-V.points[0]),H=f+(f-V.points[1])),c+=y.shift(),f+=y.shift(),x="Q",b.push(N,H,c,f);break;case"A":O=y.shift(),M=y.shift(),F=y.shift(),J=y.shift(),X=y.shift(),re=c,ae=f,c=y.shift(),f=y.shift(),x="A",b=this.convertEndpointToCenterParameterization(re,ae,c,f,J,X,O,M,F);break;case"a":O=y.shift(),M=y.shift(),F=y.shift(),J=y.shift(),X=y.shift(),re=c,ae=f,c+=y.shift(),f+=y.shift(),x="A",b=this.convertEndpointToCenterParameterization(re,ae,c,f,J,X,O,M,F);break}s.push({command:x||g,points:b,start:{x:j,y:R},pathLength:this.calcLength(j,R,x||g,b)})}(g==="z"||g==="Z")&&s.push({command:"z",points:[],start:void 0,pathLength:0})}return s}static calcLength(e,r,n,i){var a,s,l,c,f=Ke;switch(n){case"L":return f.getLineLength(e,r,i[0],i[1]);case"C":for(a=0,s=f.getPointOnCubicBezier(0,e,r,i[0],i[1],i[2],i[3],i[4],i[5]),c=.01;c<=1;c+=.01)l=f.getPointOnCubicBezier(c,e,r,i[0],i[1],i[2],i[3],i[4],i[5]),a+=f.getLineLength(s.x,s.y,l.x,l.y),s=l;return a;case"Q":for(a=0,s=f.getPointOnQuadraticBezier(0,e,r,i[0],i[1],i[2],i[3]),c=.01;c<=1;c+=.01)l=f.getPointOnQuadraticBezier(c,e,r,i[0],i[1],i[2],i[3]),a+=f.getLineLength(s.x,s.y,l.x,l.y),s=l;return a;case"A":a=0;var p=i[4],h=i[5],m=i[4]+h,g=Math.PI/180;if(Math.abs(p-m)<g&&(g=Math.abs(p-m)),s=f.getPointOnEllipticalArc(i[0],i[1],i[2],i[3],p,0),h<0)for(c=p-g;c>m;c-=g)l=f.getPointOnEllipticalArc(i[0],i[1],i[2],i[3],c,0),a+=f.getLineLength(s.x,s.y,l.x,l.y),s=l;else for(c=p+g;c<m;c+=g)l=f.getPointOnEllipticalArc(i[0],i[1],i[2],i[3],c,0),a+=f.getLineLength(s.x,s.y,l.x,l.y),s=l;return l=f.getPointOnEllipticalArc(i[0],i[1],i[2],i[3],m,0),a+=f.getLineLength(s.x,s.y,l.x,l.y),a}return 0}static convertEndpointToCenterParameterization(e,r,n,i,a,s,l,c,f){var p=f*(Math.PI/180),h=Math.cos(p)*(e-n)/2+Math.sin(p)*(r-i)/2,m=-1*Math.sin(p)*(e-n)/2+Math.cos(p)*(r-i)/2,g=h*h/(l*l)+m*m/(c*c);g>1&&(l*=Math.sqrt(g),c*=Math.sqrt(g));var y=Math.sqrt((l*l*(c*c)-l*l*(m*m)-c*c*(h*h))/(l*l*(m*m)+c*c*(h*h)));a===s&&(y*=-1),isNaN(y)&&(y=0);var k=y*l*m/c,q=y*-c*h/l,P=(e+n)/2+Math.cos(p)*k-Math.sin(p)*q,x=(r+i)/2+Math.sin(p)*k+Math.cos(p)*q,b=function(M){return Math.sqrt(M[0]*M[0]+M[1]*M[1])},j=function(M,F){return(M[0]*F[0]+M[1]*F[1])/(b(M)*b(F))},R=function(M,F){return(M[0]*F[1]<M[1]*F[0]?-1:1)*Math.acos(j(M,F))},V=R([1,0],[(h-k)/l,(m-q)/c]),N=[(h-k)/l,(m-q)/c],H=[(-1*h-k)/l,(-1*m-q)/c],O=R(N,H);return j(N,H)<=-1&&(O=Math.PI),j(N,H)>=1&&(O=0),s===0&&O>0&&(O=O-2*Math.PI),s===1&&O<0&&(O=O+2*Math.PI),[P,x,l,c,V,O,p,s]}}Ke.prototype.className="Path";Ke.prototype._attrsAffectingSize=["data"];bt(Ke);z.addGetterSetter(Ke,"data");class Js extends na{_sceneFunc(e){super._sceneFunc(e);var r=Math.PI*2,n=this.points(),i=n,a=this.tension()!==0&&n.length>4;a&&(i=this.getTensionPoints());var s=this.pointerLength(),l=n.length,c,f;if(a){const m=[i[i.length-4],i[i.length-3],i[i.length-2],i[i.length-1],n[l-2],n[l-1]],g=Ke.calcLength(i[i.length-4],i[i.length-3],"C",m),y=Ke.getPointOnQuadraticBezier(Math.min(1,1-s/g),m[0],m[1],m[2],m[3],m[4],m[5]);c=n[l-2]-y.x,f=n[l-1]-y.y}else c=n[l-2]-n[l-4],f=n[l-1]-n[l-3];var p=(Math.atan2(f,c)+r)%r,h=this.pointerWidth();this.pointerAtEnding()&&(e.save(),e.beginPath(),e.translate(n[l-2],n[l-1]),e.rotate(p),e.moveTo(0,0),e.lineTo(-s,h/2),e.lineTo(-s,-h/2),e.closePath(),e.restore(),this.__fillStroke(e)),this.pointerAtBeginning()&&(e.save(),e.beginPath(),e.translate(n[0],n[1]),a?(c=(i[0]+i[2])/2-n[0],f=(i[1]+i[3])/2-n[1]):(c=n[2]-n[0],f=n[3]-n[1]),e.rotate((Math.atan2(-f,-c)+r)%r),e.moveTo(0,0),e.lineTo(-s,h/2),e.lineTo(-s,-h/2),e.closePath(),e.restore(),this.__fillStroke(e))}__fillStroke(e){var r=this.dashEnabled();r&&(this.attrs.dashEnabled=!1,e.setLineDash([])),e.fillStrokeShape(this),r&&(this.attrs.dashEnabled=!0)}getSelfRect(){const e=super.getSelfRect(),r=this.pointerWidth()/2;return{x:e.x-r,y:e.y-r,width:e.width+r*2,height:e.height+r*2}}}Js.prototype.className="Arrow";bt(Js);z.addGetterSetter(Js,"pointerLength",10,ce());z.addGetterSetter(Js,"pointerWidth",10,ce());z.addGetterSetter(Js,"pointerAtBeginning",!1);z.addGetterSetter(Js,"pointerAtEnding",!0);class pl extends se{_sceneFunc(e){e.beginPath(),e.arc(0,0,this.attrs.radius||0,0,Math.PI*2,!1),e.closePath(),e.fillStrokeShape(this)}getWidth(){return this.radius()*2}getHeight(){return this.radius()*2}setWidth(e){this.radius()!==e/2&&this.radius(e/2)}setHeight(e){this.radius()!==e/2&&this.radius(e/2)}}pl.prototype._centroid=!0;pl.prototype.className="Circle";pl.prototype._attrsAffectingSize=["radius"];bt(pl);z.addGetterSetter(pl,"radius",0,ce());class is extends se{_sceneFunc(e){var r=this.radiusX(),n=this.radiusY();e.beginPath(),e.save(),r!==n&&e.scale(1,n/r),e.arc(0,0,r,0,Math.PI*2,!1),e.restore(),e.closePath(),e.fillStrokeShape(this)}getWidth(){return this.radiusX()*2}getHeight(){return this.radiusY()*2}setWidth(e){this.radiusX(e/2)}setHeight(e){this.radiusY(e/2)}}is.prototype.className="Ellipse";is.prototype._centroid=!0;is.prototype._attrsAffectingSize=["radiusX","radiusY"];bt(is);z.addComponentsGetterSetter(is,"radius",["x","y"]);z.addGetterSetter(is,"radiusX",0,ce());z.addGetterSetter(is,"radiusY",0,ce());class _n extends se{constructor(e){super(e),this.on("imageChange.konva",()=>{this._setImageLoad()}),this._setImageLoad()}_setImageLoad(){const e=this.image();e&&e.complete||e&&e.readyState===4||e&&e.addEventListener&&e.addEventListener("load",()=>{this._requestDraw()})}_useBufferCanvas(){return super._useBufferCanvas(!0)}_sceneFunc(e){const r=this.getWidth(),n=this.getHeight(),i=this.attrs.image;let a;if(i){const s=this.attrs.cropWidth,l=this.attrs.cropHeight;s&&l?a=[i,this.cropX(),this.cropY(),s,l,0,0,r,n]:a=[i,0,0,r,n]}(this.hasFill()||this.hasStroke())&&(e.beginPath(),e.rect(0,0,r,n),e.closePath(),e.fillStrokeShape(this)),i&&e.drawImage.apply(e,a)}_hitFunc(e){var r=this.width(),n=this.height();e.beginPath(),e.rect(0,0,r,n),e.closePath(),e.fillStrokeShape(this)}getWidth(){var e,r;return(e=this.attrs.width)!==null&&e!==void 0?e:(r=this.image())===null||r===void 0?void 0:r.width}getHeight(){var e,r;return(e=this.attrs.height)!==null&&e!==void 0?e:(r=this.image())===null||r===void 0?void 0:r.height}static fromURL(e,r,n=null){var i=D.createImageElement();i.onload=function(){var a=new _n({image:i});r(a)},i.onerror=n,i.crossOrigin="Anonymous",i.src=e}}_n.prototype.className="Image";bt(_n);z.addGetterSetter(_n,"image");z.addComponentsGetterSetter(_n,"crop",["x","y","width","height"]);z.addGetterSetter(_n,"cropX",0,ce());z.addGetterSetter(_n,"cropY",0,ce());z.addGetterSetter(_n,"cropWidth",0,ce());z.addGetterSetter(_n,"cropHeight",0,ce());var uT=["fontFamily","fontSize","fontStyle","padding","lineHeight","text","width","height"],IC="Change.konva",EC="none",qg="up",Tg="right",jg="down",Rg="left",JC=uT.length;class P1 extends nl{constructor(e){super(e),this.on("add.konva",function(r){this._addListeners(r.child),this._sync()})}getText(){return this.find("Text")[0]}getTag(){return this.find("Tag")[0]}_addListeners(e){var r=this,n,i=function(){r._sync()};for(n=0;n<JC;n++)e.on(uT[n]+IC,i)}getWidth(){return this.getText().width()}getHeight(){return this.getText().height()}_sync(){var e=this.getText(),r=this.getTag(),n,i,a,s,l,c,f;if(e&&r){switch(n=e.width(),i=e.height(),a=r.pointerDirection(),s=r.pointerWidth(),f=r.pointerHeight(),l=0,c=0,a){case qg:l=n/2,c=-1*f;break;case Tg:l=n+s,c=i/2;break;case jg:l=n/2,c=i+f;break;case Rg:l=-1*s,c=i/2;break}r.setAttrs({x:-1*l,y:-1*c,width:n,height:i}),e.setAttrs({x:-1*l,y:-1*c})}}}P1.prototype.className="Label";bt(P1);class Ds extends se{_sceneFunc(e){var r=this.width(),n=this.height(),i=this.pointerDirection(),a=this.pointerWidth(),s=this.pointerHeight(),l=this.cornerRadius();let c=0,f=0,p=0,h=0;typeof l=="number"?c=f=p=h=Math.min(l,r/2,n/2):(c=Math.min(l[0]||0,r/2,n/2),f=Math.min(l[1]||0,r/2,n/2),h=Math.min(l[2]||0,r/2,n/2),p=Math.min(l[3]||0,r/2,n/2)),e.beginPath(),e.moveTo(c,0),i===qg&&(e.lineTo((r-a)/2,0),e.lineTo(r/2,-1*s),e.lineTo((r+a)/2,0)),e.lineTo(r-f,0),e.arc(r-f,f,f,Math.PI*3/2,0,!1),i===Tg&&(e.lineTo(r,(n-s)/2),e.lineTo(r+a,n/2),e.lineTo(r,(n+s)/2)),e.lineTo(r,n-h),e.arc(r-h,n-h,h,0,Math.PI/2,!1),i===jg&&(e.lineTo((r+a)/2,n),e.lineTo(r/2,n+s),e.lineTo((r-a)/2,n)),e.lineTo(p,n),e.arc(p,n-p,p,Math.PI/2,Math.PI,!1),i===Rg&&(e.lineTo(0,(n+s)/2),e.lineTo(-1*a,n/2),e.lineTo(0,(n-s)/2)),e.lineTo(0,c),e.arc(c,c,c,Math.PI,Math.PI*3/2,!1),e.closePath(),e.fillStrokeShape(this)}getSelfRect(){var e=0,r=0,n=this.pointerWidth(),i=this.pointerHeight(),a=this.pointerDirection(),s=this.width(),l=this.height();return a===qg?(r-=i,l+=i):a===jg?l+=i:a===Rg?(e-=n*1.5,s+=n):a===Tg&&(s+=n*1.5),{x:e,y:r,width:s,height:l}}}Ds.prototype.className="Tag";bt(Ds);z.addGetterSetter(Ds,"pointerDirection",EC);z.addGetterSetter(Ds,"pointerWidth",0,ce());z.addGetterSetter(Ds,"pointerHeight",0,ce());z.addGetterSetter(Ds,"cornerRadius",0,I5(4));class qc extends se{_sceneFunc(e){var r=this.cornerRadius(),n=this.width(),i=this.height();if(e.beginPath(),!r)e.rect(0,0,n,i);else{let a=0,s=0,l=0,c=0;typeof r=="number"?a=s=l=c=Math.min(r,n/2,i/2):(a=Math.min(r[0]||0,n/2,i/2),s=Math.min(r[1]||0,n/2,i/2),c=Math.min(r[2]||0,n/2,i/2),l=Math.min(r[3]||0,n/2,i/2)),e.moveTo(a,0),e.lineTo(n-s,0),e.arc(n-s,s,s,Math.PI*3/2,0,!1),e.lineTo(n,i-c),e.arc(n-c,i-c,c,0,Math.PI/2,!1),e.lineTo(l,i),e.arc(l,i-l,l,Math.PI/2,Math.PI,!1),e.lineTo(0,a),e.arc(a,a,a,Math.PI,Math.PI*3/2,!1)}e.closePath(),e.fillStrokeShape(this)}}qc.prototype.className="Rect";bt(qc);z.addGetterSetter(qc,"cornerRadius",0,I5(4));class Gs extends se{_sceneFunc(e){const r=this._getPoints();e.beginPath(),e.moveTo(r[0].x,r[0].y);for(var n=1;n<r.length;n++)e.lineTo(r[n].x,r[n].y);e.closePath(),e.fillStrokeShape(this)}_getPoints(){const e=this.attrs.sides,r=this.attrs.radius||0,n=[];for(var i=0;i<e;i++)n.push({x:r*Math.sin(i*2*Math.PI/e),y:-1*r*Math.cos(i*2*Math.PI/e)});return n}getSelfRect(){const e=this._getPoints();var r=e[0].x,n=e[0].y,i=e[0].x,a=e[0].y;return e.forEach(s=>{r=Math.min(r,s.x),n=Math.max(n,s.x),i=Math.min(i,s.y),a=Math.max(a,s.y)}),{x:r,y:i,width:n-r,height:a-i}}getWidth(){return this.radius()*2}getHeight(){return this.radius()*2}setWidth(e){this.radius(e/2)}setHeight(e){this.radius(e/2)}}Gs.prototype.className="RegularPolygon";Gs.prototype._centroid=!0;Gs.prototype._attrsAffectingSize=["radius"];bt(Gs);z.addGetterSetter(Gs,"radius",0,ce());z.addGetterSetter(Gs,"sides",0,ce());var Yw=Math.PI*2;class Ks extends se{_sceneFunc(e){e.beginPath(),e.arc(0,0,this.innerRadius(),0,Yw,!1),e.moveTo(this.outerRadius(),0),e.arc(0,0,this.outerRadius(),Yw,0,!0),e.closePath(),e.fillStrokeShape(this)}getWidth(){return this.outerRadius()*2}getHeight(){return this.outerRadius()*2}setWidth(e){this.outerRadius(e/2)}setHeight(e){this.outerRadius(e/2)}}Ks.prototype.className="Ring";Ks.prototype._centroid=!0;Ks.prototype._attrsAffectingSize=["innerRadius","outerRadius"];bt(Ks);z.addGetterSetter(Ks,"innerRadius",0,ce());z.addGetterSetter(Ks,"outerRadius",0,ce());class Ti extends se{constructor(e){super(e),this._updated=!0,this.anim=new kn(()=>{var r=this._updated;return this._updated=!1,r}),this.on("animationChange.konva",function(){this.frameIndex(0)}),this.on("frameIndexChange.konva",function(){this._updated=!0}),this.on("frameRateChange.konva",function(){!this.anim.isRunning()||(clearInterval(this.interval),this._setInterval())})}_sceneFunc(e){var r=this.animation(),n=this.frameIndex(),i=n*4,a=this.animations()[r],s=this.frameOffsets(),l=a[i+0],c=a[i+1],f=a[i+2],p=a[i+3],h=this.image();if((this.hasFill()||this.hasStroke())&&(e.beginPath(),e.rect(0,0,f,p),e.closePath(),e.fillStrokeShape(this)),h)if(s){var m=s[r],g=n*2;e.drawImage(h,l,c,f,p,m[g+0],m[g+1],f,p)}else e.drawImage(h,l,c,f,p,0,0,f,p)}_hitFunc(e){var r=this.animation(),n=this.frameIndex(),i=n*4,a=this.animations()[r],s=this.frameOffsets(),l=a[i+2],c=a[i+3];if(e.beginPath(),s){var f=s[r],p=n*2;e.rect(f[p+0],f[p+1],l,c)}else e.rect(0,0,l,c);e.closePath(),e.fillShape(this)}_useBufferCanvas(){return super._useBufferCanvas(!0)}_setInterval(){var e=this;this.interval=setInterval(function(){e._updateIndex()},1e3/this.frameRate())}start(){if(!this.isRunning()){var e=this.getLayer();this.anim.setLayers(e),this._setInterval(),this.anim.start()}}stop(){this.anim.stop(),clearInterval(this.interval)}isRunning(){return this.anim.isRunning()}_updateIndex(){var e=this.frameIndex(),r=this.animation(),n=this.animations(),i=n[r],a=i.length/4;e<a-1?this.frameIndex(e+1):this.frameIndex(0)}}Ti.prototype.className="Sprite";bt(Ti);z.addGetterSetter(Ti,"animation");z.addGetterSetter(Ti,"animations");z.addGetterSetter(Ti,"frameOffsets");z.addGetterSetter(Ti,"image");z.addGetterSetter(Ti,"frameIndex",0,ce());z.addGetterSetter(Ti,"frameRate",17,ce());z.backCompat(Ti,{index:"frameIndex",getIndex:"getFrameIndex",setIndex:"setFrameIndex"});class as extends se{_sceneFunc(e){var r=this.innerRadius(),n=this.outerRadius(),i=this.numPoints();e.beginPath(),e.moveTo(0,0-n);for(var a=1;a<i*2;a++){var s=a%2===0?n:r,l=s*Math.sin(a*Math.PI/i),c=-1*s*Math.cos(a*Math.PI/i);e.lineTo(l,c)}e.closePath(),e.fillStrokeShape(this)}getWidth(){return this.outerRadius()*2}getHeight(){return this.outerRadius()*2}setWidth(e){this.outerRadius(e/2)}setHeight(e){this.outerRadius(e/2)}}as.prototype.className="Star";as.prototype._centroid=!0;as.prototype._attrsAffectingSize=["innerRadius","outerRadius"];bt(as);z.addGetterSetter(as,"numPoints",5,ce());z.addGetterSetter(as,"innerRadius",0,ce());z.addGetterSetter(as,"outerRadius",0,ce());function cT(t){return Array.from(t)}var sd="auto",DC="center",$l="justify",GC="Change.konva",KC="2d",Cw="-",fT="left",BC="text",ZC="Text",XC="top",QC="bottom",Fw="middle",dT="normal",_C="px ",od=" ",$C="right",eF="word",tF="char",rF="none",$v="\u2026",pT=["fontFamily","fontSize","fontStyle","fontVariant","padding","align","verticalAlign","lineHeight","text","width","height","wrap","ellipsis","letterSpacing"],nF=pT.length;function iF(t){return t.split(",").map(e=>{e=e.trim();const r=e.indexOf(" ")>=0,n=e.indexOf('"')>=0||e.indexOf("'")>=0;return r&&!n&&(e=`"${e}"`),e}).join(", ")}var ld;function ey(){return ld||(ld=D.createCanvasElement().getContext(KC),ld)}function aF(t){t.fillText(this._partialText,this._partialTextX,this._partialTextY)}function sF(t){t.strokeText(this._partialText,this._partialTextX,this._partialTextY)}function oF(t){return t=t||{},!t.fillLinearGradientColorStops&&!t.fillRadialGradientColorStops&&!t.fillPatternImage&&(t.fill=t.fill||"black"),t}class wt extends se{constructor(e){super(oF(e)),this._partialTextX=0,this._partialTextY=0;for(var r=0;r<nF;r++)this.on(pT[r]+GC,this._setTextData);this._setTextData()}_sceneFunc(e){var r=this.textArr,n=r.length;if(!!this.text()){var i=this.padding(),a=this.fontSize(),s=this.lineHeight()*a,l=this.verticalAlign(),c=0,f=this.align(),p=this.getWidth(),h=this.letterSpacing(),m=this.fill(),g=this.textDecoration(),y=g.indexOf("underline")!==-1,k=g.indexOf("line-through")!==-1,q,P=0,P=s/2,x=0,b=0;for(e.setAttr("font",this._getContextFont()),e.setAttr("textBaseline",Fw),e.setAttr("textAlign",fT),l===Fw?c=(this.getHeight()-n*s-i*2)/2:l===QC&&(c=this.getHeight()-n*s-i*2),e.translate(i,c+i),q=0;q<n;q++){var x=0,b=0,j=r[q],R=j.text,V=j.width,N=j.lastInParagraph,H,O,M;if(e.save(),f===$C?x+=p-V-i*2:f===DC&&(x+=(p-V-i*2)/2),y&&(e.save(),e.beginPath(),e.moveTo(x,P+b+Math.round(a/2)),H=R.split(" ").length-1,O=H===0,M=f===$l&&N&&!O?p-i*2:V,e.lineTo(x+Math.round(M),P+b+Math.round(a/2)),e.lineWidth=a/15,e.strokeStyle=m,e.stroke(),e.restore()),k&&(e.save(),e.beginPath(),e.moveTo(x,P+b),H=R.split(" ").length-1,O=H===0,M=f===$l&&N&&!O?p-i*2:V,e.lineTo(x+Math.round(M),P+b),e.lineWidth=a/15,e.strokeStyle=m,e.stroke(),e.restore()),h!==0||f===$l){H=R.split(" ").length-1;for(var F=cT(R),J=0;J<F.length;J++){var X=F[J];X===" "&&!N&&f===$l&&(x+=(p-i*2-V)/H),this._partialTextX=x,this._partialTextY=P+b,this._partialText=X,e.fillStrokeShape(this),x+=this.measureSize(X).width+h}}else this._partialTextX=x,this._partialTextY=P+b,this._partialText=R,e.fillStrokeShape(this);e.restore(),n>1&&(P+=s)}}}_hitFunc(e){var r=this.getWidth(),n=this.getHeight();e.beginPath(),e.rect(0,0,r,n),e.closePath(),e.fillStrokeShape(this)}setText(e){var r=D._isString(e)?e:e==null?"":e+"";return this._setAttr(BC,r),this}getWidth(){var e=this.attrs.width===sd||this.attrs.width===void 0;return e?this.getTextWidth()+this.padding()*2:this.attrs.width}getHeight(){var e=this.attrs.height===sd||this.attrs.height===void 0;return e?this.fontSize()*this.textArr.length*this.lineHeight()+this.padding()*2:this.attrs.height}getTextWidth(){return this.textWidth}getTextHeight(){return D.warn("text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height."),this.textHeight}measureSize(e){var r=ey(),n=this.fontSize(),i;return r.save(),r.font=this._getContextFont(),i=r.measureText(e),r.restore(),{width:i.width,height:n}}_getContextFont(){return this.fontStyle()+od+this.fontVariant()+od+(this.fontSize()+_C)+iF(this.fontFamily())}_addTextLine(e){this.align()===$l&&(e=e.trim());var r=this._getTextWidth(e);return this.textArr.push({text:e,width:r,lastInParagraph:!1})}_getTextWidth(e){var r=this.letterSpacing(),n=e.length;return ey().measureText(e).width+(n?r*(n-1):0)}_setTextData(){var e=this.text().split(`
`),r=+this.fontSize(),n=0,i=this.lineHeight()*r,a=this.attrs.width,s=this.attrs.height,l=a!==sd&&a!==void 0,c=s!==sd&&s!==void 0,f=this.padding(),p=a-f*2,h=s-f*2,m=0,g=this.wrap(),y=g!==rF,k=g!==tF&&y,q=this.ellipsis();this.textArr=[],ey().font=this._getContextFont();for(var P=q?this._getTextWidth($v):0,x=0,b=e.length;x<b;++x){var j=e[x],R=this._getTextWidth(j);if(l&&R>p)for(;j.length>0;){for(var V=0,N=j.length,H="",O=0;V<N;){var M=V+N>>>1,F=j.slice(0,M+1),J=this._getTextWidth(F)+P;J<=p?(V=M+1,H=F,O=J):N=M}if(H){if(k){var X,re=j[H.length],ae=re===od||re===Cw;ae&&O<=p?X=H.length:X=Math.max(H.lastIndexOf(od),H.lastIndexOf(Cw))+1,X>0&&(V=X,H=H.slice(0,V),O=this._getTextWidth(H))}if(H=H.trimRight(),this._addTextLine(H),n=Math.max(n,O),m+=i,!y||c&&m+i>h){var te=this.textArr[this.textArr.length-1];if(te&&q){var ie=this._getTextWidth(te.text+$v)<p;ie||(te.text=te.text.slice(0,te.text.length-3)),this.textArr.splice(this.textArr.length-1,1),this._addTextLine(te.text+$v)}break}if(j=j.slice(V),j=j.trimLeft(),j.length>0&&(R=this._getTextWidth(j),R<=p)){this._addTextLine(j),m+=i,n=Math.max(n,R);break}}else break}else this._addTextLine(j),m+=i,n=Math.max(n,R);if(c&&m+i>h)break;this.textArr[this.textArr.length-1]&&(this.textArr[this.textArr.length-1].lastInParagraph=!0)}this.textHeight=r,this.textWidth=n}getStrokeScaleEnabled(){return!0}}wt.prototype._fillFunc=aF;wt.prototype._strokeFunc=sF;wt.prototype.className=ZC;wt.prototype._attrsAffectingSize=["text","fontSize","padding","wrap","lineHeight","letterSpacing"];bt(wt);z.overWriteSetter(wt,"width",g1());z.overWriteSetter(wt,"height",g1());z.addGetterSetter(wt,"fontFamily","Arial");z.addGetterSetter(wt,"fontSize",12,ce());z.addGetterSetter(wt,"fontStyle",dT);z.addGetterSetter(wt,"fontVariant",dT);z.addGetterSetter(wt,"padding",0,ce());z.addGetterSetter(wt,"align",fT);z.addGetterSetter(wt,"verticalAlign",XC);z.addGetterSetter(wt,"lineHeight",1,ce());z.addGetterSetter(wt,"wrap",eF);z.addGetterSetter(wt,"ellipsis",!1,Qn());z.addGetterSetter(wt,"letterSpacing",0,ce());z.addGetterSetter(wt,"text","",dl());z.addGetterSetter(wt,"textDecoration","");var lF="",hT="normal";function mT(t){t.fillText(this.partialText,0,0)}function vT(t){t.strokeText(this.partialText,0,0)}class Gt extends se{constructor(e){super(e),this.dummyCanvas=D.createCanvasElement(),this.dataArray=[],this.dataArray=Ke.parsePathData(this.attrs.data),this.on("dataChange.konva",function(){this.dataArray=Ke.parsePathData(this.attrs.data),this._setTextData()}),this.on("textChange.konva alignChange.konva letterSpacingChange.konva kerningFuncChange.konva fontSizeChange.konva fontFamilyChange.konva",this._setTextData),this._setTextData()}_sceneFunc(e){e.setAttr("font",this._getContextFont()),e.setAttr("textBaseline",this.textBaseline()),e.setAttr("textAlign","left"),e.save();var r=this.textDecoration(),n=this.fill(),i=this.fontSize(),a=this.glyphInfo;r==="underline"&&e.beginPath();for(var s=0;s<a.length;s++){e.save();var l=a[s].p0;e.translate(l.x,l.y),e.rotate(a[s].rotation),this.partialText=a[s].text,e.fillStrokeShape(this),r==="underline"&&(s===0&&e.moveTo(0,i/2+1),e.lineTo(i,i/2+1)),e.restore()}r==="underline"&&(e.strokeStyle=n,e.lineWidth=i/20,e.stroke()),e.restore()}_hitFunc(e){e.beginPath();var r=this.glyphInfo;if(r.length>=1){var n=r[0].p0;e.moveTo(n.x,n.y)}for(var i=0;i<r.length;i++){var a=r[i].p1;e.lineTo(a.x,a.y)}e.setAttr("lineWidth",this.fontSize()),e.setAttr("strokeStyle",this.colorKey),e.stroke()}getTextWidth(){return this.textWidth}getTextHeight(){return D.warn("text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height."),this.textHeight}setText(e){return wt.prototype.setText.call(this,e)}_getContextFont(){return wt.prototype._getContextFont.call(this)}_getTextSize(e){var r=this.dummyCanvas,n=r.getContext("2d");n.save(),n.font=this._getContextFont();var i=n.measureText(e);return n.restore(),{width:i.width,height:parseInt(this.attrs.fontSize,10)}}_setTextData(){var e=this,r=this._getTextSize(this.attrs.text),n=this.letterSpacing(),i=this.align(),a=this.kerningFunc();this.textWidth=r.width,this.textHeight=r.height;var s=Math.max(this.textWidth+((this.attrs.text||"").length-1)*n,0);this.glyphInfo=[];for(var l=0,c=0;c<e.dataArray.length;c++)e.dataArray[c].pathLength>0&&(l+=e.dataArray[c].pathLength);var f=0;i==="center"&&(f=Math.max(0,l/2-s/2)),i==="right"&&(f=Math.max(0,l-s));for(var p=cT(this.text()),h=this.text().split(" ").length-1,m,g,y,k=-1,q=0,P=function(){q=0;for(var J=e.dataArray,X=k+1;X<J.length;X++){if(J[X].pathLength>0)return k=X,J[X];J[X].command==="M"&&(m={x:J[X].points[0],y:J[X].points[1]})}return{}},x=function(J){var X=e._getTextSize(J).width+n;J===" "&&i==="justify"&&(X+=(l-s)/h);var re=0,ae=0;for(g=void 0;Math.abs(X-re)/X>.01&&ae<20;){ae++;for(var te=re;y===void 0;)y=P(),y&&te+y.pathLength<X&&(te+=y.pathLength,y=void 0);if(y==={}||m===void 0)return;var ie=!1;switch(y.command){case"L":Ke.getLineLength(m.x,m.y,y.points[0],y.points[1])>X?g=Ke.getPointOnLine(X,m.x,m.y,y.points[0],y.points[1],m.x,m.y):y=void 0;break;case"A":var K=y.points[4],oe=y.points[5],ne=y.points[4]+oe;q===0?q=K+1e-8:X>re?q+=Math.PI/180*oe/Math.abs(oe):q-=Math.PI/360*oe/Math.abs(oe),(oe<0&&q<ne||oe>=0&&q>ne)&&(q=ne,ie=!0),g=Ke.getPointOnEllipticalArc(y.points[0],y.points[1],y.points[2],y.points[3],q,y.points[6]);break;case"C":q===0?X>y.pathLength?q=1e-8:q=X/y.pathLength:X>re?q+=(X-re)/y.pathLength/2:q=Math.max(q-(re-X)/y.pathLength/2,0),q>1&&(q=1,ie=!0),g=Ke.getPointOnCubicBezier(q,y.start.x,y.start.y,y.points[0],y.points[1],y.points[2],y.points[3],y.points[4],y.points[5]);break;case"Q":q===0?q=X/y.pathLength:X>re?q+=(X-re)/y.pathLength:q-=(re-X)/y.pathLength,q>1&&(q=1,ie=!0),g=Ke.getPointOnQuadraticBezier(q,y.start.x,y.start.y,y.points[0],y.points[1],y.points[2],y.points[3]);break}g!==void 0&&(re=Ke.getLineLength(m.x,m.y,g.x,g.y)),ie&&(ie=!1,y=void 0)}},b="C",j=e._getTextSize(b).width+n,R=f/j-1,V=0;V<R&&(x(b),!(m===void 0||g===void 0));V++)m=g;for(var N=0;N<p.length&&(x(p[N]),!(m===void 0||g===void 0));N++){var H=Ke.getLineLength(m.x,m.y,g.x,g.y),O=0;if(a)try{O=a(p[N-1],p[N])*this.fontSize()}catch{O=0}m.x+=O,g.x+=O,this.textWidth+=O;var M=Ke.getPointOnLine(O+H/2,m.x,m.y,g.x,g.y),F=Math.atan2(g.y-m.y,g.x-m.x);this.glyphInfo.push({transposeX:M.x,transposeY:M.y,text:p[N],rotation:F,p0:m,p1:g}),m=g}}getSelfRect(){if(!this.glyphInfo.length)return{x:0,y:0,width:0,height:0};var e=[];this.glyphInfo.forEach(function(p){e.push(p.p0.x),e.push(p.p0.y),e.push(p.p1.x),e.push(p.p1.y)});for(var r=e[0]||0,n=e[0]||0,i=e[1]||0,a=e[1]||0,s,l,c=0;c<e.length/2;c++)s=e[c*2],l=e[c*2+1],r=Math.min(r,s),n=Math.max(n,s),i=Math.min(i,l),a=Math.max(a,l);var f=this.fontSize();return{x:r-f/2,y:i-f/2,width:n-r+f,height:a-i+f}}}Gt.prototype._fillFunc=mT;Gt.prototype._strokeFunc=vT;Gt.prototype._fillFuncHit=mT;Gt.prototype._strokeFuncHit=vT;Gt.prototype.className="TextPath";Gt.prototype._attrsAffectingSize=["text","fontSize","data"];bt(Gt);z.addGetterSetter(Gt,"data");z.addGetterSetter(Gt,"fontFamily","Arial");z.addGetterSetter(Gt,"fontSize",12,ce());z.addGetterSetter(Gt,"fontStyle",hT);z.addGetterSetter(Gt,"align","left");z.addGetterSetter(Gt,"letterSpacing",0,ce());z.addGetterSetter(Gt,"textBaseline","middle");z.addGetterSetter(Gt,"fontVariant",hT);z.addGetterSetter(Gt,"text",lF);z.addGetterSetter(Gt,"textDecoration",null);z.addGetterSetter(Gt,"kerningFunc",null);var yT="tr-konva",uF=["resizeEnabledChange","rotateAnchorOffsetChange","rotateEnabledChange","enabledAnchorsChange","anchorSizeChange","borderEnabledChange","borderStrokeChange","borderStrokeWidthChange","borderDashChange","anchorStrokeChange","anchorStrokeWidthChange","anchorFillChange","anchorCornerRadiusChange","ignoreStrokeChange"].map(t=>t+`.${yT}`).join(" "),Iw="nodesRect",cF=["widthChange","heightChange","scaleXChange","scaleYChange","skewXChange","skewYChange","rotationChange","offsetXChange","offsetYChange","transformsEnabledChange","strokeWidthChange"],fF={"top-left":-45,"top-center":0,"top-right":45,"middle-right":-90,"middle-left":90,"bottom-left":-135,"bottom-center":180,"bottom-right":135};const dF="ontouchstart"in ye._global;function pF(t,e){if(t==="rotater")return"crosshair";e+=D.degToRad(fF[t]||0);var r=(D.radToDeg(e)%360+360)%360;return D._inRange(r,315+22.5,360)||D._inRange(r,0,22.5)?"ns-resize":D._inRange(r,45-22.5,45+22.5)?"nesw-resize":D._inRange(r,90-22.5,90+22.5)?"ew-resize":D._inRange(r,135-22.5,135+22.5)?"nwse-resize":D._inRange(r,180-22.5,180+22.5)?"ns-resize":D._inRange(r,225-22.5,225+22.5)?"nesw-resize":D._inRange(r,270-22.5,270+22.5)?"ew-resize":D._inRange(r,315-22.5,315+22.5)?"nwse-resize":(D.error("Transformer has unknown angle for cursor detection: "+r),"pointer")}var wp=["top-left","top-center","top-right","middle-right","middle-left","bottom-left","bottom-center","bottom-right"],Ew=1e8;function hF(t){return{x:t.x+t.width/2*Math.cos(t.rotation)+t.height/2*Math.sin(-t.rotation),y:t.y+t.height/2*Math.cos(t.rotation)+t.width/2*Math.sin(t.rotation)}}function gT(t,e,r){const n=r.x+(t.x-r.x)*Math.cos(e)-(t.y-r.y)*Math.sin(e),i=r.y+(t.x-r.x)*Math.sin(e)+(t.y-r.y)*Math.cos(e);return Object.assign(Object.assign({},t),{rotation:t.rotation+e,x:n,y:i})}function mF(t,e){const r=hF(t);return gT(t,e,r)}function vF(t,e,r){let n=e;for(let i=0;i<t.length;i++){const a=ye.getAngle(t[i]),s=Math.abs(a-e)%(Math.PI*2);Math.min(s,Math.PI*2-s)<r&&(n=a)}return n}class Ie extends nl{constructor(e){super(e),this._transforming=!1,this._createElements(),this._handleMouseMove=this._handleMouseMove.bind(this),this._handleMouseUp=this._handleMouseUp.bind(this),this.update=this.update.bind(this),this.on(uF,this.update),this.getNode()&&this.update()}attachTo(e){return this.setNode(e),this}setNode(e){return D.warn("tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead."),this.setNodes([e])}getNode(){return this._nodes&&this._nodes[0]}_getEventNamespace(){return yT+this._id}setNodes(e=[]){this._nodes&&this._nodes.length&&this.detach(),this._nodes=e,e.length===1&&this.useSingleNodeRotation()?this.rotation(e[0].getAbsoluteRotation()):this.rotation(0),this._nodes.forEach(n=>{const i=()=>{this.nodes().length===1&&this.useSingleNodeRotation()&&this.rotation(this.nodes()[0].getAbsoluteRotation()),this._resetTransformCache(),!this._transforming&&!this.isDragging()&&this.update()},a=n._attrsAffectingSize.map(s=>s+"Change."+this._getEventNamespace()).join(" ");n.on(a,i),n.on(cF.map(s=>s+`.${this._getEventNamespace()}`).join(" "),i),n.on(`absoluteTransformChange.${this._getEventNamespace()}`,i),this._proxyDrag(n)}),this._resetTransformCache();var r=!!this.findOne(".top-left");return r&&this.update(),this}_proxyDrag(e){let r;e.on(`dragstart.${this._getEventNamespace()}`,n=>{r=e.getAbsolutePosition(),!this.isDragging()&&e!==this.findOne(".back")&&this.startDrag(n,!1)}),e.on(`dragmove.${this._getEventNamespace()}`,n=>{if(!r)return;const i=e.getAbsolutePosition(),a=i.x-r.x,s=i.y-r.y;this.nodes().forEach(l=>{if(l===e||l.isDragging())return;const c=l.getAbsolutePosition();l.setAbsolutePosition({x:c.x+a,y:c.y+s}),l.startDrag(n)}),r=null})}getNodes(){return this._nodes||[]}getActiveAnchor(){return this._movingAnchorName}detach(){this._nodes&&this._nodes.forEach(e=>{e.off("."+this._getEventNamespace())}),this._nodes=[],this._resetTransformCache()}_resetTransformCache(){this._clearCache(Iw),this._clearCache("transform"),this._clearSelfAndDescendantCache("absoluteTransform")}_getNodeRect(){return this._getCache(Iw,this.__getNodeRect)}__getNodeShape(e,r=this.rotation(),n){var i=e.getClientRect({skipTransform:!0,skipShadow:!0,skipStroke:this.ignoreStroke()}),a=e.getAbsoluteScale(n),s=e.getAbsolutePosition(n),l=i.x*a.x-e.offsetX()*a.x,c=i.y*a.y-e.offsetY()*a.y;const f=(ye.getAngle(e.getAbsoluteRotation())+Math.PI*2)%(Math.PI*2),p={x:s.x+l*Math.cos(f)+c*Math.sin(-f),y:s.y+c*Math.cos(f)+l*Math.sin(f),width:i.width*a.x,height:i.height*a.y,rotation:f};return gT(p,-ye.getAngle(r),{x:0,y:0})}__getNodeRect(){var e=this.getNode();if(!e)return{x:-Ew,y:-Ew,width:0,height:0,rotation:0};const r=[];this.nodes().map(f=>{const p=f.getClientRect({skipTransform:!0,skipShadow:!0,skipStroke:this.ignoreStroke()});var h=[{x:p.x,y:p.y},{x:p.x+p.width,y:p.y},{x:p.x+p.width,y:p.y+p.height},{x:p.x,y:p.y+p.height}],m=f.getAbsoluteTransform();h.forEach(function(g){var y=m.point(g);r.push(y)})});const n=new rn;n.rotate(-ye.getAngle(this.rotation()));var i,a,s,l;r.forEach(function(f){var p=n.point(f);i===void 0&&(i=s=p.x,a=l=p.y),i=Math.min(i,p.x),a=Math.min(a,p.y),s=Math.max(s,p.x),l=Math.max(l,p.y)}),n.invert();const c=n.point({x:i,y:a});return{x:c.x,y:c.y,width:s-i,height:l-a,rotation:ye.getAngle(this.rotation())}}getX(){return this._getNodeRect().x}getY(){return this._getNodeRect().y}getWidth(){return this._getNodeRect().width}getHeight(){return this._getNodeRect().height}_createElements(){this._createBack(),wp.forEach(function(e){this._createAnchor(e)}.bind(this)),this._createAnchor("rotater")}_createAnchor(e){var r=new qc({stroke:"rgb(0, 161, 255)",fill:"white",strokeWidth:1,name:e+" _anchor",dragDistance:0,draggable:!0,hitStrokeWidth:dF?10:"auto"}),n=this;r.on("mousedown touchstart",function(i){n._handleMouseDown(i)}),r.on("dragstart",i=>{r.stopDrag(),i.cancelBubble=!0}),r.on("dragend",i=>{i.cancelBubble=!0}),r.on("mouseenter",()=>{var i=ye.getAngle(this.rotation()),a=pF(e,i);r.getStage().content&&(r.getStage().content.style.cursor=a),this._cursorChange=!0}),r.on("mouseout",()=>{r.getStage().content&&(r.getStage().content.style.cursor=""),this._cursorChange=!1}),this.add(r)}_createBack(){var e=new se({name:"back",width:0,height:0,draggable:!0,sceneFunc(r){var n=this.getParent(),i=n.padding();r.beginPath(),r.rect(-i,-i,this.width()+i*2,this.height()+i*2),r.moveTo(this.width()/2,-i),n.rotateEnabled()&&r.lineTo(this.width()/2,-n.rotateAnchorOffset()*D._sign(this.height())-i),r.fillStrokeShape(this)},hitFunc:(r,n)=>{if(!!this.shouldOverdrawWholeArea()){var i=this.padding();r.beginPath(),r.rect(-i,-i,n.width()+i*2,n.height()+i*2),r.fillStrokeShape(n)}}});this.add(e),this._proxyDrag(e),e.on("dragstart",r=>{r.cancelBubble=!0}),e.on("dragmove",r=>{r.cancelBubble=!0}),e.on("dragend",r=>{r.cancelBubble=!0}),this.on("dragmove",r=>{this.update()})}_handleMouseDown(e){this._movingAnchorName=e.target.name().split(" ")[0];var r=this._getNodeRect(),n=r.width,i=r.height,a=Math.sqrt(Math.pow(n,2)+Math.pow(i,2));this.sin=Math.abs(i/a),this.cos=Math.abs(n/a),typeof window!="undefined"&&(window.addEventListener("mousemove",this._handleMouseMove),window.addEventListener("touchmove",this._handleMouseMove),window.addEventListener("mouseup",this._handleMouseUp,!0),window.addEventListener("touchend",this._handleMouseUp,!0)),this._transforming=!0;var s=e.target.getAbsolutePosition(),l=e.target.getStage().getPointerPosition();this._anchorDragOffset={x:l.x-s.x,y:l.y-s.y},this._fire("transformstart",{evt:e.evt,target:this.getNode()}),this._nodes.forEach(c=>{c._fire("transformstart",{evt:e.evt,target:c})})}_handleMouseMove(e){var r,n,i,a=this.findOne("."+this._movingAnchorName),s=a.getStage();s.setPointersPositions(e);const l=s.getPointerPosition();let c={x:l.x-this._anchorDragOffset.x,y:l.y-this._anchorDragOffset.y};const f=a.getAbsolutePosition();this.anchorDragBoundFunc()&&(c=this.anchorDragBoundFunc()(f,c,e)),a.setAbsolutePosition(c);const p=a.getAbsolutePosition();if(!(f.x===p.x&&f.y===p.y)){if(this._movingAnchorName==="rotater"){var h=this._getNodeRect();r=a.x()-h.width/2,n=-a.y()+h.height/2;let J=Math.atan2(-n,r)+Math.PI/2;h.height<0&&(J-=Math.PI);var m=ye.getAngle(this.rotation());const X=m+J,re=ye.getAngle(this.rotationSnapTolerance()),te=vF(this.rotationSnaps(),X,re)-h.rotation,ie=mF(h,te);this._fitNodesInto(ie,e);return}var g=this.keepRatio()||e.shiftKey,x=this.centeredScaling()||e.altKey;if(this._movingAnchorName==="top-left"){if(g){var y=x?{x:this.width()/2,y:this.height()/2}:{x:this.findOne(".bottom-right").x(),y:this.findOne(".bottom-right").y()};i=Math.sqrt(Math.pow(y.x-a.x(),2)+Math.pow(y.y-a.y(),2));var k=this.findOne(".top-left").x()>y.x?-1:1,q=this.findOne(".top-left").y()>y.y?-1:1;r=i*this.cos*k,n=i*this.sin*q,this.findOne(".top-left").x(y.x-r),this.findOne(".top-left").y(y.y-n)}}else if(this._movingAnchorName==="top-center")this.findOne(".top-left").y(a.y());else if(this._movingAnchorName==="top-right"){if(g){var y=x?{x:this.width()/2,y:this.height()/2}:{x:this.findOne(".bottom-left").x(),y:this.findOne(".bottom-left").y()};i=Math.sqrt(Math.pow(a.x()-y.x,2)+Math.pow(y.y-a.y(),2));var k=this.findOne(".top-right").x()<y.x?-1:1,q=this.findOne(".top-right").y()>y.y?-1:1;r=i*this.cos*k,n=i*this.sin*q,this.findOne(".top-right").x(y.x+r),this.findOne(".top-right").y(y.y-n)}var P=a.position();this.findOne(".top-left").y(P.y),this.findOne(".bottom-right").x(P.x)}else if(this._movingAnchorName==="middle-left")this.findOne(".top-left").x(a.x());else if(this._movingAnchorName==="middle-right")this.findOne(".bottom-right").x(a.x());else if(this._movingAnchorName==="bottom-left"){if(g){var y=x?{x:this.width()/2,y:this.height()/2}:{x:this.findOne(".top-right").x(),y:this.findOne(".top-right").y()};i=Math.sqrt(Math.pow(y.x-a.x(),2)+Math.pow(a.y()-y.y,2));var k=y.x<a.x()?-1:1,q=a.y()<y.y?-1:1;r=i*this.cos*k,n=i*this.sin*q,a.x(y.x-r),a.y(y.y+n)}P=a.position(),this.findOne(".top-left").x(P.x),this.findOne(".bottom-right").y(P.y)}else if(this._movingAnchorName==="bottom-center")this.findOne(".bottom-right").y(a.y());else if(this._movingAnchorName==="bottom-right"){if(g){var y=x?{x:this.width()/2,y:this.height()/2}:{x:this.findOne(".top-left").x(),y:this.findOne(".top-left").y()};i=Math.sqrt(Math.pow(a.x()-y.x,2)+Math.pow(a.y()-y.y,2));var k=this.findOne(".bottom-right").x()<y.x?-1:1,q=this.findOne(".bottom-right").y()<y.y?-1:1;r=i*this.cos*k,n=i*this.sin*q,this.findOne(".bottom-right").x(y.x+r),this.findOne(".bottom-right").y(y.y+n)}}else console.error(new Error("Wrong position argument of selection resizer: "+this._movingAnchorName));var x=this.centeredScaling()||e.altKey;if(x){var b=this.findOne(".top-left"),j=this.findOne(".bottom-right"),R=b.x(),V=b.y(),N=this.getWidth()-j.x(),H=this.getHeight()-j.y();j.move({x:-R,y:-V}),b.move({x:N,y:H})}var O=this.findOne(".top-left").getAbsolutePosition();r=O.x,n=O.y;var M=this.findOne(".bottom-right").x()-this.findOne(".top-left").x(),F=this.findOne(".bottom-right").y()-this.findOne(".top-left").y();this._fitNodesInto({x:r,y:n,width:M,height:F,rotation:ye.getAngle(this.rotation())},e)}}_handleMouseUp(e){this._removeEvents(e)}getAbsoluteTransform(){return this.getTransform()}_removeEvents(e){if(this._transforming){this._transforming=!1,typeof window!="undefined"&&(window.removeEventListener("mousemove",this._handleMouseMove),window.removeEventListener("touchmove",this._handleMouseMove),window.removeEventListener("mouseup",this._handleMouseUp,!0),window.removeEventListener("touchend",this._handleMouseUp,!0));var r=this.getNode();this._fire("transformend",{evt:e,target:r}),r&&this._nodes.forEach(n=>{n._fire("transformend",{evt:e,target:n})}),this._movingAnchorName=null}}_fitNodesInto(e,r){var n=this._getNodeRect();const i=1;if(D._inRange(e.width,-this.padding()*2-i,i)){this.update();return}if(D._inRange(e.height,-this.padding()*2-i,i)){this.update();return}const a=this.flipEnabled();var s=new rn;if(s.rotate(ye.getAngle(this.rotation())),this._movingAnchorName&&e.width<0&&this._movingAnchorName.indexOf("left")>=0){const h=s.point({x:-this.padding()*2,y:0});if(e.x+=h.x,e.y+=h.y,e.width+=this.padding()*2,this._movingAnchorName=this._movingAnchorName.replace("left","right"),this._anchorDragOffset.x-=h.x,this._anchorDragOffset.y-=h.y,!a){this.update();return}}else if(this._movingAnchorName&&e.width<0&&this._movingAnchorName.indexOf("right")>=0){const h=s.point({x:this.padding()*2,y:0});if(this._movingAnchorName=this._movingAnchorName.replace("right","left"),this._anchorDragOffset.x-=h.x,this._anchorDragOffset.y-=h.y,e.width+=this.padding()*2,!a){this.update();return}}if(this._movingAnchorName&&e.height<0&&this._movingAnchorName.indexOf("top")>=0){const h=s.point({x:0,y:-this.padding()*2});if(e.x+=h.x,e.y+=h.y,this._movingAnchorName=this._movingAnchorName.replace("top","bottom"),this._anchorDragOffset.x-=h.x,this._anchorDragOffset.y-=h.y,e.height+=this.padding()*2,!a){this.update();return}}else if(this._movingAnchorName&&e.height<0&&this._movingAnchorName.indexOf("bottom")>=0){const h=s.point({x:0,y:this.padding()*2});if(this._movingAnchorName=this._movingAnchorName.replace("bottom","top"),this._anchorDragOffset.x-=h.x,this._anchorDragOffset.y-=h.y,e.height+=this.padding()*2,!a){this.update();return}}if(this.boundBoxFunc()){const h=this.boundBoxFunc()(n,e);h?e=h:D.warn("boundBoxFunc returned falsy. You should return new bound rect from it!")}const l=1e7,c=new rn;c.translate(n.x,n.y),c.rotate(n.rotation),c.scale(n.width/l,n.height/l);const f=new rn;f.translate(e.x,e.y),f.rotate(e.rotation),f.scale(e.width/l,e.height/l);const p=f.multiply(c.invert());this._nodes.forEach(h=>{var m;const g=h.getParent().getAbsoluteTransform(),y=h.getTransform().copy();y.translate(h.offsetX(),h.offsetY());const k=new rn;k.multiply(g.copy().invert()).multiply(p).multiply(g).multiply(y);const q=k.decompose();h.setAttrs(q),this._fire("transform",{evt:r,target:h}),h._fire("transform",{evt:r,target:h}),(m=h.getLayer())===null||m===void 0||m.batchDraw()}),this.rotation(D._getRotation(e.rotation)),this._resetTransformCache(),this.update(),this.getLayer().batchDraw()}forceUpdate(){this._resetTransformCache(),this.update()}_batchChangeChild(e,r){this.findOne(e).setAttrs(r)}update(){var e,r=this._getNodeRect();this.rotation(D._getRotation(r.rotation));var n=r.width,i=r.height,a=this.enabledAnchors(),s=this.resizeEnabled(),l=this.padding(),c=this.anchorSize();this.find("._anchor").forEach(f=>{f.setAttrs({width:c,height:c,offsetX:c/2,offsetY:c/2,stroke:this.anchorStroke(),strokeWidth:this.anchorStrokeWidth(),fill:this.anchorFill(),cornerRadius:this.anchorCornerRadius()})}),this._batchChangeChild(".top-left",{x:0,y:0,offsetX:c/2+l,offsetY:c/2+l,visible:s&&a.indexOf("top-left")>=0}),this._batchChangeChild(".top-center",{x:n/2,y:0,offsetY:c/2+l,visible:s&&a.indexOf("top-center")>=0}),this._batchChangeChild(".top-right",{x:n,y:0,offsetX:c/2-l,offsetY:c/2+l,visible:s&&a.indexOf("top-right")>=0}),this._batchChangeChild(".middle-left",{x:0,y:i/2,offsetX:c/2+l,visible:s&&a.indexOf("middle-left")>=0}),this._batchChangeChild(".middle-right",{x:n,y:i/2,offsetX:c/2-l,visible:s&&a.indexOf("middle-right")>=0}),this._batchChangeChild(".bottom-left",{x:0,y:i,offsetX:c/2+l,offsetY:c/2-l,visible:s&&a.indexOf("bottom-left")>=0}),this._batchChangeChild(".bottom-center",{x:n/2,y:i,offsetY:c/2-l,visible:s&&a.indexOf("bottom-center")>=0}),this._batchChangeChild(".bottom-right",{x:n,y:i,offsetX:c/2-l,offsetY:c/2-l,visible:s&&a.indexOf("bottom-right")>=0}),this._batchChangeChild(".rotater",{x:n/2,y:-this.rotateAnchorOffset()*D._sign(i)-l,visible:this.rotateEnabled()}),this._batchChangeChild(".back",{width:n,height:i,visible:this.borderEnabled(),stroke:this.borderStroke(),strokeWidth:this.borderStrokeWidth(),dash:this.borderDash(),x:0,y:0}),(e=this.getLayer())===null||e===void 0||e.batchDraw()}isTransforming(){return this._transforming}stopTransform(){if(this._transforming){this._removeEvents();var e=this.findOne("."+this._movingAnchorName);e&&e.stopDrag()}}destroy(){return this.getStage()&&this._cursorChange&&this.getStage().content&&(this.getStage().content.style.cursor=""),nl.prototype.destroy.call(this),this.detach(),this._removeEvents(),this}toObject(){return fe.prototype.toObject.call(this)}}function yF(t){return t instanceof Array||D.warn("enabledAnchors value should be an array"),t instanceof Array&&t.forEach(function(e){wp.indexOf(e)===-1&&D.warn("Unknown anchor name: "+e+". Available names are: "+wp.join(", "))}),t||[]}Ie.prototype.className="Transformer";bt(Ie);z.addGetterSetter(Ie,"enabledAnchors",wp,yF);z.addGetterSetter(Ie,"flipEnabled",!0,Qn());z.addGetterSetter(Ie,"resizeEnabled",!0);z.addGetterSetter(Ie,"anchorSize",10,ce());z.addGetterSetter(Ie,"rotateEnabled",!0);z.addGetterSetter(Ie,"rotationSnaps",[]);z.addGetterSetter(Ie,"rotateAnchorOffset",50,ce());z.addGetterSetter(Ie,"rotationSnapTolerance",5,ce());z.addGetterSetter(Ie,"borderEnabled",!0);z.addGetterSetter(Ie,"anchorStroke","rgb(0, 161, 255)");z.addGetterSetter(Ie,"anchorStrokeWidth",1,ce());z.addGetterSetter(Ie,"anchorFill","white");z.addGetterSetter(Ie,"anchorCornerRadius",0,ce());z.addGetterSetter(Ie,"borderStroke","rgb(0, 161, 255)");z.addGetterSetter(Ie,"borderStrokeWidth",1,ce());z.addGetterSetter(Ie,"borderDash");z.addGetterSetter(Ie,"keepRatio",!0);z.addGetterSetter(Ie,"centeredScaling",!1);z.addGetterSetter(Ie,"ignoreStroke",!1);z.addGetterSetter(Ie,"padding",0,ce());z.addGetterSetter(Ie,"node");z.addGetterSetter(Ie,"nodes");z.addGetterSetter(Ie,"boundBoxFunc");z.addGetterSetter(Ie,"anchorDragBoundFunc");z.addGetterSetter(Ie,"shouldOverdrawWholeArea",!1);z.addGetterSetter(Ie,"useSingleNodeRotation",!0);z.backCompat(Ie,{lineEnabled:"borderEnabled",rotateHandlerOffset:"rotateAnchorOffset",enabledHandlers:"enabledAnchors"});class ia extends se{_sceneFunc(e){e.beginPath(),e.arc(0,0,this.radius(),0,ye.getAngle(this.angle()),this.clockwise()),e.lineTo(0,0),e.closePath(),e.fillStrokeShape(this)}getWidth(){return this.radius()*2}getHeight(){return this.radius()*2}setWidth(e){this.radius(e/2)}setHeight(e){this.radius(e/2)}}ia.prototype.className="Wedge";ia.prototype._centroid=!0;ia.prototype._attrsAffectingSize=["radius"];bt(ia);z.addGetterSetter(ia,"radius",0,ce());z.addGetterSetter(ia,"angle",0,ce());z.addGetterSetter(ia,"clockwise",!1);z.backCompat(ia,{angleDeg:"angle",getAngleDeg:"getAngle",setAngleDeg:"setAngle"});function Jw(){this.r=0,this.g=0,this.b=0,this.a=0,this.next=null}var gF=[512,512,456,512,328,456,335,512,405,328,271,456,388,335,292,512,454,405,364,328,298,271,496,456,420,388,360,335,312,292,273,512,482,454,428,405,383,364,345,328,312,298,284,271,259,496,475,456,437,420,404,388,374,360,347,335,323,312,302,292,282,273,265,512,497,482,468,454,441,428,417,405,394,383,373,364,354,345,337,328,320,312,305,298,291,284,278,271,265,259,507,496,485,475,465,456,446,437,428,420,412,404,396,388,381,374,367,360,354,347,341,335,329,323,318,312,307,302,297,292,287,282,278,273,269,265,261,512,505,497,489,482,475,468,461,454,447,441,435,428,422,417,411,405,399,394,389,383,378,373,368,364,359,354,350,345,341,337,332,328,324,320,316,312,309,305,301,298,294,291,287,284,281,278,274,271,268,265,262,259,257,507,501,496,491,485,480,475,470,465,460,456,451,446,442,437,433,428,424,420,416,412,408,404,400,396,392,388,385,381,377,374,370,367,363,360,357,354,350,347,344,341,338,335,332,329,326,323,320,318,315,312,310,307,304,302,299,297,294,292,289,287,285,282,280,278,275,273,271,269,267,265,263,261,259],AF=[9,11,12,13,13,14,14,15,15,15,15,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24];function SF(t,e){var r=t.data,n=t.width,i=t.height,a,s,l,c,f,p,h,m,g,y,k,q,P,x,b,j,R,V,N,H,O,M,F,J,X=e+e+1,re=n-1,ae=i-1,te=e+1,ie=te*(te+1)/2,K=new Jw,oe=null,ne=K,ue=null,pe=null,Pe=gF[e],be=AF[e];for(l=1;l<X;l++)ne=ne.next=new Jw,l===te&&(oe=ne);for(ne.next=K,h=p=0,s=0;s<i;s++){for(j=R=V=N=m=g=y=k=0,q=te*(H=r[p]),P=te*(O=r[p+1]),x=te*(M=r[p+2]),b=te*(F=r[p+3]),m+=ie*H,g+=ie*O,y+=ie*M,k+=ie*F,ne=K,l=0;l<te;l++)ne.r=H,ne.g=O,ne.b=M,ne.a=F,ne=ne.next;for(l=1;l<te;l++)c=p+((re<l?re:l)<<2),m+=(ne.r=H=r[c])*(J=te-l),g+=(ne.g=O=r[c+1])*J,y+=(ne.b=M=r[c+2])*J,k+=(ne.a=F=r[c+3])*J,j+=H,R+=O,V+=M,N+=F,ne=ne.next;for(ue=K,pe=oe,a=0;a<n;a++)r[p+3]=F=k*Pe>>be,F!==0?(F=255/F,r[p]=(m*Pe>>be)*F,r[p+1]=(g*Pe>>be)*F,r[p+2]=(y*Pe>>be)*F):r[p]=r[p+1]=r[p+2]=0,m-=q,g-=P,y-=x,k-=b,q-=ue.r,P-=ue.g,x-=ue.b,b-=ue.a,c=h+((c=a+e+1)<re?c:re)<<2,j+=ue.r=r[c],R+=ue.g=r[c+1],V+=ue.b=r[c+2],N+=ue.a=r[c+3],m+=j,g+=R,y+=V,k+=N,ue=ue.next,q+=H=pe.r,P+=O=pe.g,x+=M=pe.b,b+=F=pe.a,j-=H,R-=O,V-=M,N-=F,pe=pe.next,p+=4;h+=n}for(a=0;a<n;a++){for(R=V=N=j=g=y=k=m=0,p=a<<2,q=te*(H=r[p]),P=te*(O=r[p+1]),x=te*(M=r[p+2]),b=te*(F=r[p+3]),m+=ie*H,g+=ie*O,y+=ie*M,k+=ie*F,ne=K,l=0;l<te;l++)ne.r=H,ne.g=O,ne.b=M,ne.a=F,ne=ne.next;for(f=n,l=1;l<=e;l++)p=f+a<<2,m+=(ne.r=H=r[p])*(J=te-l),g+=(ne.g=O=r[p+1])*J,y+=(ne.b=M=r[p+2])*J,k+=(ne.a=F=r[p+3])*J,j+=H,R+=O,V+=M,N+=F,ne=ne.next,l<ae&&(f+=n);for(p=a,ue=K,pe=oe,s=0;s<i;s++)c=p<<2,r[c+3]=F=k*Pe>>be,F>0?(F=255/F,r[c]=(m*Pe>>be)*F,r[c+1]=(g*Pe>>be)*F,r[c+2]=(y*Pe>>be)*F):r[c]=r[c+1]=r[c+2]=0,m-=q,g-=P,y-=x,k-=b,q-=ue.r,P-=ue.g,x-=ue.b,b-=ue.a,c=a+((c=s+te)<ae?c:ae)*n<<2,m+=j+=ue.r=r[c],g+=R+=ue.g=r[c+1],y+=V+=ue.b=r[c+2],k+=N+=ue.a=r[c+3],ue=ue.next,q+=H=pe.r,P+=O=pe.g,x+=M=pe.b,b+=F=pe.a,j-=H,R-=O,V-=M,N-=F,pe=pe.next,p+=n}}const xF=function(e){var r=Math.round(this.blurRadius());r>0&&SF(e,r)};z.addGetterSetter(fe,"blurRadius",0,ce(),z.afterSetFilter);const PF=function(t){var e=this.brightness()*255,r=t.data,n=r.length,i;for(i=0;i<n;i+=4)r[i]+=e,r[i+1]+=e,r[i+2]+=e};z.addGetterSetter(fe,"brightness",0,ce(),z.afterSetFilter);const wF=function(t){var e=Math.pow((this.contrast()+100)/100,2),r=t.data,n=r.length,i=150,a=150,s=150,l;for(l=0;l<n;l+=4)i=r[l],a=r[l+1],s=r[l+2],i/=255,i-=.5,i*=e,i+=.5,i*=255,a/=255,a-=.5,a*=e,a+=.5,a*=255,s/=255,s-=.5,s*=e,s+=.5,s*=255,i=i<0?0:i>255?255:i,a=a<0?0:a>255?255:a,s=s<0?0:s>255?255:s,r[l]=i,r[l+1]=a,r[l+2]=s};z.addGetterSetter(fe,"contrast",0,ce(),z.afterSetFilter);const kF=function(t){var e=this.embossStrength()*10,r=this.embossWhiteLevel()*255,n=this.embossDirection(),i=this.embossBlend(),a=0,s=0,l=t.data,c=t.width,f=t.height,p=c*4,h=f;switch(n){case"top-left":a=-1,s=-1;break;case"top":a=-1,s=0;break;case"top-right":a=-1,s=1;break;case"right":a=0,s=1;break;case"bottom-right":a=1,s=1;break;case"bottom":a=1,s=0;break;case"bottom-left":a=1,s=-1;break;case"left":a=0,s=-1;break;default:D.error("Unknown emboss direction: "+n)}do{var m=(h-1)*p,g=a;h+g<1&&(g=0),h+g>f&&(g=0);var y=(h-1+g)*c*4,k=c;do{var q=m+(k-1)*4,P=s;k+P<1&&(P=0),k+P>c&&(P=0);var x=y+(k-1+P)*4,b=l[q]-l[x],j=l[q+1]-l[x+1],R=l[q+2]-l[x+2],V=b,N=V>0?V:-V,H=j>0?j:-j,O=R>0?R:-R;if(H>N&&(V=j),O>N&&(V=R),V*=e,i){var M=l[q]+V,F=l[q+1]+V,J=l[q+2]+V;l[q]=M>255?255:M<0?0:M,l[q+1]=F>255?255:F<0?0:F,l[q+2]=J>255?255:J<0?0:J}else{var X=r-V;X<0?X=0:X>255&&(X=255),l[q]=l[q+1]=l[q+2]=X}}while(--k)}while(--h)};z.addGetterSetter(fe,"embossStrength",.5,ce(),z.afterSetFilter);z.addGetterSetter(fe,"embossWhiteLevel",.5,ce(),z.afterSetFilter);z.addGetterSetter(fe,"embossDirection","top-left",null,z.afterSetFilter);z.addGetterSetter(fe,"embossBlend",!1,null,z.afterSetFilter);function ty(t,e,r,n,i){var a=r-e,s=i-n,l;return a===0?n+s/2:s===0?n:(l=(t-e)/a,l=s*l+n,l)}const bF=function(t){var e=t.data,r=e.length,n=e[0],i=n,a,s=e[1],l=s,c,f=e[2],p=f,h,m,g=this.enhance();if(g!==0){for(m=0;m<r;m+=4)a=e[m+0],a<n?n=a:a>i&&(i=a),c=e[m+1],c<s?s=c:c>l&&(l=c),h=e[m+2],h<f?f=h:h>p&&(p=h);i===n&&(i=255,n=0),l===s&&(l=255,s=0),p===f&&(p=255,f=0);var y,k,q,P,x,b,j,R,V;for(g>0?(k=i+g*(255-i),q=n-g*(n-0),x=l+g*(255-l),b=s-g*(s-0),R=p+g*(255-p),V=f-g*(f-0)):(y=(i+n)*.5,k=i+g*(i-y),q=n+g*(n-y),P=(l+s)*.5,x=l+g*(l-P),b=s+g*(s-P),j=(p+f)*.5,R=p+g*(p-j),V=f+g*(f-j)),m=0;m<r;m+=4)e[m+0]=ty(e[m+0],n,i,q,k),e[m+1]=ty(e[m+1],s,l,b,x),e[m+2]=ty(e[m+2],f,p,V,R)}};z.addGetterSetter(fe,"enhance",0,ce(),z.afterSetFilter);const qF=function(t){var e=t.data,r=e.length,n,i;for(n=0;n<r;n+=4)i=.34*e[n]+.5*e[n+1]+.16*e[n+2],e[n]=i,e[n+1]=i,e[n+2]=i};z.addGetterSetter(fe,"hue",0,ce(),z.afterSetFilter);z.addGetterSetter(fe,"saturation",0,ce(),z.afterSetFilter);z.addGetterSetter(fe,"luminance",0,ce(),z.afterSetFilter);const TF=function(t){var e=t.data,r=e.length,n=1,i=Math.pow(2,this.saturation()),a=Math.abs(this.hue()+360)%360,s=this.luminance()*127,l,c=n*i*Math.cos(a*Math.PI/180),f=n*i*Math.sin(a*Math.PI/180),p=.299*n+.701*c+.167*f,h=.587*n-.587*c+.33*f,m=.114*n-.114*c-.497*f,g=.299*n-.299*c-.328*f,y=.587*n+.413*c+.035*f,k=.114*n-.114*c+.293*f,q=.299*n-.3*c+1.25*f,P=.587*n-.586*c-1.05*f,x=.114*n+.886*c-.2*f,b,j,R,V;for(l=0;l<r;l+=4)b=e[l+0],j=e[l+1],R=e[l+2],V=e[l+3],e[l+0]=p*b+h*j+m*R+s,e[l+1]=g*b+y*j+k*R+s,e[l+2]=q*b+P*j+x*R+s,e[l+3]=V},jF=function(t){var e=t.data,r=e.length,n=Math.pow(2,this.value()),i=Math.pow(2,this.saturation()),a=Math.abs(this.hue()+360)%360,s,l=n*i*Math.cos(a*Math.PI/180),c=n*i*Math.sin(a*Math.PI/180),f=.299*n+.701*l+.167*c,p=.587*n-.587*l+.33*c,h=.114*n-.114*l-.497*c,m=.299*n-.299*l-.328*c,g=.587*n+.413*l+.035*c,y=.114*n-.114*l+.293*c,k=.299*n-.3*l+1.25*c,q=.587*n-.586*l-1.05*c,P=.114*n+.886*l-.2*c,x,b,j,R;for(s=0;s<r;s+=4)x=e[s+0],b=e[s+1],j=e[s+2],R=e[s+3],e[s+0]=f*x+p*b+h*j,e[s+1]=m*x+g*b+y*j,e[s+2]=k*x+q*b+P*j,e[s+3]=R};z.addGetterSetter(fe,"hue",0,ce(),z.afterSetFilter);z.addGetterSetter(fe,"saturation",0,ce(),z.afterSetFilter);z.addGetterSetter(fe,"value",0,ce(),z.afterSetFilter);const RF=function(t){var e=t.data,r=e.length,n;for(n=0;n<r;n+=4)e[n]=255-e[n],e[n+1]=255-e[n+1],e[n+2]=255-e[n+2]};var VF=function(t,e,r){var n=t.data,i=e.data,a=t.width,s=t.height,l=r.polarCenterX||a/2,c=r.polarCenterY||s/2,f,p,h,m=0,g=0,y=0,k=0,q,P=Math.sqrt(l*l+c*c);p=a-l,h=s-c,q=Math.sqrt(p*p+h*h),P=q>P?q:P;var x=s,b=a,j,R,V=360/b*Math.PI/180,N,H;for(R=0;R<b;R+=1)for(N=Math.sin(R*V),H=Math.cos(R*V),j=0;j<x;j+=1)p=Math.floor(l+P*j/x*H),h=Math.floor(c+P*j/x*N),f=(h*a+p)*4,m=n[f+0],g=n[f+1],y=n[f+2],k=n[f+3],f=(R+j*a)*4,i[f+0]=m,i[f+1]=g,i[f+2]=y,i[f+3]=k},LF=function(t,e,r){var n=t.data,i=e.data,a=t.width,s=t.height,l=r.polarCenterX||a/2,c=r.polarCenterY||s/2,f,p,h,m,g,y=0,k=0,q=0,P=0,x,b=Math.sqrt(l*l+c*c);p=a-l,h=s-c,x=Math.sqrt(p*p+h*h),b=x>b?x:b;var j=s,R=a,V,N,H=r.polarRotation||0,O,M;for(p=0;p<a;p+=1)for(h=0;h<s;h+=1)m=p-l,g=h-c,V=Math.sqrt(m*m+g*g)*j/b,N=(Math.atan2(g,m)*180/Math.PI+360+H)%360,N=N*R/360,O=Math.floor(N),M=Math.floor(V),f=(M*a+O)*4,y=n[f+0],k=n[f+1],q=n[f+2],P=n[f+3],f=(h*a+p)*4,i[f+0]=y,i[f+1]=k,i[f+2]=q,i[f+3]=P};const NF=function(t){var e=t.width,r=t.height,n,i,a,s,l,c,f,p,h,m,g=Math.round(this.kaleidoscopePower()),y=Math.round(this.kaleidoscopeAngle()),k=Math.floor(e*(y%360)/360);if(!(g<1)){var q=D.createCanvasElement();q.width=e,q.height=r;var P=q.getContext("2d").getImageData(0,0,e,r);VF(t,P,{polarCenterX:e/2,polarCenterY:r/2});for(var x=e/Math.pow(2,g);x<=8;)x=x*2,g-=1;x=Math.ceil(x);var b=x,j=0,R=b,V=1;for(k+x>e&&(j=b,R=0,V=-1),i=0;i<r;i+=1)for(n=j;n!==R;n+=V)a=Math.round(n+k)%e,h=(e*i+a)*4,l=P.data[h+0],c=P.data[h+1],f=P.data[h+2],p=P.data[h+3],m=(e*i+n)*4,P.data[m+0]=l,P.data[m+1]=c,P.data[m+2]=f,P.data[m+3]=p;for(i=0;i<r;i+=1)for(b=Math.floor(x),s=0;s<g;s+=1){for(n=0;n<b+1;n+=1)h=(e*i+n)*4,l=P.data[h+0],c=P.data[h+1],f=P.data[h+2],p=P.data[h+3],m=(e*i+b*2-n-1)*4,P.data[m+0]=l,P.data[m+1]=c,P.data[m+2]=f,P.data[m+3]=p;b*=2}LF(P,t,{polarRotation:0})}};z.addGetterSetter(fe,"kaleidoscopePower",2,ce(),z.afterSetFilter);z.addGetterSetter(fe,"kaleidoscopeAngle",0,ce(),z.afterSetFilter);function ud(t,e,r){var n=(r*t.width+e)*4,i=[];return i.push(t.data[n++],t.data[n++],t.data[n++],t.data[n++]),i}function eu(t,e){return Math.sqrt(Math.pow(t[0]-e[0],2)+Math.pow(t[1]-e[1],2)+Math.pow(t[2]-e[2],2))}function WF(t){for(var e=[0,0,0],r=0;r<t.length;r++)e[0]+=t[r][0],e[1]+=t[r][1],e[2]+=t[r][2];return e[0]/=t.length,e[1]/=t.length,e[2]/=t.length,e}function UF(t,e){var r=ud(t,0,0),n=ud(t,t.width-1,0),i=ud(t,0,t.height-1),a=ud(t,t.width-1,t.height-1),s=e||10;if(eu(r,n)<s&&eu(n,a)<s&&eu(a,i)<s&&eu(i,r)<s){for(var l=WF([n,r,a,i]),c=[],f=0;f<t.width*t.height;f++){var p=eu(l,[t.data[f*4],t.data[f*4+1],t.data[f*4+2]]);c[f]=p<s?0:255}return c}}function HF(t,e){for(var r=0;r<t.width*t.height;r++)t.data[4*r+3]=e[r]}function MF(t,e,r){for(var n=[1,1,1,1,0,1,1,1,1],i=Math.round(Math.sqrt(n.length)),a=Math.floor(i/2),s=[],l=0;l<r;l++)for(var c=0;c<e;c++){for(var f=l*e+c,p=0,h=0;h<i;h++)for(var m=0;m<i;m++){var g=l+h-a,y=c+m-a;if(g>=0&&g<r&&y>=0&&y<e){var k=g*e+y,q=n[h*i+m];p+=t[k]*q}}s[f]=p===255*8?255:0}return s}function OF(t,e,r){for(var n=[1,1,1,1,1,1,1,1,1],i=Math.round(Math.sqrt(n.length)),a=Math.floor(i/2),s=[],l=0;l<r;l++)for(var c=0;c<e;c++){for(var f=l*e+c,p=0,h=0;h<i;h++)for(var m=0;m<i;m++){var g=l+h-a,y=c+m-a;if(g>=0&&g<r&&y>=0&&y<e){var k=g*e+y,q=n[h*i+m];p+=t[k]*q}}s[f]=p>=255*4?255:0}return s}function zF(t,e,r){for(var n=[.1111111111111111,.1111111111111111,.1111111111111111,.1111111111111111,.1111111111111111,.1111111111111111,.1111111111111111,.1111111111111111,.1111111111111111],i=Math.round(Math.sqrt(n.length)),a=Math.floor(i/2),s=[],l=0;l<r;l++)for(var c=0;c<e;c++){for(var f=l*e+c,p=0,h=0;h<i;h++)for(var m=0;m<i;m++){var g=l+h-a,y=c+m-a;if(g>=0&&g<r&&y>=0&&y<e){var k=g*e+y,q=n[h*i+m];p+=t[k]*q}}s[f]=p}return s}const YF=function(t){var e=this.threshold(),r=UF(t,e);return r&&(r=MF(r,t.width,t.height),r=OF(r,t.width,t.height),r=zF(r,t.width,t.height),HF(t,r)),t};z.addGetterSetter(fe,"threshold",0,ce(),z.afterSetFilter);const CF=function(t){var e=this.noise()*255,r=t.data,n=r.length,i=e/2,a;for(a=0;a<n;a+=4)r[a+0]+=i-2*i*Math.random(),r[a+1]+=i-2*i*Math.random(),r[a+2]+=i-2*i*Math.random()};z.addGetterSetter(fe,"noise",.2,ce(),z.afterSetFilter);const FF=function(t){var e=Math.ceil(this.pixelSize()),r=t.width,n=t.height,i,a,s,l,c,f,p,h=Math.ceil(r/e),m=Math.ceil(n/e),g,y,k,q,P,x,b,j=t.data;if(e<=0){D.error("pixelSize value can not be <= 0");return}for(P=0;P<h;P+=1)for(x=0;x<m;x+=1){for(l=0,c=0,f=0,p=0,g=P*e,y=g+e,k=x*e,q=k+e,b=0,i=g;i<y;i+=1)if(!(i>=r))for(a=k;a<q;a+=1)a>=n||(s=(r*a+i)*4,l+=j[s+0],c+=j[s+1],f+=j[s+2],p+=j[s+3],b+=1);for(l=l/b,c=c/b,f=f/b,p=p/b,i=g;i<y;i+=1)if(!(i>=r))for(a=k;a<q;a+=1)a>=n||(s=(r*a+i)*4,j[s+0]=l,j[s+1]=c,j[s+2]=f,j[s+3]=p)}};z.addGetterSetter(fe,"pixelSize",8,ce(),z.afterSetFilter);const IF=function(t){var e=Math.round(this.levels()*254)+1,r=t.data,n=r.length,i=255/e,a;for(a=0;a<n;a+=1)r[a]=Math.floor(r[a]/i)*i};z.addGetterSetter(fe,"levels",.5,ce(),z.afterSetFilter);const EF=function(t){var e=t.data,r=e.length,n=this.red(),i=this.green(),a=this.blue(),s,l;for(s=0;s<r;s+=4)l=(.34*e[s]+.5*e[s+1]+.16*e[s+2])/255,e[s]=l*n,e[s+1]=l*i,e[s+2]=l*a,e[s+3]=e[s+3]};z.addGetterSetter(fe,"red",0,function(t){return this._filterUpToDate=!1,t>255?255:t<0?0:Math.round(t)});z.addGetterSetter(fe,"green",0,function(t){return this._filterUpToDate=!1,t>255?255:t<0?0:Math.round(t)});z.addGetterSetter(fe,"blue",0,F5,z.afterSetFilter);const JF=function(t){var e=t.data,r=e.length,n=this.red(),i=this.green(),a=this.blue(),s=this.alpha(),l,c;for(l=0;l<r;l+=4)c=1-s,e[l]=n*s+e[l]*c,e[l+1]=i*s+e[l+1]*c,e[l+2]=a*s+e[l+2]*c};z.addGetterSetter(fe,"red",0,function(t){return this._filterUpToDate=!1,t>255?255:t<0?0:Math.round(t)});z.addGetterSetter(fe,"green",0,function(t){return this._filterUpToDate=!1,t>255?255:t<0?0:Math.round(t)});z.addGetterSetter(fe,"blue",0,F5,z.afterSetFilter);z.addGetterSetter(fe,"alpha",1,function(t){return this._filterUpToDate=!1,t>1?1:t<0?0:t});const DF=function(t){var e=t.data,r=e.length,n,i,a,s;for(n=0;n<r;n+=4)i=e[n+0],a=e[n+1],s=e[n+2],e[n+0]=Math.min(255,i*.393+a*.769+s*.189),e[n+1]=Math.min(255,i*.349+a*.686+s*.168),e[n+2]=Math.min(255,i*.272+a*.534+s*.131)},GF=function(t){var e=t.data,r=t.width,n=t.height,i=r*4,a=n;do{var s=(a-1)*i,l=r;do{var c=s+(l-1)*4,f=e[c],p=e[c+1],h=e[c+2];f>127&&(f=255-f),p>127&&(p=255-p),h>127&&(h=255-h),e[c]=f,e[c+1]=p,e[c+2]=h}while(--l)}while(--a)},KF=function(t){var e=this.threshold()*255,r=t.data,n=r.length,i;for(i=0;i<n;i+=1)r[i]=r[i]<e?0:255};z.addGetterSetter(fe,"threshold",.5,ce(),z.afterSetFilter);const BF=Ys.Util._assign(Ys,{Arc:ra,Arrow:Js,Circle:pl,Ellipse:is,Image:_n,Label:P1,Tag:Ds,Line:na,Path:Ke,Rect:qc,RegularPolygon:Gs,Ring:Ks,Sprite:Ti,Star:as,Text:wt,TextPath:Gt,Transformer:Ie,Wedge:ia,Filters:{Blur:xF,Brighten:PF,Contrast:wF,Emboss:kF,Enhance:bF,Grayscale:qF,HSL:TF,HSV:jF,Invert:RF,Kaleidoscope:NF,Mask:YF,Noise:CF,Pixelate:FF,Posterize:IF,RGB:EF,RGBA:JF,Sepia:DF,Solarize:GF,Threshold:KF}});var AT={exports:{}};/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ZF=function(e){var r={},n=Y.exports,i=Oo.exports,a=Object.assign;function s(o){for(var u="https://reactjs.org/docs/error-decoder.html?invariant="+o,d=1;d<arguments.length;d++)u+="&args[]="+encodeURIComponent(arguments[d]);return"Minified React error #"+o+"; visit "+u+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var l=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,c=Symbol.for("react.element"),f=Symbol.for("react.portal"),p=Symbol.for("react.fragment"),h=Symbol.for("react.strict_mode"),m=Symbol.for("react.profiler"),g=Symbol.for("react.provider"),y=Symbol.for("react.context"),k=Symbol.for("react.forward_ref"),q=Symbol.for("react.suspense"),P=Symbol.for("react.suspense_list"),x=Symbol.for("react.memo"),b=Symbol.for("react.lazy"),j=Symbol.for("react.offscreen"),R=Symbol.iterator;function V(o){return o===null||typeof o!="object"?null:(o=R&&o[R]||o["@@iterator"],typeof o=="function"?o:null)}function N(o){if(o==null)return null;if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case p:return"Fragment";case f:return"Portal";case m:return"Profiler";case h:return"StrictMode";case q:return"Suspense";case P:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case y:return(o.displayName||"Context")+".Consumer";case g:return(o._context.displayName||"Context")+".Provider";case k:var u=o.render;return o=o.displayName,o||(o=u.displayName||u.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case x:return u=o.displayName||null,u!==null?u:N(o.type)||"Memo";case b:u=o._payload,o=o._init;try{return N(o(u))}catch{}}return null}function H(o){var u=o.type;switch(o.tag){case 24:return"Cache";case 9:return(u.displayName||"Context")+".Consumer";case 10:return(u._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return o=u.render,o=o.displayName||o.name||"",u.displayName||(o!==""?"ForwardRef("+o+")":"ForwardRef");case 7:return"Fragment";case 5:return u;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return N(u);case 8:return u===h?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof u=="function")return u.displayName||u.name||null;if(typeof u=="string")return u}return null}function O(o){var u=o,d=o;if(o.alternate)for(;u.return;)u=u.return;else{o=u;do u=o,(u.flags&4098)!==0&&(d=u.return),o=u.return;while(o)}return u.tag===3?d:null}function M(o){if(O(o)!==o)throw Error(s(188))}function F(o){var u=o.alternate;if(!u){if(u=O(o),u===null)throw Error(s(188));return u!==o?null:o}for(var d=o,v=u;;){var A=d.return;if(A===null)break;var T=A.alternate;if(T===null){if(v=A.return,v!==null){d=v;continue}break}if(A.child===T.child){for(T=A.child;T;){if(T===d)return M(A),o;if(T===v)return M(A),u;T=T.sibling}throw Error(s(188))}if(d.return!==v.return)d=A,v=T;else{for(var U=!1,C=A.child;C;){if(C===d){U=!0,d=A,v=T;break}if(C===v){U=!0,v=A,d=T;break}C=C.sibling}if(!U){for(C=T.child;C;){if(C===d){U=!0,d=T,v=A;break}if(C===v){U=!0,v=T,d=A;break}C=C.sibling}if(!U)throw Error(s(189))}}if(d.alternate!==v)throw Error(s(190))}if(d.tag!==3)throw Error(s(188));return d.stateNode.current===d?o:u}function J(o){return o=F(o),o!==null?X(o):null}function X(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){var u=X(o);if(u!==null)return u;o=o.sibling}return null}function re(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){if(o.tag!==4){var u=re(o);if(u!==null)return u}o=o.sibling}return null}var ae=Array.isArray,te=e.getPublicInstance,ie=e.getRootHostContext,K=e.getChildHostContext,oe=e.prepareForCommit,ne=e.resetAfterCommit,ue=e.createInstance,pe=e.appendInitialChild,Pe=e.finalizeInitialChildren,be=e.prepareUpdate,Be=e.shouldSetTextContent,Ze=e.createTextInstance,vt=e.scheduleTimeout,_t=e.cancelTimeout,qt=e.noTimeout,wr=e.isPrimaryRenderer,_e=e.supportsMutation,kr=e.supportsPersistence,$e=e.supportsHydration,$t=e.getInstanceFromNode,aa=e.preparePortalMount,ji=e.getCurrentEventPriority,Tt=e.detachDeletedInstance,hl=e.supportsMicrotasks,ml=e.scheduleMicrotask,dn=e.supportsTestSelectors,$n=e.findFiberRoot,Lr=e.getBoundingRect,os=e.getTextContent,pn=e.isHiddenSubtree,or=e.matchAccessibilityRole,vl=e.setFocusIfFocusable,L=e.setupIntersectionObserver,S=e.appendChild,w=e.appendChildToContainer,W=e.commitTextUpdate,I=e.commitMount,B=e.commitUpdate,ee=e.insertBefore,Te=e.insertInContainerBefore,ut=e.removeChild,et=e.removeChildFromContainer,it=e.resetTextContent,Ee=e.hideInstance,GT=e.hideTextInstance,KT=e.unhideInstance,BT=e.unhideTextInstance,ZT=e.clearContainer,XT=e.cloneInstance,Y1=e.createContainerChildSet,C1=e.appendChildToContainerChildSet,QT=e.finalizeContainerChildren,Yh=e.replaceContainerChildren,F1=e.cloneHiddenInstance,I1=e.cloneHiddenTextInstance,_T=e.canHydrateInstance,$T=e.canHydrateTextInstance,ej=e.canHydrateSuspenseInstance,E1=e.isSuspenseInstancePending,Ch=e.isSuspenseInstanceFallback,tj=e.registerSuspenseInstanceRetry,yl=e.getNextHydratableSibling,rj=e.getFirstHydratableChild,nj=e.getFirstHydratableChildWithinContainer,ij=e.getFirstHydratableChildWithinSuspenseInstance,aj=e.hydrateInstance,sj=e.hydrateTextInstance,oj=e.hydrateSuspenseInstance,lj=e.getNextHydratableInstanceAfterSuspenseInstance,uj=e.commitHydratedContainer,cj=e.commitHydratedSuspenseInstance,fj=e.clearSuspenseBoundary,dj=e.clearSuspenseBoundaryFromContainer,pj=e.shouldDeleteUnhydratedTailInstances,hj=e.didNotMatchHydratedContainerTextInstance,mj=e.didNotMatchHydratedTextInstance,Fh;function gl(o){if(Fh===void 0)try{throw Error()}catch(d){var u=d.stack.trim().match(/\n( *(at )?)/);Fh=u&&u[1]||""}return`
`+Fh+o}var Ih=!1;function Eh(o,u){if(!o||Ih)return"";Ih=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(u)if(u=function(){throw Error()},Object.defineProperty(u.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(u,[])}catch(de){var v=de}Reflect.construct(o,[],u)}else{try{u.call()}catch(de){v=de}o.call(u.prototype)}else{try{throw Error()}catch(de){v=de}o()}}catch(de){if(de&&v&&typeof de.stack=="string"){for(var A=de.stack.split(`
`),T=v.stack.split(`
`),U=A.length-1,C=T.length-1;1<=U&&0<=C&&A[U]!==T[C];)C--;for(;1<=U&&0<=C;U--,C--)if(A[U]!==T[C]){if(U!==1||C!==1)do if(U--,C--,0>C||A[U]!==T[C]){var G=`
`+A[U].replace(" at new "," at ");return o.displayName&&G.includes("<anonymous>")&&(G=G.replace("<anonymous>",o.displayName)),G}while(1<=U&&0<=C);break}}}finally{Ih=!1,Error.prepareStackTrace=d}return(o=o?o.displayName||o.name:"")?gl(o):""}var vj=Object.prototype.hasOwnProperty,Jh=[],Zs=-1;function sa(o){return{current:o}}function at(o){0>Zs||(o.current=Jh[Zs],Jh[Zs]=null,Zs--)}function tt(o,u){Zs++,Jh[Zs]=o.current,o.current=u}var oa={},lr=sa(oa),Nr=sa(!1),ls=oa;function Xs(o,u){var d=o.type.contextTypes;if(!d)return oa;var v=o.stateNode;if(v&&v.__reactInternalMemoizedUnmaskedChildContext===u)return v.__reactInternalMemoizedMaskedChildContext;var A={},T;for(T in d)A[T]=u[T];return v&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=u,o.__reactInternalMemoizedMaskedChildContext=A),A}function Wr(o){return o=o.childContextTypes,o!=null}function Nc(){at(Nr),at(lr)}function J1(o,u,d){if(lr.current!==oa)throw Error(s(168));tt(lr,u),tt(Nr,d)}function D1(o,u,d){var v=o.stateNode;if(u=u.childContextTypes,typeof v.getChildContext!="function")return d;v=v.getChildContext();for(var A in v)if(!(A in u))throw Error(s(108,H(o)||"Unknown",A));return a({},d,v)}function Wc(o){return o=(o=o.stateNode)&&o.__reactInternalMemoizedMergedChildContext||oa,ls=lr.current,tt(lr,o),tt(Nr,Nr.current),!0}function G1(o,u,d){var v=o.stateNode;if(!v)throw Error(s(169));d?(o=D1(o,u,ls),v.__reactInternalMemoizedMergedChildContext=o,at(Nr),at(lr),tt(lr,o)):at(Nr),tt(Nr,d)}var Vn=Math.clz32?Math.clz32:Aj,yj=Math.log,gj=Math.LN2;function Aj(o){return o>>>=0,o===0?32:31-(yj(o)/gj|0)|0}var Uc=64,Hc=4194304;function Al(o){switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return o&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return o}}function Mc(o,u){var d=o.pendingLanes;if(d===0)return 0;var v=0,A=o.suspendedLanes,T=o.pingedLanes,U=d&268435455;if(U!==0){var C=U&~A;C!==0?v=Al(C):(T&=U,T!==0&&(v=Al(T)))}else U=d&~A,U!==0?v=Al(U):T!==0&&(v=Al(T));if(v===0)return 0;if(u!==0&&u!==v&&(u&A)===0&&(A=v&-v,T=u&-u,A>=T||A===16&&(T&4194240)!==0))return u;if((v&4)!==0&&(v|=d&16),u=o.entangledLanes,u!==0)for(o=o.entanglements,u&=v;0<u;)d=31-Vn(u),A=1<<d,v|=o[d],u&=~A;return v}function Sj(o,u){switch(o){case 1:case 2:case 4:return u+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return u+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function xj(o,u){for(var d=o.suspendedLanes,v=o.pingedLanes,A=o.expirationTimes,T=o.pendingLanes;0<T;){var U=31-Vn(T),C=1<<U,G=A[U];G===-1?((C&d)===0||(C&v)!==0)&&(A[U]=Sj(C,u)):G<=u&&(o.expiredLanes|=C),T&=~C}}function Dh(o){return o=o.pendingLanes&-1073741825,o!==0?o:o&1073741824?1073741824:0}function K1(){var o=Uc;return Uc<<=1,(Uc&4194240)===0&&(Uc=64),o}function Gh(o){for(var u=[],d=0;31>d;d++)u.push(o);return u}function Sl(o,u,d){o.pendingLanes|=u,u!==536870912&&(o.suspendedLanes=0,o.pingedLanes=0),o=o.eventTimes,u=31-Vn(u),o[u]=d}function Pj(o,u){var d=o.pendingLanes&~u;o.pendingLanes=u,o.suspendedLanes=0,o.pingedLanes=0,o.expiredLanes&=u,o.mutableReadLanes&=u,o.entangledLanes&=u,u=o.entanglements;var v=o.eventTimes;for(o=o.expirationTimes;0<d;){var A=31-Vn(d),T=1<<A;u[A]=0,v[A]=-1,o[A]=-1,d&=~T}}function Kh(o,u){var d=o.entangledLanes|=u;for(o=o.entanglements;d;){var v=31-Vn(d),A=1<<v;A&u|o[v]&u&&(o[v]|=u),d&=~A}}var He=0;function B1(o){return o&=-o,1<o?4<o?(o&268435455)!==0?16:536870912:4:1}var Bh=i.unstable_scheduleCallback,Z1=i.unstable_cancelCallback,wj=i.unstable_shouldYield,kj=i.unstable_requestPaint,Kt=i.unstable_now,Zh=i.unstable_ImmediatePriority,bj=i.unstable_UserBlockingPriority,Xh=i.unstable_NormalPriority,qj=i.unstable_IdlePriority,Oc=null,ei=null;function Tj(o){if(ei&&typeof ei.onCommitFiberRoot=="function")try{ei.onCommitFiberRoot(Oc,o,void 0,(o.current.flags&128)===128)}catch{}}function jj(o,u){return o===u&&(o!==0||1/o===1/u)||o!==o&&u!==u}var Ln=typeof Object.is=="function"?Object.is:jj,Ri=null,zc=!1,Qh=!1;function X1(o){Ri===null?Ri=[o]:Ri.push(o)}function Rj(o){zc=!0,X1(o)}function ti(){if(!Qh&&Ri!==null){Qh=!0;var o=0,u=He;try{var d=Ri;for(He=1;o<d.length;o++){var v=d[o];do v=v(!0);while(v!==null)}Ri=null,zc=!1}catch(A){throw Ri!==null&&(Ri=Ri.slice(o+1)),Bh(Zh,ti),A}finally{He=u,Qh=!1}}return null}var Vj=l.ReactCurrentBatchConfig;function Yc(o,u){if(Ln(o,u))return!0;if(typeof o!="object"||o===null||typeof u!="object"||u===null)return!1;var d=Object.keys(o),v=Object.keys(u);if(d.length!==v.length)return!1;for(v=0;v<d.length;v++){var A=d[v];if(!vj.call(u,A)||!Ln(o[A],u[A]))return!1}return!0}function Lj(o){switch(o.tag){case 5:return gl(o.type);case 16:return gl("Lazy");case 13:return gl("Suspense");case 19:return gl("SuspenseList");case 0:case 2:case 15:return o=Eh(o.type,!1),o;case 11:return o=Eh(o.type.render,!1),o;case 1:return o=Eh(o.type,!0),o;default:return""}}function Nn(o,u){if(o&&o.defaultProps){u=a({},u),o=o.defaultProps;for(var d in o)u[d]===void 0&&(u[d]=o[d]);return u}return u}var Cc=sa(null),Fc=null,Qs=null,_h=null;function $h(){_h=Qs=Fc=null}function Q1(o,u,d){wr?(tt(Cc,u._currentValue),u._currentValue=d):(tt(Cc,u._currentValue2),u._currentValue2=d)}function em(o){var u=Cc.current;at(Cc),wr?o._currentValue=u:o._currentValue2=u}function tm(o,u,d){for(;o!==null;){var v=o.alternate;if((o.childLanes&u)!==u?(o.childLanes|=u,v!==null&&(v.childLanes|=u)):v!==null&&(v.childLanes&u)!==u&&(v.childLanes|=u),o===d)break;o=o.return}}function _s(o,u){Fc=o,_h=Qs=null,o=o.dependencies,o!==null&&o.firstContext!==null&&((o.lanes&u)!==0&&(Ur=!0),o.firstContext=null)}function hn(o){var u=wr?o._currentValue:o._currentValue2;if(_h!==o)if(o={context:o,memoizedValue:u,next:null},Qs===null){if(Fc===null)throw Error(s(308));Qs=o,Fc.dependencies={lanes:0,firstContext:o}}else Qs=Qs.next=o;return u}var Wn=null,la=!1;function rm(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function _1(o,u){o=o.updateQueue,u.updateQueue===o&&(u.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,effects:o.effects})}function Vi(o,u){return{eventTime:o,lane:u,tag:0,payload:null,callback:null,next:null}}function ua(o,u){var d=o.updateQueue;d!==null&&(d=d.shared,dS(o)?(o=d.interleaved,o===null?(u.next=u,Wn===null?Wn=[d]:Wn.push(d)):(u.next=o.next,o.next=u),d.interleaved=u):(o=d.pending,o===null?u.next=u:(u.next=o.next,o.next=u),d.pending=u))}function Ic(o,u,d){if(u=u.updateQueue,u!==null&&(u=u.shared,(d&4194240)!==0)){var v=u.lanes;v&=o.pendingLanes,d|=v,u.lanes=d,Kh(o,d)}}function $1(o,u){var d=o.updateQueue,v=o.alternate;if(v!==null&&(v=v.updateQueue,d===v)){var A=null,T=null;if(d=d.firstBaseUpdate,d!==null){do{var U={eventTime:d.eventTime,lane:d.lane,tag:d.tag,payload:d.payload,callback:d.callback,next:null};T===null?A=T=U:T=T.next=U,d=d.next}while(d!==null);T===null?A=T=u:T=T.next=u}else A=T=u;d={baseState:v.baseState,firstBaseUpdate:A,lastBaseUpdate:T,shared:v.shared,effects:v.effects},o.updateQueue=d;return}o=d.lastBaseUpdate,o===null?d.firstBaseUpdate=u:o.next=u,d.lastBaseUpdate=u}function Ec(o,u,d,v){var A=o.updateQueue;la=!1;var T=A.firstBaseUpdate,U=A.lastBaseUpdate,C=A.shared.pending;if(C!==null){A.shared.pending=null;var G=C,de=G.next;G.next=null,U===null?T=de:U.next=de,U=G;var Ae=o.alternate;Ae!==null&&(Ae=Ae.updateQueue,C=Ae.lastBaseUpdate,C!==U&&(C===null?Ae.firstBaseUpdate=de:C.next=de,Ae.lastBaseUpdate=G))}if(T!==null){var je=A.baseState;U=0,Ae=de=G=null,C=T;do{var we=C.lane,st=C.eventTime;if((v&we)===we){Ae!==null&&(Ae=Ae.next={eventTime:st,lane:0,tag:C.tag,payload:C.payload,callback:C.callback,next:null});e:{var Xe=o,Or=C;switch(we=u,st=d,Or.tag){case 1:if(Xe=Or.payload,typeof Xe=="function"){je=Xe.call(st,je,we);break e}je=Xe;break e;case 3:Xe.flags=Xe.flags&-65537|128;case 0:if(Xe=Or.payload,we=typeof Xe=="function"?Xe.call(st,je,we):Xe,we==null)break e;je=a({},je,we);break e;case 2:la=!0}}C.callback!==null&&C.lane!==0&&(o.flags|=64,we=A.effects,we===null?A.effects=[C]:we.push(C))}else st={eventTime:st,lane:we,tag:C.tag,payload:C.payload,callback:C.callback,next:null},Ae===null?(de=Ae=st,G=je):Ae=Ae.next=st,U|=we;if(C=C.next,C===null){if(C=A.shared.pending,C===null)break;we=C,C=we.next,we.next=null,A.lastBaseUpdate=we,A.shared.pending=null}}while(1);if(Ae===null&&(G=je),A.baseState=G,A.firstBaseUpdate=de,A.lastBaseUpdate=Ae,u=A.shared.interleaved,u!==null){A=u;do U|=A.lane,A=A.next;while(A!==u)}else T===null&&(A.shared.lanes=0);ds|=U,o.lanes=U,o.memoizedState=je}}function eA(o,u,d){if(o=u.effects,u.effects=null,o!==null)for(u=0;u<o.length;u++){var v=o[u],A=v.callback;if(A!==null){if(v.callback=null,v=d,typeof A!="function")throw Error(s(191,A));A.call(v)}}}var tA=new n.Component().refs;function nm(o,u,d,v){u=o.memoizedState,d=d(v,u),d=d==null?u:a({},u,d),o.memoizedState=d,o.lanes===0&&(o.updateQueue.baseState=d)}var Jc={isMounted:function(o){return(o=o._reactInternals)?O(o)===o:!1},enqueueSetState:function(o,u,d){o=o._reactInternals;var v=dr(),A=da(o),T=Vi(v,A);T.payload=u,d!=null&&(T.callback=d),ua(o,T),u=_r(o,A,v),u!==null&&Ic(u,o,A)},enqueueReplaceState:function(o,u,d){o=o._reactInternals;var v=dr(),A=da(o),T=Vi(v,A);T.tag=1,T.payload=u,d!=null&&(T.callback=d),ua(o,T),u=_r(o,A,v),u!==null&&Ic(u,o,A)},enqueueForceUpdate:function(o,u){o=o._reactInternals;var d=dr(),v=da(o),A=Vi(d,v);A.tag=2,u!=null&&(A.callback=u),ua(o,A),u=_r(o,v,d),u!==null&&Ic(u,o,v)}};function rA(o,u,d,v,A,T,U){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(v,T,U):u.prototype&&u.prototype.isPureReactComponent?!Yc(d,v)||!Yc(A,T):!0}function nA(o,u,d){var v=!1,A=oa,T=u.contextType;return typeof T=="object"&&T!==null?T=hn(T):(A=Wr(u)?ls:lr.current,v=u.contextTypes,T=(v=v!=null)?Xs(o,A):oa),u=new u(d,T),o.memoizedState=u.state!==null&&u.state!==void 0?u.state:null,u.updater=Jc,o.stateNode=u,u._reactInternals=o,v&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=A,o.__reactInternalMemoizedMaskedChildContext=T),u}function iA(o,u,d,v){o=u.state,typeof u.componentWillReceiveProps=="function"&&u.componentWillReceiveProps(d,v),typeof u.UNSAFE_componentWillReceiveProps=="function"&&u.UNSAFE_componentWillReceiveProps(d,v),u.state!==o&&Jc.enqueueReplaceState(u,u.state,null)}function im(o,u,d,v){var A=o.stateNode;A.props=d,A.state=o.memoizedState,A.refs=tA,rm(o);var T=u.contextType;typeof T=="object"&&T!==null?A.context=hn(T):(T=Wr(u)?ls:lr.current,A.context=Xs(o,T)),A.state=o.memoizedState,T=u.getDerivedStateFromProps,typeof T=="function"&&(nm(o,u,T,d),A.state=o.memoizedState),typeof u.getDerivedStateFromProps=="function"||typeof A.getSnapshotBeforeUpdate=="function"||typeof A.UNSAFE_componentWillMount!="function"&&typeof A.componentWillMount!="function"||(u=A.state,typeof A.componentWillMount=="function"&&A.componentWillMount(),typeof A.UNSAFE_componentWillMount=="function"&&A.UNSAFE_componentWillMount(),u!==A.state&&Jc.enqueueReplaceState(A,A.state,null),Ec(o,d,A,v),A.state=o.memoizedState),typeof A.componentDidMount=="function"&&(o.flags|=4194308)}var $s=[],eo=0,Dc=null,Gc=0,mn=[],vn=0,us=null,Li=1,Ni="";function cs(o,u){$s[eo++]=Gc,$s[eo++]=Dc,Dc=o,Gc=u}function aA(o,u,d){mn[vn++]=Li,mn[vn++]=Ni,mn[vn++]=us,us=o;var v=Li;o=Ni;var A=32-Vn(v)-1;v&=~(1<<A),d+=1;var T=32-Vn(u)+A;if(30<T){var U=A-A%5;T=(v&(1<<U)-1).toString(32),v>>=U,A-=U,Li=1<<32-Vn(u)+A|d<<A|v,Ni=T+o}else Li=1<<T|d<<A|v,Ni=o}function am(o){o.return!==null&&(cs(o,1),aA(o,1,0))}function sm(o){for(;o===Dc;)Dc=$s[--eo],$s[eo]=null,Gc=$s[--eo],$s[eo]=null;for(;o===us;)us=mn[--vn],mn[vn]=null,Ni=mn[--vn],mn[vn]=null,Li=mn[--vn],mn[vn]=null}var Zr=null,Xr=null,ct=!1,xl=!1,Un=null;function sA(o,u){var d=An(5,null,null,0);d.elementType="DELETED",d.stateNode=u,d.return=o,u=o.deletions,u===null?(o.deletions=[d],o.flags|=16):u.push(d)}function oA(o,u){switch(o.tag){case 5:return u=_T(u,o.type,o.pendingProps),u!==null?(o.stateNode=u,Zr=o,Xr=rj(u),!0):!1;case 6:return u=$T(u,o.pendingProps),u!==null?(o.stateNode=u,Zr=o,Xr=null,!0):!1;case 13:if(u=ej(u),u!==null){var d=us!==null?{id:Li,overflow:Ni}:null;return o.memoizedState={dehydrated:u,treeContext:d,retryLane:1073741824},d=An(18,null,null,0),d.stateNode=u,d.return=o,o.child=d,Zr=o,Xr=null,!0}return!1;default:return!1}}function om(o){return(o.mode&1)!==0&&(o.flags&128)===0}function lm(o){if(ct){var u=Xr;if(u){var d=u;if(!oA(o,u)){if(om(o))throw Error(s(418));u=yl(d);var v=Zr;u&&oA(o,u)?sA(v,d):(o.flags=o.flags&-4097|2,ct=!1,Zr=o)}}else{if(om(o))throw Error(s(418));o.flags=o.flags&-4097|2,ct=!1,Zr=o}}}function lA(o){for(o=o.return;o!==null&&o.tag!==5&&o.tag!==3&&o.tag!==13;)o=o.return;Zr=o}function Pl(o){if(!$e||o!==Zr)return!1;if(!ct)return lA(o),ct=!0,!1;if(o.tag!==3&&(o.tag!==5||pj(o.type)&&!Be(o.type,o.memoizedProps))){var u=Xr;if(u){if(om(o)){for(o=Xr;o;)o=yl(o);throw Error(s(418))}for(;u;)sA(o,u),u=yl(u)}}if(lA(o),o.tag===13){if(!$e)throw Error(s(316));if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(s(317));Xr=lj(o)}else Xr=Zr?yl(o.stateNode):null;return!0}function to(){$e&&(Xr=Zr=null,xl=ct=!1)}function um(o){Un===null?Un=[o]:Un.push(o)}function wl(o,u,d){if(o=d.ref,o!==null&&typeof o!="function"&&typeof o!="object"){if(d._owner){if(d=d._owner,d){if(d.tag!==1)throw Error(s(309));var v=d.stateNode}if(!v)throw Error(s(147,o));var A=v,T=""+o;return u!==null&&u.ref!==null&&typeof u.ref=="function"&&u.ref._stringRef===T?u.ref:(u=function(U){var C=A.refs;C===tA&&(C=A.refs={}),U===null?delete C[T]:C[T]=U},u._stringRef=T,u)}if(typeof o!="string")throw Error(s(284));if(!d._owner)throw Error(s(290,o))}return o}function Kc(o,u){throw o=Object.prototype.toString.call(u),Error(s(31,o==="[object Object]"?"object with keys {"+Object.keys(u).join(", ")+"}":o))}function uA(o){var u=o._init;return u(o._payload)}function cA(o){function u(Z,E){if(o){var _=Z.deletions;_===null?(Z.deletions=[E],Z.flags|=16):_.push(E)}}function d(Z,E){if(!o)return null;for(;E!==null;)u(Z,E),E=E.sibling;return null}function v(Z,E){for(Z=new Map;E!==null;)E.key!==null?Z.set(E.key,E):Z.set(E.index,E),E=E.sibling;return Z}function A(Z,E){return Z=ha(Z,E),Z.index=0,Z.sibling=null,Z}function T(Z,E,_){return Z.index=_,o?(_=Z.alternate,_!==null?(_=_.index,_<E?(Z.flags|=2,E):_):(Z.flags|=2,E)):(Z.flags|=1048576,E)}function U(Z){return o&&Z.alternate===null&&(Z.flags|=2),Z}function C(Z,E,_,he){return E===null||E.tag!==6?(E=Bm(_,Z.mode,he),E.return=Z,E):(E=A(E,_),E.return=Z,E)}function G(Z,E,_,he){var xe=_.type;return xe===p?Ae(Z,E,_.props.children,he,_.key):E!==null&&(E.elementType===xe||typeof xe=="object"&&xe!==null&&xe.$$typeof===b&&uA(xe)===E.type)?(he=A(E,_.props),he.ref=wl(Z,E,_),he.return=Z,he):(he=Pf(_.type,_.key,_.props,null,Z.mode,he),he.ref=wl(Z,E,_),he.return=Z,he)}function de(Z,E,_,he){return E===null||E.tag!==4||E.stateNode.containerInfo!==_.containerInfo||E.stateNode.implementation!==_.implementation?(E=Zm(_,Z.mode,he),E.return=Z,E):(E=A(E,_.children||[]),E.return=Z,E)}function Ae(Z,E,_,he,xe){return E===null||E.tag!==7?(E=vs(_,Z.mode,he,xe),E.return=Z,E):(E=A(E,_),E.return=Z,E)}function je(Z,E,_){if(typeof E=="string"&&E!==""||typeof E=="number")return E=Bm(""+E,Z.mode,_),E.return=Z,E;if(typeof E=="object"&&E!==null){switch(E.$$typeof){case c:return _=Pf(E.type,E.key,E.props,null,Z.mode,_),_.ref=wl(Z,null,E),_.return=Z,_;case f:return E=Zm(E,Z.mode,_),E.return=Z,E;case b:var he=E._init;return je(Z,he(E._payload),_)}if(ae(E)||V(E))return E=vs(E,Z.mode,_,null),E.return=Z,E;Kc(Z,E)}return null}function we(Z,E,_,he){var xe=E!==null?E.key:null;if(typeof _=="string"&&_!==""||typeof _=="number")return xe!==null?null:C(Z,E,""+_,he);if(typeof _=="object"&&_!==null){switch(_.$$typeof){case c:return _.key===xe?G(Z,E,_,he):null;case f:return _.key===xe?de(Z,E,_,he):null;case b:return xe=_._init,we(Z,E,xe(_._payload),he)}if(ae(_)||V(_))return xe!==null?null:Ae(Z,E,_,he,null);Kc(Z,_)}return null}function st(Z,E,_,he,xe){if(typeof he=="string"&&he!==""||typeof he=="number")return Z=Z.get(_)||null,C(E,Z,""+he,xe);if(typeof he=="object"&&he!==null){switch(he.$$typeof){case c:return Z=Z.get(he.key===null?_:he.key)||null,G(E,Z,he,xe);case f:return Z=Z.get(he.key===null?_:he.key)||null,de(E,Z,he,xe);case b:var Re=he._init;return st(Z,E,_,Re(he._payload),xe)}if(ae(he)||V(he))return Z=Z.get(_)||null,Ae(E,Z,he,xe,null);Kc(E,he)}return null}function Xe(Z,E,_,he){for(var xe=null,Re=null,qe=E,Me=E=0,Zt=null;qe!==null&&Me<_.length;Me++){qe.index>Me?(Zt=qe,qe=null):Zt=qe.sibling;var Oe=we(Z,qe,_[Me],he);if(Oe===null){qe===null&&(qe=Zt);break}o&&qe&&Oe.alternate===null&&u(Z,qe),E=T(Oe,E,Me),Re===null?xe=Oe:Re.sibling=Oe,Re=Oe,qe=Zt}if(Me===_.length)return d(Z,qe),ct&&cs(Z,Me),xe;if(qe===null){for(;Me<_.length;Me++)qe=je(Z,_[Me],he),qe!==null&&(E=T(qe,E,Me),Re===null?xe=qe:Re.sibling=qe,Re=qe);return ct&&cs(Z,Me),xe}for(qe=v(Z,qe);Me<_.length;Me++)Zt=st(qe,Z,Me,_[Me],he),Zt!==null&&(o&&Zt.alternate!==null&&qe.delete(Zt.key===null?Me:Zt.key),E=T(Zt,E,Me),Re===null?xe=Zt:Re.sibling=Zt,Re=Zt);return o&&qe.forEach(function(ma){return u(Z,ma)}),ct&&cs(Z,Me),xe}function Or(Z,E,_,he){var xe=V(_);if(typeof xe!="function")throw Error(s(150));if(_=xe.call(_),_==null)throw Error(s(151));for(var Re=xe=null,qe=E,Me=E=0,Zt=null,Oe=_.next();qe!==null&&!Oe.done;Me++,Oe=_.next()){qe.index>Me?(Zt=qe,qe=null):Zt=qe.sibling;var ma=we(Z,qe,Oe.value,he);if(ma===null){qe===null&&(qe=Zt);break}o&&qe&&ma.alternate===null&&u(Z,qe),E=T(ma,E,Me),Re===null?xe=ma:Re.sibling=ma,Re=ma,qe=Zt}if(Oe.done)return d(Z,qe),ct&&cs(Z,Me),xe;if(qe===null){for(;!Oe.done;Me++,Oe=_.next())Oe=je(Z,Oe.value,he),Oe!==null&&(E=T(Oe,E,Me),Re===null?xe=Oe:Re.sibling=Oe,Re=Oe);return ct&&cs(Z,Me),xe}for(qe=v(Z,qe);!Oe.done;Me++,Oe=_.next())Oe=st(qe,Z,Me,Oe.value,he),Oe!==null&&(o&&Oe.alternate!==null&&qe.delete(Oe.key===null?Me:Oe.key),E=T(Oe,E,Me),Re===null?xe=Oe:Re.sibling=Oe,Re=Oe);return o&&qe.forEach(function(s8){return u(Z,s8)}),ct&&cs(Z,Me),xe}function Hi(Z,E,_,he){if(typeof _=="object"&&_!==null&&_.type===p&&_.key===null&&(_=_.props.children),typeof _=="object"&&_!==null){switch(_.$$typeof){case c:e:{for(var xe=_.key,Re=E;Re!==null;){if(Re.key===xe){if(xe=_.type,xe===p){if(Re.tag===7){d(Z,Re.sibling),E=A(Re,_.props.children),E.return=Z,Z=E;break e}}else if(Re.elementType===xe||typeof xe=="object"&&xe!==null&&xe.$$typeof===b&&uA(xe)===Re.type){d(Z,Re.sibling),E=A(Re,_.props),E.ref=wl(Z,Re,_),E.return=Z,Z=E;break e}d(Z,Re);break}else u(Z,Re);Re=Re.sibling}_.type===p?(E=vs(_.props.children,Z.mode,he,_.key),E.return=Z,Z=E):(he=Pf(_.type,_.key,_.props,null,Z.mode,he),he.ref=wl(Z,E,_),he.return=Z,Z=he)}return U(Z);case f:e:{for(Re=_.key;E!==null;){if(E.key===Re)if(E.tag===4&&E.stateNode.containerInfo===_.containerInfo&&E.stateNode.implementation===_.implementation){d(Z,E.sibling),E=A(E,_.children||[]),E.return=Z,Z=E;break e}else{d(Z,E);break}else u(Z,E);E=E.sibling}E=Zm(_,Z.mode,he),E.return=Z,Z=E}return U(Z);case b:return Re=_._init,Hi(Z,E,Re(_._payload),he)}if(ae(_))return Xe(Z,E,_,he);if(V(_))return Or(Z,E,_,he);Kc(Z,_)}return typeof _=="string"&&_!==""||typeof _=="number"?(_=""+_,E!==null&&E.tag===6?(d(Z,E.sibling),E=A(E,_),E.return=Z,Z=E):(d(Z,E),E=Bm(_,Z.mode,he),E.return=Z,Z=E),U(Z)):d(Z,E)}return Hi}var ro=cA(!0),fA=cA(!1),kl={},yn=sa(kl),bl=sa(kl),no=sa(kl);function ri(o){if(o===kl)throw Error(s(174));return o}function cm(o,u){tt(no,u),tt(bl,o),tt(yn,kl),o=ie(u),at(yn),tt(yn,o)}function io(){at(yn),at(bl),at(no)}function dA(o){var u=ri(no.current),d=ri(yn.current);u=K(d,o.type,u),d!==u&&(tt(bl,o),tt(yn,u))}function fm(o){bl.current===o&&(at(yn),at(bl))}var yt=sa(0);function Bc(o){for(var u=o;u!==null;){if(u.tag===13){var d=u.memoizedState;if(d!==null&&(d=d.dehydrated,d===null||E1(d)||Ch(d)))return u}else if(u.tag===19&&u.memoizedProps.revealOrder!==void 0){if((u.flags&128)!==0)return u}else if(u.child!==null){u.child.return=u,u=u.child;continue}if(u===o)break;for(;u.sibling===null;){if(u.return===null||u.return===o)return null;u=u.return}u.sibling.return=u.return,u=u.sibling}return null}var dm=[];function pm(){for(var o=0;o<dm.length;o++){var u=dm[o];wr?u._workInProgressVersionPrimary=null:u._workInProgressVersionSecondary=null}dm.length=0}var Zc=l.ReactCurrentDispatcher,hm=l.ReactCurrentBatchConfig,fs=0,gt=null,Ct=null,Bt=null,Xc=!1,ql=!1,Tl=0,Nj=0;function ur(){throw Error(s(321))}function mm(o,u){if(u===null)return!1;for(var d=0;d<u.length&&d<o.length;d++)if(!Ln(o[d],u[d]))return!1;return!0}function vm(o,u,d,v,A,T){if(fs=T,gt=u,u.memoizedState=null,u.updateQueue=null,u.lanes=0,Zc.current=o===null||o.memoizedState===null?Mj:Oj,o=d(v,A),ql){T=0;do{if(ql=!1,Tl=0,25<=T)throw Error(s(301));T+=1,Bt=Ct=null,u.updateQueue=null,Zc.current=zj,o=d(v,A)}while(ql)}if(Zc.current=$c,u=Ct!==null&&Ct.next!==null,fs=0,Bt=Ct=gt=null,Xc=!1,u)throw Error(s(300));return o}function ym(){var o=Tl!==0;return Tl=0,o}function ni(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Bt===null?gt.memoizedState=Bt=o:Bt=Bt.next=o,Bt}function gn(){if(Ct===null){var o=gt.alternate;o=o!==null?o.memoizedState:null}else o=Ct.next;var u=Bt===null?gt.memoizedState:Bt.next;if(u!==null)Bt=u,Ct=o;else{if(o===null)throw Error(s(310));Ct=o,o={memoizedState:Ct.memoizedState,baseState:Ct.baseState,baseQueue:Ct.baseQueue,queue:Ct.queue,next:null},Bt===null?gt.memoizedState=Bt=o:Bt=Bt.next=o}return Bt}function jl(o,u){return typeof u=="function"?u(o):u}function gm(o){var u=gn(),d=u.queue;if(d===null)throw Error(s(311));d.lastRenderedReducer=o;var v=Ct,A=v.baseQueue,T=d.pending;if(T!==null){if(A!==null){var U=A.next;A.next=T.next,T.next=U}v.baseQueue=A=T,d.pending=null}if(A!==null){T=A.next,v=v.baseState;var C=U=null,G=null,de=T;do{var Ae=de.lane;if((fs&Ae)===Ae)G!==null&&(G=G.next={lane:0,action:de.action,hasEagerState:de.hasEagerState,eagerState:de.eagerState,next:null}),v=de.hasEagerState?de.eagerState:o(v,de.action);else{var je={lane:Ae,action:de.action,hasEagerState:de.hasEagerState,eagerState:de.eagerState,next:null};G===null?(C=G=je,U=v):G=G.next=je,gt.lanes|=Ae,ds|=Ae}de=de.next}while(de!==null&&de!==T);G===null?U=v:G.next=C,Ln(v,u.memoizedState)||(Ur=!0),u.memoizedState=v,u.baseState=U,u.baseQueue=G,d.lastRenderedState=v}if(o=d.interleaved,o!==null){A=o;do T=A.lane,gt.lanes|=T,ds|=T,A=A.next;while(A!==o)}else A===null&&(d.lanes=0);return[u.memoizedState,d.dispatch]}function Am(o){var u=gn(),d=u.queue;if(d===null)throw Error(s(311));d.lastRenderedReducer=o;var v=d.dispatch,A=d.pending,T=u.memoizedState;if(A!==null){d.pending=null;var U=A=A.next;do T=o(T,U.action),U=U.next;while(U!==A);Ln(T,u.memoizedState)||(Ur=!0),u.memoizedState=T,u.baseQueue===null&&(u.baseState=T),d.lastRenderedState=T}return[T,v]}function pA(){}function hA(o,u){var d=gt,v=gn(),A=u(),T=!Ln(v.memoizedState,A);if(T&&(v.memoizedState=A,Ur=!0),v=v.queue,Sm(yA.bind(null,d,v,o),[o]),v.getSnapshot!==u||T||Bt!==null&&Bt.memoizedState.tag&1){if(d.flags|=2048,Rl(9,vA.bind(null,d,v,A,u),void 0,null),Ft===null)throw Error(s(349));(fs&30)!==0||mA(d,u,A)}return A}function mA(o,u,d){o.flags|=16384,o={getSnapshot:u,value:d},u=gt.updateQueue,u===null?(u={lastEffect:null,stores:null},gt.updateQueue=u,u.stores=[o]):(d=u.stores,d===null?u.stores=[o]:d.push(o))}function vA(o,u,d,v){u.value=d,u.getSnapshot=v,gA(u)&&_r(o,1,-1)}function yA(o,u,d){return d(function(){gA(u)&&_r(o,1,-1)})}function gA(o){var u=o.getSnapshot;o=o.value;try{var d=u();return!Ln(o,d)}catch{return!0}}function AA(o){var u=ni();return typeof o=="function"&&(o=o()),u.memoizedState=u.baseState=o,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:jl,lastRenderedState:o},u.queue=o,o=o.dispatch=Hj.bind(null,gt,o),[u.memoizedState,o]}function Rl(o,u,d,v){return o={tag:o,create:u,destroy:d,deps:v,next:null},u=gt.updateQueue,u===null?(u={lastEffect:null,stores:null},gt.updateQueue=u,u.lastEffect=o.next=o):(d=u.lastEffect,d===null?u.lastEffect=o.next=o:(v=d.next,d.next=o,o.next=v,u.lastEffect=o)),o}function SA(){return gn().memoizedState}function Qc(o,u,d,v){var A=ni();gt.flags|=o,A.memoizedState=Rl(1|u,d,void 0,v===void 0?null:v)}function _c(o,u,d,v){var A=gn();v=v===void 0?null:v;var T=void 0;if(Ct!==null){var U=Ct.memoizedState;if(T=U.destroy,v!==null&&mm(v,U.deps)){A.memoizedState=Rl(u,d,T,v);return}}gt.flags|=o,A.memoizedState=Rl(1|u,d,T,v)}function xA(o,u){return Qc(8390656,8,o,u)}function Sm(o,u){return _c(2048,8,o,u)}function PA(o,u){return _c(4,2,o,u)}function wA(o,u){return _c(4,4,o,u)}function kA(o,u){if(typeof u=="function")return o=o(),u(o),function(){u(null)};if(u!=null)return o=o(),u.current=o,function(){u.current=null}}function bA(o,u,d){return d=d!=null?d.concat([o]):null,_c(4,4,kA.bind(null,u,o),d)}function xm(){}function qA(o,u){var d=gn();u=u===void 0?null:u;var v=d.memoizedState;return v!==null&&u!==null&&mm(u,v[1])?v[0]:(d.memoizedState=[o,u],o)}function TA(o,u){var d=gn();u=u===void 0?null:u;var v=d.memoizedState;return v!==null&&u!==null&&mm(u,v[1])?v[0]:(o=o(),d.memoizedState=[o,u],o)}function jA(o,u,d){return(fs&21)===0?(o.baseState&&(o.baseState=!1,Ur=!0),o.memoizedState=d):(Ln(d,u)||(d=K1(),gt.lanes|=d,ds|=d,o.baseState=!0),u)}function Wj(o,u){var d=He;He=d!==0&&4>d?d:4,o(!0);var v=hm.transition;hm.transition={};try{o(!1),u()}finally{He=d,hm.transition=v}}function RA(){return gn().memoizedState}function Uj(o,u,d){var v=da(o);d={lane:v,action:d,hasEagerState:!1,eagerState:null,next:null},VA(o)?LA(u,d):(NA(o,u,d),d=dr(),o=_r(o,v,d),o!==null&&WA(o,u,v))}function Hj(o,u,d){var v=da(o),A={lane:v,action:d,hasEagerState:!1,eagerState:null,next:null};if(VA(o))LA(u,A);else{NA(o,u,A);var T=o.alternate;if(o.lanes===0&&(T===null||T.lanes===0)&&(T=u.lastRenderedReducer,T!==null))try{var U=u.lastRenderedState,C=T(U,d);if(A.hasEagerState=!0,A.eagerState=C,Ln(C,U))return}catch{}finally{}d=dr(),o=_r(o,v,d),o!==null&&WA(o,u,v)}}function VA(o){var u=o.alternate;return o===gt||u!==null&&u===gt}function LA(o,u){ql=Xc=!0;var d=o.pending;d===null?u.next=u:(u.next=d.next,d.next=u),o.pending=u}function NA(o,u,d){dS(o)?(o=u.interleaved,o===null?(d.next=d,Wn===null?Wn=[u]:Wn.push(u)):(d.next=o.next,o.next=d),u.interleaved=d):(o=u.pending,o===null?d.next=d:(d.next=o.next,o.next=d),u.pending=d)}function WA(o,u,d){if((d&4194240)!==0){var v=u.lanes;v&=o.pendingLanes,d|=v,u.lanes=d,Kh(o,d)}}var $c={readContext:hn,useCallback:ur,useContext:ur,useEffect:ur,useImperativeHandle:ur,useInsertionEffect:ur,useLayoutEffect:ur,useMemo:ur,useReducer:ur,useRef:ur,useState:ur,useDebugValue:ur,useDeferredValue:ur,useTransition:ur,useMutableSource:ur,useSyncExternalStore:ur,useId:ur,unstable_isNewReconciler:!1},Mj={readContext:hn,useCallback:function(o,u){return ni().memoizedState=[o,u===void 0?null:u],o},useContext:hn,useEffect:xA,useImperativeHandle:function(o,u,d){return d=d!=null?d.concat([o]):null,Qc(4194308,4,kA.bind(null,u,o),d)},useLayoutEffect:function(o,u){return Qc(4194308,4,o,u)},useInsertionEffect:function(o,u){return Qc(4,2,o,u)},useMemo:function(o,u){var d=ni();return u=u===void 0?null:u,o=o(),d.memoizedState=[o,u],o},useReducer:function(o,u,d){var v=ni();return u=d!==void 0?d(u):u,v.memoizedState=v.baseState=u,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:u},v.queue=o,o=o.dispatch=Uj.bind(null,gt,o),[v.memoizedState,o]},useRef:function(o){var u=ni();return o={current:o},u.memoizedState=o},useState:AA,useDebugValue:xm,useDeferredValue:function(o){return ni().memoizedState=o},useTransition:function(){var o=AA(!1),u=o[0];return o=Wj.bind(null,o[1]),ni().memoizedState=o,[u,o]},useMutableSource:function(){},useSyncExternalStore:function(o,u,d){var v=gt,A=ni();if(ct){if(d===void 0)throw Error(s(407));d=d()}else{if(d=u(),Ft===null)throw Error(s(349));(fs&30)!==0||mA(v,u,d)}A.memoizedState=d;var T={value:d,getSnapshot:u};return A.queue=T,xA(yA.bind(null,v,T,o),[o]),v.flags|=2048,Rl(9,vA.bind(null,v,T,d,u),void 0,null),d},useId:function(){var o=ni(),u=Ft.identifierPrefix;if(ct){var d=Ni,v=Li;d=(v&~(1<<32-Vn(v)-1)).toString(32)+d,u=":"+u+"R"+d,d=Tl++,0<d&&(u+="H"+d.toString(32)),u+=":"}else d=Nj++,u=":"+u+"r"+d.toString(32)+":";return o.memoizedState=u},unstable_isNewReconciler:!1},Oj={readContext:hn,useCallback:qA,useContext:hn,useEffect:Sm,useImperativeHandle:bA,useInsertionEffect:PA,useLayoutEffect:wA,useMemo:TA,useReducer:gm,useRef:SA,useState:function(){return gm(jl)},useDebugValue:xm,useDeferredValue:function(o){var u=gn();return jA(u,Ct.memoizedState,o)},useTransition:function(){var o=gm(jl)[0],u=gn().memoizedState;return[o,u]},useMutableSource:pA,useSyncExternalStore:hA,useId:RA,unstable_isNewReconciler:!1},zj={readContext:hn,useCallback:qA,useContext:hn,useEffect:Sm,useImperativeHandle:bA,useInsertionEffect:PA,useLayoutEffect:wA,useMemo:TA,useReducer:Am,useRef:SA,useState:function(){return Am(jl)},useDebugValue:xm,useDeferredValue:function(o){var u=gn();return Ct===null?u.memoizedState=o:jA(u,Ct.memoizedState,o)},useTransition:function(){var o=Am(jl)[0],u=gn().memoizedState;return[o,u]},useMutableSource:pA,useSyncExternalStore:hA,useId:RA,unstable_isNewReconciler:!1};function Pm(o,u){try{var d="",v=u;do d+=Lj(v),v=v.return;while(v);var A=d}catch(T){A=`
Error generating stack: `+T.message+`
`+T.stack}return{value:o,source:u,stack:A}}function wm(o,u){try{console.error(u.value)}catch(d){setTimeout(function(){throw d})}}var Yj=typeof WeakMap=="function"?WeakMap:Map;function UA(o,u,d){d=Vi(-1,d),d.tag=3,d.payload={element:null};var v=u.value;return d.callback=function(){mf||(mf=!0,Fm=v),wm(o,u)},d}function HA(o,u,d){d=Vi(-1,d),d.tag=3;var v=o.type.getDerivedStateFromError;if(typeof v=="function"){var A=u.value;d.payload=function(){return v(A)},d.callback=function(){wm(o,u)}}var T=o.stateNode;return T!==null&&typeof T.componentDidCatch=="function"&&(d.callback=function(){wm(o,u),typeof v!="function"&&(ca===null?ca=new Set([this]):ca.add(this));var U=u.stack;this.componentDidCatch(u.value,{componentStack:U!==null?U:""})}),d}function MA(o,u,d){var v=o.pingCache;if(v===null){v=o.pingCache=new Yj;var A=new Set;v.set(u,A)}else A=v.get(u),A===void 0&&(A=new Set,v.set(u,A));A.has(d)||(A.add(d),o=_j.bind(null,o,u,d),u.then(o,o))}function OA(o){do{var u;if((u=o.tag===13)&&(u=o.memoizedState,u=u!==null?u.dehydrated!==null:!0),u)return o;o=o.return}while(o!==null);return null}function zA(o,u,d,v,A){return(o.mode&1)===0?(o===u?o.flags|=65536:(o.flags|=128,d.flags|=131072,d.flags&=-52805,d.tag===1&&(d.alternate===null?d.tag=17:(u=Vi(-1,1),u.tag=2,ua(d,u))),d.lanes|=1),o):(o.flags|=65536,o.lanes=A,o)}function ii(o){o.flags|=4}function YA(o,u){if(o!==null&&o.child===u.child)return!0;if((u.flags&16)!==0)return!1;for(o=u.child;o!==null;){if((o.flags&12854)!==0||(o.subtreeFlags&12854)!==0)return!1;o=o.sibling}return!0}var Vl,Ll,ef,tf;if(_e)Vl=function(o,u){for(var d=u.child;d!==null;){if(d.tag===5||d.tag===6)pe(o,d.stateNode);else if(d.tag!==4&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===u)break;for(;d.sibling===null;){if(d.return===null||d.return===u)return;d=d.return}d.sibling.return=d.return,d=d.sibling}},Ll=function(){},ef=function(o,u,d,v,A){if(o=o.memoizedProps,o!==v){var T=u.stateNode,U=ri(yn.current);d=be(T,d,o,v,A,U),(u.updateQueue=d)&&ii(u)}},tf=function(o,u,d,v){d!==v&&ii(u)};else if(kr){Vl=function(o,u,d,v){for(var A=u.child;A!==null;){if(A.tag===5){var T=A.stateNode;d&&v&&(T=F1(T,A.type,A.memoizedProps,A)),pe(o,T)}else if(A.tag===6)T=A.stateNode,d&&v&&(T=I1(T,A.memoizedProps,A)),pe(o,T);else if(A.tag!==4){if(A.tag===22&&A.memoizedState!==null)T=A.child,T!==null&&(T.return=A),Vl(o,A,!0,!0);else if(A.child!==null){A.child.return=A,A=A.child;continue}}if(A===u)break;for(;A.sibling===null;){if(A.return===null||A.return===u)return;A=A.return}A.sibling.return=A.return,A=A.sibling}};var CA=function(o,u,d,v){for(var A=u.child;A!==null;){if(A.tag===5){var T=A.stateNode;d&&v&&(T=F1(T,A.type,A.memoizedProps,A)),C1(o,T)}else if(A.tag===6)T=A.stateNode,d&&v&&(T=I1(T,A.memoizedProps,A)),C1(o,T);else if(A.tag!==4){if(A.tag===22&&A.memoizedState!==null)T=A.child,T!==null&&(T.return=A),CA(o,A,!0,!0);else if(A.child!==null){A.child.return=A,A=A.child;continue}}if(A===u)break;for(;A.sibling===null;){if(A.return===null||A.return===u)return;A=A.return}A.sibling.return=A.return,A=A.sibling}};Ll=function(o,u){var d=u.stateNode;if(!YA(o,u)){o=d.containerInfo;var v=Y1(o);CA(v,u,!1,!1),d.pendingChildren=v,ii(u),QT(o,v)}},ef=function(o,u,d,v,A){var T=o.stateNode,U=o.memoizedProps;if((o=YA(o,u))&&U===v)u.stateNode=T;else{var C=u.stateNode,G=ri(yn.current),de=null;U!==v&&(de=be(C,d,U,v,A,G)),o&&de===null?u.stateNode=T:(T=XT(T,de,d,U,v,u,o,C),Pe(T,d,v,A,G)&&ii(u),u.stateNode=T,o?ii(u):Vl(T,u,!1,!1))}},tf=function(o,u,d,v){d!==v?(o=ri(no.current),d=ri(yn.current),u.stateNode=Ze(v,o,d,u),ii(u)):u.stateNode=o.stateNode}}else Ll=function(){},ef=function(){},tf=function(){};function Nl(o,u){if(!ct)switch(o.tailMode){case"hidden":u=o.tail;for(var d=null;u!==null;)u.alternate!==null&&(d=u),u=u.sibling;d===null?o.tail=null:d.sibling=null;break;case"collapsed":d=o.tail;for(var v=null;d!==null;)d.alternate!==null&&(v=d),d=d.sibling;v===null?u||o.tail===null?o.tail=null:o.tail.sibling=null:v.sibling=null}}function cr(o){var u=o.alternate!==null&&o.alternate.child===o.child,d=0,v=0;if(u)for(var A=o.child;A!==null;)d|=A.lanes|A.childLanes,v|=A.subtreeFlags&14680064,v|=A.flags&14680064,A.return=o,A=A.sibling;else for(A=o.child;A!==null;)d|=A.lanes|A.childLanes,v|=A.subtreeFlags,v|=A.flags,A.return=o,A=A.sibling;return o.subtreeFlags|=v,o.childLanes=d,u}function Cj(o,u,d){var v=u.pendingProps;switch(sm(u),u.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return cr(u),null;case 1:return Wr(u.type)&&Nc(),cr(u),null;case 3:return v=u.stateNode,io(),at(Nr),at(lr),pm(),v.pendingContext&&(v.context=v.pendingContext,v.pendingContext=null),(o===null||o.child===null)&&(Pl(u)?ii(u):o===null||o.memoizedState.isDehydrated&&(u.flags&256)===0||(u.flags|=1024,Un!==null&&(Jm(Un),Un=null))),Ll(o,u),cr(u),null;case 5:fm(u),d=ri(no.current);var A=u.type;if(o!==null&&u.stateNode!=null)ef(o,u,A,v,d),o.ref!==u.ref&&(u.flags|=512,u.flags|=2097152);else{if(!v){if(u.stateNode===null)throw Error(s(166));return cr(u),null}if(o=ri(yn.current),Pl(u)){if(!$e)throw Error(s(175));o=aj(u.stateNode,u.type,u.memoizedProps,d,o,u,!xl),u.updateQueue=o,o!==null&&ii(u)}else{var T=ue(A,v,d,o,u);Vl(T,u,!1,!1),u.stateNode=T,Pe(T,A,v,d,o)&&ii(u)}u.ref!==null&&(u.flags|=512,u.flags|=2097152)}return cr(u),null;case 6:if(o&&u.stateNode!=null)tf(o,u,o.memoizedProps,v);else{if(typeof v!="string"&&u.stateNode===null)throw Error(s(166));if(o=ri(no.current),d=ri(yn.current),Pl(u)){if(!$e)throw Error(s(176));if(o=u.stateNode,v=u.memoizedProps,(d=sj(o,v,u,!xl))&&(A=Zr,A!==null))switch(A.tag){case 3:hj(A.stateNode.containerInfo,o,v,(A.mode&1)!==0);break;case 5:mj(A.type,A.memoizedProps,A.stateNode,o,v,(A.mode&1)!==0)}d&&ii(u)}else u.stateNode=Ze(v,o,d,u)}return cr(u),null;case 13:if(at(yt),v=u.memoizedState,ct&&Xr!==null&&(u.mode&1)!==0&&(u.flags&128)===0){for(o=Xr;o;)o=yl(o);return to(),u.flags|=98560,u}if(v!==null&&v.dehydrated!==null){if(v=Pl(u),o===null){if(!v)throw Error(s(318));if(!$e)throw Error(s(344));if(o=u.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(s(317));oj(o,u)}else to(),(u.flags&128)===0&&(u.memoizedState=null),u.flags|=4;return cr(u),null}return Un!==null&&(Jm(Un),Un=null),(u.flags&128)!==0?(u.lanes=d,u):(v=v!==null,d=!1,o===null?Pl(u):d=o.memoizedState!==null,v!==d&&v&&(u.child.flags|=8192,(u.mode&1)!==0&&(o===null||(yt.current&1)!==0?It===0&&(It=3):Gm())),u.updateQueue!==null&&(u.flags|=4),cr(u),null);case 4:return io(),Ll(o,u),o===null&&aa(u.stateNode.containerInfo),cr(u),null;case 10:return em(u.type._context),cr(u),null;case 17:return Wr(u.type)&&Nc(),cr(u),null;case 19:if(at(yt),A=u.memoizedState,A===null)return cr(u),null;if(v=(u.flags&128)!==0,T=A.rendering,T===null)if(v)Nl(A,!1);else{if(It!==0||o!==null&&(o.flags&128)!==0)for(o=u.child;o!==null;){if(T=Bc(o),T!==null){for(u.flags|=128,Nl(A,!1),o=T.updateQueue,o!==null&&(u.updateQueue=o,u.flags|=4),u.subtreeFlags=0,o=d,v=u.child;v!==null;)d=v,A=o,d.flags&=14680066,T=d.alternate,T===null?(d.childLanes=0,d.lanes=A,d.child=null,d.subtreeFlags=0,d.memoizedProps=null,d.memoizedState=null,d.updateQueue=null,d.dependencies=null,d.stateNode=null):(d.childLanes=T.childLanes,d.lanes=T.lanes,d.child=T.child,d.subtreeFlags=0,d.deletions=null,d.memoizedProps=T.memoizedProps,d.memoizedState=T.memoizedState,d.updateQueue=T.updateQueue,d.type=T.type,A=T.dependencies,d.dependencies=A===null?null:{lanes:A.lanes,firstContext:A.firstContext}),v=v.sibling;return tt(yt,yt.current&1|2),u.child}o=o.sibling}A.tail!==null&&Kt()>Cm&&(u.flags|=128,v=!0,Nl(A,!1),u.lanes=4194304)}else{if(!v)if(o=Bc(T),o!==null){if(u.flags|=128,v=!0,o=o.updateQueue,o!==null&&(u.updateQueue=o,u.flags|=4),Nl(A,!0),A.tail===null&&A.tailMode==="hidden"&&!T.alternate&&!ct)return cr(u),null}else 2*Kt()-A.renderingStartTime>Cm&&d!==1073741824&&(u.flags|=128,v=!0,Nl(A,!1),u.lanes=4194304);A.isBackwards?(T.sibling=u.child,u.child=T):(o=A.last,o!==null?o.sibling=T:u.child=T,A.last=T)}return A.tail!==null?(u=A.tail,A.rendering=u,A.tail=u.sibling,A.renderingStartTime=Kt(),u.sibling=null,o=yt.current,tt(yt,v?o&1|2:o&1),u):(cr(u),null);case 22:case 23:return Dm(),v=u.memoizedState!==null,o!==null&&o.memoizedState!==null!==v&&(u.flags|=8192),v&&(u.mode&1)!==0?(Qr&1073741824)!==0&&(cr(u),_e&&u.subtreeFlags&6&&(u.flags|=8192)):cr(u),null;case 24:return null;case 25:return null}throw Error(s(156,u.tag))}var Fj=l.ReactCurrentOwner,Ur=!1;function br(o,u,d,v){u.child=o===null?fA(u,null,d,v):ro(u,o.child,d,v)}function FA(o,u,d,v,A){d=d.render;var T=u.ref;return _s(u,A),v=vm(o,u,d,v,T,A),d=ym(),o!==null&&!Ur?(u.updateQueue=o.updateQueue,u.flags&=-2053,o.lanes&=~A,Wi(o,u,A)):(ct&&d&&am(u),u.flags|=1,br(o,u,v,A),u.child)}function IA(o,u,d,v,A){if(o===null){var T=d.type;return typeof T=="function"&&!Km(T)&&T.defaultProps===void 0&&d.compare===null&&d.defaultProps===void 0?(u.tag=15,u.type=T,EA(o,u,T,v,A)):(o=Pf(d.type,null,v,u,u.mode,A),o.ref=u.ref,o.return=u,u.child=o)}if(T=o.child,(o.lanes&A)===0){var U=T.memoizedProps;if(d=d.compare,d=d!==null?d:Yc,d(U,v)&&o.ref===u.ref)return Wi(o,u,A)}return u.flags|=1,o=ha(T,v),o.ref=u.ref,o.return=u,u.child=o}function EA(o,u,d,v,A){if(o!==null){var T=o.memoizedProps;if(Yc(T,v)&&o.ref===u.ref)if(Ur=!1,u.pendingProps=v=T,(o.lanes&A)!==0)(o.flags&131072)!==0&&(Ur=!0);else return u.lanes=o.lanes,Wi(o,u,A)}return km(o,u,d,v,A)}function JA(o,u,d){var v=u.pendingProps,A=v.children,T=o!==null?o.memoizedState:null;if(v.mode==="hidden")if((u.mode&1)===0)u.memoizedState={baseLanes:0,cachePool:null,transitions:null},tt(so,Qr),Qr|=d;else if((d&1073741824)!==0)u.memoizedState={baseLanes:0,cachePool:null,transitions:null},v=T!==null?T.baseLanes:d,tt(so,Qr),Qr|=v;else return o=T!==null?T.baseLanes|d:d,u.lanes=u.childLanes=1073741824,u.memoizedState={baseLanes:o,cachePool:null,transitions:null},u.updateQueue=null,tt(so,Qr),Qr|=o,null;else T!==null?(v=T.baseLanes|d,u.memoizedState=null):v=d,tt(so,Qr),Qr|=v;return br(o,u,A,d),u.child}function DA(o,u){var d=u.ref;(o===null&&d!==null||o!==null&&o.ref!==d)&&(u.flags|=512,u.flags|=2097152)}function km(o,u,d,v,A){var T=Wr(d)?ls:lr.current;return T=Xs(u,T),_s(u,A),d=vm(o,u,d,v,T,A),v=ym(),o!==null&&!Ur?(u.updateQueue=o.updateQueue,u.flags&=-2053,o.lanes&=~A,Wi(o,u,A)):(ct&&v&&am(u),u.flags|=1,br(o,u,d,A),u.child)}function GA(o,u,d,v,A){if(Wr(d)){var T=!0;Wc(u)}else T=!1;if(_s(u,A),u.stateNode===null)o!==null&&(o.alternate=null,u.alternate=null,u.flags|=2),nA(u,d,v),im(u,d,v,A),v=!0;else if(o===null){var U=u.stateNode,C=u.memoizedProps;U.props=C;var G=U.context,de=d.contextType;typeof de=="object"&&de!==null?de=hn(de):(de=Wr(d)?ls:lr.current,de=Xs(u,de));var Ae=d.getDerivedStateFromProps,je=typeof Ae=="function"||typeof U.getSnapshotBeforeUpdate=="function";je||typeof U.UNSAFE_componentWillReceiveProps!="function"&&typeof U.componentWillReceiveProps!="function"||(C!==v||G!==de)&&iA(u,U,v,de),la=!1;var we=u.memoizedState;U.state=we,Ec(u,v,U,A),G=u.memoizedState,C!==v||we!==G||Nr.current||la?(typeof Ae=="function"&&(nm(u,d,Ae,v),G=u.memoizedState),(C=la||rA(u,d,C,v,we,G,de))?(je||typeof U.UNSAFE_componentWillMount!="function"&&typeof U.componentWillMount!="function"||(typeof U.componentWillMount=="function"&&U.componentWillMount(),typeof U.UNSAFE_componentWillMount=="function"&&U.UNSAFE_componentWillMount()),typeof U.componentDidMount=="function"&&(u.flags|=4194308)):(typeof U.componentDidMount=="function"&&(u.flags|=4194308),u.memoizedProps=v,u.memoizedState=G),U.props=v,U.state=G,U.context=de,v=C):(typeof U.componentDidMount=="function"&&(u.flags|=4194308),v=!1)}else{U=u.stateNode,_1(o,u),C=u.memoizedProps,de=u.type===u.elementType?C:Nn(u.type,C),U.props=de,je=u.pendingProps,we=U.context,G=d.contextType,typeof G=="object"&&G!==null?G=hn(G):(G=Wr(d)?ls:lr.current,G=Xs(u,G));var st=d.getDerivedStateFromProps;(Ae=typeof st=="function"||typeof U.getSnapshotBeforeUpdate=="function")||typeof U.UNSAFE_componentWillReceiveProps!="function"&&typeof U.componentWillReceiveProps!="function"||(C!==je||we!==G)&&iA(u,U,v,G),la=!1,we=u.memoizedState,U.state=we,Ec(u,v,U,A);var Xe=u.memoizedState;C!==je||we!==Xe||Nr.current||la?(typeof st=="function"&&(nm(u,d,st,v),Xe=u.memoizedState),(de=la||rA(u,d,de,v,we,Xe,G)||!1)?(Ae||typeof U.UNSAFE_componentWillUpdate!="function"&&typeof U.componentWillUpdate!="function"||(typeof U.componentWillUpdate=="function"&&U.componentWillUpdate(v,Xe,G),typeof U.UNSAFE_componentWillUpdate=="function"&&U.UNSAFE_componentWillUpdate(v,Xe,G)),typeof U.componentDidUpdate=="function"&&(u.flags|=4),typeof U.getSnapshotBeforeUpdate=="function"&&(u.flags|=1024)):(typeof U.componentDidUpdate!="function"||C===o.memoizedProps&&we===o.memoizedState||(u.flags|=4),typeof U.getSnapshotBeforeUpdate!="function"||C===o.memoizedProps&&we===o.memoizedState||(u.flags|=1024),u.memoizedProps=v,u.memoizedState=Xe),U.props=v,U.state=Xe,U.context=G,v=de):(typeof U.componentDidUpdate!="function"||C===o.memoizedProps&&we===o.memoizedState||(u.flags|=4),typeof U.getSnapshotBeforeUpdate!="function"||C===o.memoizedProps&&we===o.memoizedState||(u.flags|=1024),v=!1)}return bm(o,u,d,v,T,A)}function bm(o,u,d,v,A,T){DA(o,u);var U=(u.flags&128)!==0;if(!v&&!U)return A&&G1(u,d,!1),Wi(o,u,T);v=u.stateNode,Fj.current=u;var C=U&&typeof d.getDerivedStateFromError!="function"?null:v.render();return u.flags|=1,o!==null&&U?(u.child=ro(u,o.child,null,T),u.child=ro(u,null,C,T)):br(o,u,C,T),u.memoizedState=v.state,A&&G1(u,d,!0),u.child}function KA(o){var u=o.stateNode;u.pendingContext?J1(o,u.pendingContext,u.pendingContext!==u.context):u.context&&J1(o,u.context,!1),cm(o,u.containerInfo)}function BA(o,u,d,v,A){return to(),um(A),u.flags|=256,br(o,u,d,v),u.child}var rf={dehydrated:null,treeContext:null,retryLane:0};function nf(o){return{baseLanes:o,cachePool:null,transitions:null}}function ZA(o,u){return{baseLanes:o.baseLanes|u,cachePool:null,transitions:o.transitions}}function XA(o,u,d){var v=u.pendingProps,A=yt.current,T=!1,U=(u.flags&128)!==0,C;if((C=U)||(C=o!==null&&o.memoizedState===null?!1:(A&2)!==0),C?(T=!0,u.flags&=-129):(o===null||o.memoizedState!==null)&&(A|=1),tt(yt,A&1),o===null)return lm(u),o=u.memoizedState,o!==null&&(o=o.dehydrated,o!==null)?((u.mode&1)===0?u.lanes=1:Ch(o)?u.lanes=8:u.lanes=1073741824,null):(A=v.children,o=v.fallback,T?(v=u.mode,T=u.child,A={mode:"hidden",children:A},(v&1)===0&&T!==null?(T.childLanes=0,T.pendingProps=A):T=wf(A,v,0,null),o=vs(o,v,d,null),T.return=u,o.return=u,T.sibling=o,u.child=T,u.child.memoizedState=nf(d),u.memoizedState=rf,o):qm(u,A));if(A=o.memoizedState,A!==null){if(C=A.dehydrated,C!==null){if(U)return u.flags&256?(u.flags&=-257,af(o,u,d,Error(s(422)))):u.memoizedState!==null?(u.child=o.child,u.flags|=128,null):(T=v.fallback,A=u.mode,v=wf({mode:"visible",children:v.children},A,0,null),T=vs(T,A,d,null),T.flags|=2,v.return=u,T.return=u,v.sibling=T,u.child=v,(u.mode&1)!==0&&ro(u,o.child,null,d),u.child.memoizedState=nf(d),u.memoizedState=rf,T);if((u.mode&1)===0)u=af(o,u,d,null);else if(Ch(C))u=af(o,u,d,Error(s(419)));else if(v=(d&o.childLanes)!==0,Ur||v){if(v=Ft,v!==null){switch(d&-d){case 4:T=2;break;case 16:T=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:T=32;break;case 536870912:T=268435456;break;default:T=0}v=(T&(v.suspendedLanes|d))!==0?0:T,v!==0&&v!==A.retryLane&&(A.retryLane=v,_r(o,v,-1))}Gm(),u=af(o,u,d,Error(s(421)))}else E1(C)?(u.flags|=128,u.child=o.child,u=$j.bind(null,o),tj(C,u),u=null):(d=A.treeContext,$e&&(Xr=ij(C),Zr=u,ct=!0,Un=null,xl=!1,d!==null&&(mn[vn++]=Li,mn[vn++]=Ni,mn[vn++]=us,Li=d.id,Ni=d.overflow,us=u)),u=qm(u,u.pendingProps.children),u.flags|=4096);return u}return T?(v=_A(o,u,v.children,v.fallback,d),T=u.child,A=o.child.memoizedState,T.memoizedState=A===null?nf(d):ZA(A,d),T.childLanes=o.childLanes&~d,u.memoizedState=rf,v):(d=QA(o,u,v.children,d),u.memoizedState=null,d)}return T?(v=_A(o,u,v.children,v.fallback,d),T=u.child,A=o.child.memoizedState,T.memoizedState=A===null?nf(d):ZA(A,d),T.childLanes=o.childLanes&~d,u.memoizedState=rf,v):(d=QA(o,u,v.children,d),u.memoizedState=null,d)}function qm(o,u){return u=wf({mode:"visible",children:u},o.mode,0,null),u.return=o,o.child=u}function QA(o,u,d,v){var A=o.child;return o=A.sibling,d=ha(A,{mode:"visible",children:d}),(u.mode&1)===0&&(d.lanes=v),d.return=u,d.sibling=null,o!==null&&(v=u.deletions,v===null?(u.deletions=[o],u.flags|=16):v.push(o)),u.child=d}function _A(o,u,d,v,A){var T=u.mode;o=o.child;var U=o.sibling,C={mode:"hidden",children:d};return(T&1)===0&&u.child!==o?(d=u.child,d.childLanes=0,d.pendingProps=C,u.deletions=null):(d=ha(o,C),d.subtreeFlags=o.subtreeFlags&14680064),U!==null?v=ha(U,v):(v=vs(v,T,A,null),v.flags|=2),v.return=u,d.return=u,d.sibling=v,u.child=d,v}function af(o,u,d,v){return v!==null&&um(v),ro(u,o.child,null,d),o=qm(u,u.pendingProps.children),o.flags|=2,u.memoizedState=null,o}function $A(o,u,d){o.lanes|=u;var v=o.alternate;v!==null&&(v.lanes|=u),tm(o.return,u,d)}function Tm(o,u,d,v,A){var T=o.memoizedState;T===null?o.memoizedState={isBackwards:u,rendering:null,renderingStartTime:0,last:v,tail:d,tailMode:A}:(T.isBackwards=u,T.rendering=null,T.renderingStartTime=0,T.last=v,T.tail=d,T.tailMode=A)}function eS(o,u,d){var v=u.pendingProps,A=v.revealOrder,T=v.tail;if(br(o,u,v.children,d),v=yt.current,(v&2)!==0)v=v&1|2,u.flags|=128;else{if(o!==null&&(o.flags&128)!==0)e:for(o=u.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&$A(o,d,u);else if(o.tag===19)$A(o,d,u);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===u)break e;for(;o.sibling===null;){if(o.return===null||o.return===u)break e;o=o.return}o.sibling.return=o.return,o=o.sibling}v&=1}if(tt(yt,v),(u.mode&1)===0)u.memoizedState=null;else switch(A){case"forwards":for(d=u.child,A=null;d!==null;)o=d.alternate,o!==null&&Bc(o)===null&&(A=d),d=d.sibling;d=A,d===null?(A=u.child,u.child=null):(A=d.sibling,d.sibling=null),Tm(u,!1,A,d,T);break;case"backwards":for(d=null,A=u.child,u.child=null;A!==null;){if(o=A.alternate,o!==null&&Bc(o)===null){u.child=A;break}o=A.sibling,A.sibling=d,d=A,A=o}Tm(u,!0,d,null,T);break;case"together":Tm(u,!1,null,null,void 0);break;default:u.memoizedState=null}return u.child}function Wi(o,u,d){if(o!==null&&(u.dependencies=o.dependencies),ds|=u.lanes,(d&u.childLanes)===0)return null;if(o!==null&&u.child!==o.child)throw Error(s(153));if(u.child!==null){for(o=u.child,d=ha(o,o.pendingProps),u.child=d,d.return=u;o.sibling!==null;)o=o.sibling,d=d.sibling=ha(o,o.pendingProps),d.return=u;d.sibling=null}return u.child}function Ij(o,u,d){switch(u.tag){case 3:KA(u),to();break;case 5:dA(u);break;case 1:Wr(u.type)&&Wc(u);break;case 4:cm(u,u.stateNode.containerInfo);break;case 10:Q1(u,u.type._context,u.memoizedProps.value);break;case 13:var v=u.memoizedState;if(v!==null)return v.dehydrated!==null?(tt(yt,yt.current&1),u.flags|=128,null):(d&u.child.childLanes)!==0?XA(o,u,d):(tt(yt,yt.current&1),o=Wi(o,u,d),o!==null?o.sibling:null);tt(yt,yt.current&1);break;case 19:if(v=(d&u.childLanes)!==0,(o.flags&128)!==0){if(v)return eS(o,u,d);u.flags|=128}var A=u.memoizedState;if(A!==null&&(A.rendering=null,A.tail=null,A.lastEffect=null),tt(yt,yt.current),v)break;return null;case 22:case 23:return u.lanes=0,JA(o,u,d)}return Wi(o,u,d)}function Ej(o,u){switch(sm(u),u.tag){case 1:return Wr(u.type)&&Nc(),o=u.flags,o&65536?(u.flags=o&-65537|128,u):null;case 3:return io(),at(Nr),at(lr),pm(),o=u.flags,(o&65536)!==0&&(o&128)===0?(u.flags=o&-65537|128,u):null;case 5:return fm(u),null;case 13:if(at(yt),o=u.memoizedState,o!==null&&o.dehydrated!==null){if(u.alternate===null)throw Error(s(340));to()}return o=u.flags,o&65536?(u.flags=o&-65537|128,u):null;case 19:return at(yt),null;case 4:return io(),null;case 10:return em(u.type._context),null;case 22:case 23:return Dm(),null;case 24:return null;default:return null}}var sf=!1,fr=!1,Jj=typeof WeakSet=="function"?WeakSet:Set,me=null;function ao(o,u){var d=o.ref;if(d!==null)if(typeof d=="function")try{d(null)}catch(v){ft(o,u,v)}else d.current=null}function jm(o,u,d){try{d()}catch(v){ft(o,u,v)}}var tS=!1;function Dj(o,u){for(oe(o.containerInfo),me=u;me!==null;)if(o=me,u=o.child,(o.subtreeFlags&1028)!==0&&u!==null)u.return=o,me=u;else for(;me!==null;){o=me;try{var d=o.alternate;if((o.flags&1024)!==0)switch(o.tag){case 0:case 11:case 15:break;case 1:if(d!==null){var v=d.memoizedProps,A=d.memoizedState,T=o.stateNode,U=T.getSnapshotBeforeUpdate(o.elementType===o.type?v:Nn(o.type,v),A);T.__reactInternalSnapshotBeforeUpdate=U}break;case 3:_e&&ZT(o.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(s(163))}}catch(C){ft(o,o.return,C)}if(u=o.sibling,u!==null){u.return=o.return,me=u;break}me=o.return}return d=tS,tS=!1,d}function Wl(o,u,d){var v=u.updateQueue;if(v=v!==null?v.lastEffect:null,v!==null){var A=v=v.next;do{if((A.tag&o)===o){var T=A.destroy;A.destroy=void 0,T!==void 0&&jm(u,d,T)}A=A.next}while(A!==v)}}function of(o,u){if(u=u.updateQueue,u=u!==null?u.lastEffect:null,u!==null){var d=u=u.next;do{if((d.tag&o)===o){var v=d.create;d.destroy=v()}d=d.next}while(d!==u)}}function Rm(o){var u=o.ref;if(u!==null){var d=o.stateNode;switch(o.tag){case 5:o=te(d);break;default:o=d}typeof u=="function"?u(o):u.current=o}}function rS(o){var u=o.alternate;u!==null&&(o.alternate=null,rS(u)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(u=o.stateNode,u!==null&&Tt(u)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}function nS(o){return o.tag===5||o.tag===3||o.tag===4}function iS(o){e:for(;;){for(;o.sibling===null;){if(o.return===null||nS(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue e;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function Vm(o,u,d){var v=o.tag;if(v===5||v===6)o=o.stateNode,u?Te(d,o,u):w(d,o);else if(v!==4&&(o=o.child,o!==null))for(Vm(o,u,d),o=o.sibling;o!==null;)Vm(o,u,d),o=o.sibling}function Lm(o,u,d){var v=o.tag;if(v===5||v===6)o=o.stateNode,u?ee(d,o,u):S(d,o);else if(v!==4&&(o=o.child,o!==null))for(Lm(o,u,d),o=o.sibling;o!==null;)Lm(o,u,d),o=o.sibling}var er=null,Hn=!1;function ai(o,u,d){for(d=d.child;d!==null;)Nm(o,u,d),d=d.sibling}function Nm(o,u,d){if(ei&&typeof ei.onCommitFiberUnmount=="function")try{ei.onCommitFiberUnmount(Oc,d)}catch{}switch(d.tag){case 5:fr||ao(d,u);case 6:if(_e){var v=er,A=Hn;er=null,ai(o,u,d),er=v,Hn=A,er!==null&&(Hn?et(er,d.stateNode):ut(er,d.stateNode))}else ai(o,u,d);break;case 18:_e&&er!==null&&(Hn?dj(er,d.stateNode):fj(er,d.stateNode));break;case 4:_e?(v=er,A=Hn,er=d.stateNode.containerInfo,Hn=!0,ai(o,u,d),er=v,Hn=A):(kr&&(v=d.stateNode.containerInfo,A=Y1(v),Yh(v,A)),ai(o,u,d));break;case 0:case 11:case 14:case 15:if(!fr&&(v=d.updateQueue,v!==null&&(v=v.lastEffect,v!==null))){A=v=v.next;do{var T=A,U=T.destroy;T=T.tag,U!==void 0&&((T&2)!==0||(T&4)!==0)&&jm(d,u,U),A=A.next}while(A!==v)}ai(o,u,d);break;case 1:if(!fr&&(ao(d,u),v=d.stateNode,typeof v.componentWillUnmount=="function"))try{v.props=d.memoizedProps,v.state=d.memoizedState,v.componentWillUnmount()}catch(C){ft(d,u,C)}ai(o,u,d);break;case 21:ai(o,u,d);break;case 22:d.mode&1?(fr=(v=fr)||d.memoizedState!==null,ai(o,u,d),fr=v):ai(o,u,d);break;default:ai(o,u,d)}}function aS(o){var u=o.updateQueue;if(u!==null){o.updateQueue=null;var d=o.stateNode;d===null&&(d=o.stateNode=new Jj),u.forEach(function(v){var A=e8.bind(null,o,v);d.has(v)||(d.add(v),v.then(A,A))})}}function Mn(o,u){var d=u.deletions;if(d!==null)for(var v=0;v<d.length;v++){var A=d[v];try{var T=o,U=u;if(_e){var C=U;e:for(;C!==null;){switch(C.tag){case 5:er=C.stateNode,Hn=!1;break e;case 3:er=C.stateNode.containerInfo,Hn=!0;break e;case 4:er=C.stateNode.containerInfo,Hn=!0;break e}C=C.return}if(er===null)throw Error(s(160));Nm(T,U,A),er=null,Hn=!1}else Nm(T,U,A);var G=A.alternate;G!==null&&(G.return=null),A.return=null}catch(de){ft(A,u,de)}}if(u.subtreeFlags&12854)for(u=u.child;u!==null;)sS(u,o),u=u.sibling}function sS(o,u){var d=o.alternate,v=o.flags;switch(o.tag){case 0:case 11:case 14:case 15:if(Mn(u,o),si(o),v&4){try{Wl(3,o,o.return),of(3,o)}catch(G){ft(o,o.return,G)}try{Wl(5,o,o.return)}catch(G){ft(o,o.return,G)}}break;case 1:Mn(u,o),si(o),v&512&&d!==null&&ao(d,d.return);break;case 5:if(Mn(u,o),si(o),v&512&&d!==null&&ao(d,d.return),_e){if(o.flags&32){var A=o.stateNode;try{it(A)}catch(G){ft(o,o.return,G)}}if(v&4&&(A=o.stateNode,A!=null)){var T=o.memoizedProps;if(d=d!==null?d.memoizedProps:T,v=o.type,u=o.updateQueue,o.updateQueue=null,u!==null)try{B(A,u,v,d,T,o)}catch(G){ft(o,o.return,G)}}}break;case 6:if(Mn(u,o),si(o),v&4&&_e){if(o.stateNode===null)throw Error(s(162));A=o.stateNode,T=o.memoizedProps,d=d!==null?d.memoizedProps:T;try{W(A,d,T)}catch(G){ft(o,o.return,G)}}break;case 3:if(Mn(u,o),si(o),v&4){if(_e&&$e&&d!==null&&d.memoizedState.isDehydrated)try{uj(u.containerInfo)}catch(G){ft(o,o.return,G)}if(kr){d=u.containerInfo,A=u.pendingChildren;try{Yh(d,A)}catch(G){ft(o,o.return,G)}}}break;case 4:if(Mn(u,o),si(o),v&4&&kr){A=o.stateNode,d=A.containerInfo,A=A.pendingChildren;try{Yh(d,A)}catch(G){ft(o,o.return,G)}}break;case 13:Mn(u,o),si(o),d=o.child,d.flags&8192&&d.memoizedState!==null&&(d.alternate===null||d.alternate.memoizedState===null)&&(Ym=Kt()),v&4&&aS(o);break;case 22:if(d=d!==null&&d.memoizedState!==null,o.mode&1){var U=fr;fr=U||d,Mn(u,o),fr=U}else Mn(u,o);if(si(o),v&8192){if(v=o.memoizedState!==null,_e){e:if(u=null,_e)for(U=o;;){if(U.tag===5){if(u===null){u=U;try{A=U.stateNode,v?Ee(A):KT(U.stateNode,U.memoizedProps)}catch(G){ft(o,o.return,G)}}}else if(U.tag===6){if(u===null)try{T=U.stateNode,v?GT(T):BT(T,U.memoizedProps)}catch(G){ft(o,o.return,G)}}else if((U.tag!==22&&U.tag!==23||U.memoizedState===null||U===o)&&U.child!==null){U.child.return=U,U=U.child;continue}if(U===o)break e;for(;U.sibling===null;){if(U.return===null||U.return===o)break e;u===U&&(u=null),U=U.return}u===U&&(u=null),U.sibling.return=U.return,U=U.sibling}}if(v&&!d&&(o.mode&1)!==0)for(me=o,o=o.child;o!==null;){for(d=me=o;me!==null;){switch(A=me,T=A.child,A.tag){case 0:case 11:case 14:case 15:Wl(4,A,A.return);break;case 1:ao(A,A.return);var C=A.stateNode;if(typeof C.componentWillUnmount=="function"){v=A,u=A.return;try{U=v,C.props=U.memoizedProps,C.state=U.memoizedState,C.componentWillUnmount()}catch(G){ft(v,u,G)}}break;case 5:ao(A,A.return);break;case 22:if(A.memoizedState!==null){uS(d);continue}}T!==null?(T.return=A,me=T):uS(d)}o=o.sibling}}break;case 19:Mn(u,o),si(o),v&4&&aS(o);break;case 21:break;default:Mn(u,o),si(o)}}function si(o){var u=o.flags;if(u&2){try{if(_e){e:{for(var d=o.return;d!==null;){if(nS(d)){var v=d;break e}d=d.return}throw Error(s(160))}switch(v.tag){case 5:var A=v.stateNode;v.flags&32&&(it(A),v.flags&=-33);var T=iS(o);Lm(o,T,A);break;case 3:case 4:var U=v.stateNode.containerInfo,C=iS(o);Vm(o,C,U);break;default:throw Error(s(161))}}}catch(G){ft(o,o.return,G)}o.flags&=-3}u&4096&&(o.flags&=-4097)}function Gj(o,u,d){me=o,oS(o)}function oS(o,u,d){for(var v=(o.mode&1)!==0;me!==null;){var A=me,T=A.child;if(A.tag===22&&v){var U=A.memoizedState!==null||sf;if(!U){var C=A.alternate,G=C!==null&&C.memoizedState!==null||fr;C=sf;var de=fr;if(sf=U,(fr=G)&&!de)for(me=A;me!==null;)U=me,G=U.child,U.tag===22&&U.memoizedState!==null?cS(A):G!==null?(G.return=U,me=G):cS(A);for(;T!==null;)me=T,oS(T),T=T.sibling;me=A,sf=C,fr=de}lS(o)}else(A.subtreeFlags&8772)!==0&&T!==null?(T.return=A,me=T):lS(o)}}function lS(o){for(;me!==null;){var u=me;if((u.flags&8772)!==0){var d=u.alternate;try{if((u.flags&8772)!==0)switch(u.tag){case 0:case 11:case 15:fr||of(5,u);break;case 1:var v=u.stateNode;if(u.flags&4&&!fr)if(d===null)v.componentDidMount();else{var A=u.elementType===u.type?d.memoizedProps:Nn(u.type,d.memoizedProps);v.componentDidUpdate(A,d.memoizedState,v.__reactInternalSnapshotBeforeUpdate)}var T=u.updateQueue;T!==null&&eA(u,T,v);break;case 3:var U=u.updateQueue;if(U!==null){if(d=null,u.child!==null)switch(u.child.tag){case 5:d=te(u.child.stateNode);break;case 1:d=u.child.stateNode}eA(u,U,d)}break;case 5:var C=u.stateNode;d===null&&u.flags&4&&I(C,u.type,u.memoizedProps,u);break;case 6:break;case 4:break;case 12:break;case 13:if($e&&u.memoizedState===null){var G=u.alternate;if(G!==null){var de=G.memoizedState;if(de!==null){var Ae=de.dehydrated;Ae!==null&&cj(Ae)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(s(163))}fr||u.flags&512&&Rm(u)}catch(je){ft(u,u.return,je)}}if(u===o){me=null;break}if(d=u.sibling,d!==null){d.return=u.return,me=d;break}me=u.return}}function uS(o){for(;me!==null;){var u=me;if(u===o){me=null;break}var d=u.sibling;if(d!==null){d.return=u.return,me=d;break}me=u.return}}function cS(o){for(;me!==null;){var u=me;try{switch(u.tag){case 0:case 11:case 15:var d=u.return;try{of(4,u)}catch(G){ft(u,d,G)}break;case 1:var v=u.stateNode;if(typeof v.componentDidMount=="function"){var A=u.return;try{v.componentDidMount()}catch(G){ft(u,A,G)}}var T=u.return;try{Rm(u)}catch(G){ft(u,T,G)}break;case 5:var U=u.return;try{Rm(u)}catch(G){ft(u,U,G)}}}catch(G){ft(u,u.return,G)}if(u===o){me=null;break}var C=u.sibling;if(C!==null){C.return=u.return,me=C;break}me=u.return}}var lf=0,uf=1,cf=2,ff=3,df=4;if(typeof Symbol=="function"&&Symbol.for){var Ul=Symbol.for;lf=Ul("selector.component"),uf=Ul("selector.has_pseudo_class"),cf=Ul("selector.role"),ff=Ul("selector.test_id"),df=Ul("selector.text")}function Wm(o){var u=$t(o);if(u!=null){if(typeof u.memoizedProps["data-testname"]!="string")throw Error(s(364));return u}if(o=$n(o),o===null)throw Error(s(362));return o.stateNode.current}function Um(o,u){switch(u.$$typeof){case lf:if(o.type===u.value)return!0;break;case uf:e:{u=u.value,o=[o,0];for(var d=0;d<o.length;){var v=o[d++],A=o[d++],T=u[A];if(v.tag!==5||!pn(v)){for(;T!=null&&Um(v,T);)A++,T=u[A];if(A===u.length){u=!0;break e}else for(v=v.child;v!==null;)o.push(v,A),v=v.sibling}}u=!1}return u;case cf:if(o.tag===5&&or(o.stateNode,u.value))return!0;break;case df:if((o.tag===5||o.tag===6)&&(o=os(o),o!==null&&0<=o.indexOf(u.value)))return!0;break;case ff:if(o.tag===5&&(o=o.memoizedProps["data-testname"],typeof o=="string"&&o.toLowerCase()===u.value.toLowerCase()))return!0;break;default:throw Error(s(365))}return!1}function Hm(o){switch(o.$$typeof){case lf:return"<"+(N(o.value)||"Unknown")+">";case uf:return":has("+(Hm(o)||"")+")";case cf:return'[role="'+o.value+'"]';case df:return'"'+o.value+'"';case ff:return'[data-testname="'+o.value+'"]';default:throw Error(s(365))}}function fS(o,u){var d=[];o=[o,0];for(var v=0;v<o.length;){var A=o[v++],T=o[v++],U=u[T];if(A.tag!==5||!pn(A)){for(;U!=null&&Um(A,U);)T++,U=u[T];if(T===u.length)d.push(A);else for(A=A.child;A!==null;)o.push(A,T),A=A.sibling}}return d}function Mm(o,u){if(!dn)throw Error(s(363));o=Wm(o),o=fS(o,u),u=[],o=Array.from(o);for(var d=0;d<o.length;){var v=o[d++];if(v.tag===5)pn(v)||u.push(v.stateNode);else for(v=v.child;v!==null;)o.push(v),v=v.sibling}return u}var Kj=Math.ceil,pf=l.ReactCurrentDispatcher,Om=l.ReactCurrentOwner,Rt=l.ReactCurrentBatchConfig,Ve=0,Ft=null,Ut=null,tr=0,Qr=0,so=sa(0),It=0,Hl=null,ds=0,hf=0,zm=0,Ml=null,Hr=null,Ym=0,Cm=1/0,Ui=null;function oo(){Cm=Kt()+500}var mf=!1,Fm=null,ca=null,vf=!1,fa=null,yf=0,Ol=0,Im=null,gf=-1,Af=0;function dr(){return(Ve&6)!==0?Kt():gf!==-1?gf:gf=Kt()}function da(o){return(o.mode&1)===0?1:(Ve&2)!==0&&tr!==0?tr&-tr:Vj.transition!==null?(Af===0&&(Af=K1()),Af):(o=He,o!==0?o:ji())}function _r(o,u,d){if(50<Ol)throw Ol=0,Im=null,Error(s(185));var v=Sf(o,u);return v===null?null:(Sl(v,u,d),((Ve&2)===0||v!==Ft)&&(v===Ft&&((Ve&2)===0&&(hf|=u),It===4&&pa(v,tr)),Mr(v,d),u===1&&Ve===0&&(o.mode&1)===0&&(oo(),zc&&ti())),v)}function Sf(o,u){o.lanes|=u;var d=o.alternate;for(d!==null&&(d.lanes|=u),d=o,o=o.return;o!==null;)o.childLanes|=u,d=o.alternate,d!==null&&(d.childLanes|=u),d=o,o=o.return;return d.tag===3?d.stateNode:null}function dS(o){return(Ft!==null||Wn!==null)&&(o.mode&1)!==0&&(Ve&2)===0}function Mr(o,u){var d=o.callbackNode;xj(o,u);var v=Mc(o,o===Ft?tr:0);if(v===0)d!==null&&Z1(d),o.callbackNode=null,o.callbackPriority=0;else if(u=v&-v,o.callbackPriority!==u){if(d!=null&&Z1(d),u===1)o.tag===0?Rj(hS.bind(null,o)):X1(hS.bind(null,o)),hl?ml(function(){Ve===0&&ti()}):Bh(Zh,ti),d=null;else{switch(B1(v)){case 1:d=Zh;break;case 4:d=bj;break;case 16:d=Xh;break;case 536870912:d=qj;break;default:d=Xh}d=wS(d,pS.bind(null,o))}o.callbackPriority=u,o.callbackNode=d}}function pS(o,u){if(gf=-1,Af=0,(Ve&6)!==0)throw Error(s(327));var d=o.callbackNode;if(ms()&&o.callbackNode!==d)return null;var v=Mc(o,o===Ft?tr:0);if(v===0)return null;if((v&30)!==0||(v&o.expiredLanes)!==0||u)u=xf(o,v);else{u=v;var A=Ve;Ve|=2;var T=yS();(Ft!==o||tr!==u)&&(Ui=null,oo(),ps(o,u));do try{Xj();break}catch(C){vS(o,C)}while(1);$h(),pf.current=T,Ve=A,Ut!==null?u=0:(Ft=null,tr=0,u=It)}if(u!==0){if(u===2&&(A=Dh(o),A!==0&&(v=A,u=Em(o,A))),u===1)throw d=Hl,ps(o,0),pa(o,v),Mr(o,Kt()),d;if(u===6)pa(o,v);else{if(A=o.current.alternate,(v&30)===0&&!Bj(A)&&(u=xf(o,v),u===2&&(T=Dh(o),T!==0&&(v=T,u=Em(o,T))),u===1))throw d=Hl,ps(o,0),pa(o,v),Mr(o,Kt()),d;switch(o.finishedWork=A,o.finishedLanes=v,u){case 0:case 1:throw Error(s(345));case 2:hs(o,Hr,Ui);break;case 3:if(pa(o,v),(v&130023424)===v&&(u=Ym+500-Kt(),10<u)){if(Mc(o,0)!==0)break;if(A=o.suspendedLanes,(A&v)!==v){dr(),o.pingedLanes|=o.suspendedLanes&A;break}o.timeoutHandle=vt(hs.bind(null,o,Hr,Ui),u);break}hs(o,Hr,Ui);break;case 4:if(pa(o,v),(v&4194240)===v)break;for(u=o.eventTimes,A=-1;0<v;){var U=31-Vn(v);T=1<<U,U=u[U],U>A&&(A=U),v&=~T}if(v=A,v=Kt()-v,v=(120>v?120:480>v?480:1080>v?1080:1920>v?1920:3e3>v?3e3:4320>v?4320:1960*Kj(v/1960))-v,10<v){o.timeoutHandle=vt(hs.bind(null,o,Hr,Ui),v);break}hs(o,Hr,Ui);break;case 5:hs(o,Hr,Ui);break;default:throw Error(s(329))}}}return Mr(o,Kt()),o.callbackNode===d?pS.bind(null,o):null}function Em(o,u){var d=Ml;return o.current.memoizedState.isDehydrated&&(ps(o,u).flags|=256),o=xf(o,u),o!==2&&(u=Hr,Hr=d,u!==null&&Jm(u)),o}function Jm(o){Hr===null?Hr=o:Hr.push.apply(Hr,o)}function Bj(o){for(var u=o;;){if(u.flags&16384){var d=u.updateQueue;if(d!==null&&(d=d.stores,d!==null))for(var v=0;v<d.length;v++){var A=d[v],T=A.getSnapshot;A=A.value;try{if(!Ln(T(),A))return!1}catch{return!1}}}if(d=u.child,u.subtreeFlags&16384&&d!==null)d.return=u,u=d;else{if(u===o)break;for(;u.sibling===null;){if(u.return===null||u.return===o)return!0;u=u.return}u.sibling.return=u.return,u=u.sibling}}return!0}function pa(o,u){for(u&=~zm,u&=~hf,o.suspendedLanes|=u,o.pingedLanes&=~u,o=o.expirationTimes;0<u;){var d=31-Vn(u),v=1<<d;o[d]=-1,u&=~v}}function hS(o){if((Ve&6)!==0)throw Error(s(327));ms();var u=Mc(o,0);if((u&1)===0)return Mr(o,Kt()),null;var d=xf(o,u);if(o.tag!==0&&d===2){var v=Dh(o);v!==0&&(u=v,d=Em(o,v))}if(d===1)throw d=Hl,ps(o,0),pa(o,u),Mr(o,Kt()),d;if(d===6)throw Error(s(345));return o.finishedWork=o.current.alternate,o.finishedLanes=u,hs(o,Hr,Ui),Mr(o,Kt()),null}function mS(o){fa!==null&&fa.tag===0&&(Ve&6)===0&&ms();var u=Ve;Ve|=1;var d=Rt.transition,v=He;try{if(Rt.transition=null,He=1,o)return o()}finally{He=v,Rt.transition=d,Ve=u,(Ve&6)===0&&ti()}}function Dm(){Qr=so.current,at(so)}function ps(o,u){o.finishedWork=null,o.finishedLanes=0;var d=o.timeoutHandle;if(d!==qt&&(o.timeoutHandle=qt,_t(d)),Ut!==null)for(d=Ut.return;d!==null;){var v=d;switch(sm(v),v.tag){case 1:v=v.type.childContextTypes,v!=null&&Nc();break;case 3:io(),at(Nr),at(lr),pm();break;case 5:fm(v);break;case 4:io();break;case 13:at(yt);break;case 19:at(yt);break;case 10:em(v.type._context);break;case 22:case 23:Dm()}d=d.return}if(Ft=o,Ut=o=ha(o.current,null),tr=Qr=u,It=0,Hl=null,zm=hf=ds=0,Hr=Ml=null,Wn!==null){for(u=0;u<Wn.length;u++)if(d=Wn[u],v=d.interleaved,v!==null){d.interleaved=null;var A=v.next,T=d.pending;if(T!==null){var U=T.next;T.next=A,v.next=U}d.pending=v}Wn=null}return o}function vS(o,u){do{var d=Ut;try{if($h(),Zc.current=$c,Xc){for(var v=gt.memoizedState;v!==null;){var A=v.queue;A!==null&&(A.pending=null),v=v.next}Xc=!1}if(fs=0,Bt=Ct=gt=null,ql=!1,Tl=0,Om.current=null,d===null||d.return===null){It=1,Hl=u,Ut=null;break}e:{var T=o,U=d.return,C=d,G=u;if(u=tr,C.flags|=32768,G!==null&&typeof G=="object"&&typeof G.then=="function"){var de=G,Ae=C,je=Ae.tag;if((Ae.mode&1)===0&&(je===0||je===11||je===15)){var we=Ae.alternate;we?(Ae.updateQueue=we.updateQueue,Ae.memoizedState=we.memoizedState,Ae.lanes=we.lanes):(Ae.updateQueue=null,Ae.memoizedState=null)}var st=OA(U);if(st!==null){st.flags&=-257,zA(st,U,C,T,u),st.mode&1&&MA(T,de,u),u=st,G=de;var Xe=u.updateQueue;if(Xe===null){var Or=new Set;Or.add(G),u.updateQueue=Or}else Xe.add(G);break e}else{if((u&1)===0){MA(T,de,u),Gm();break e}G=Error(s(426))}}else if(ct&&C.mode&1){var Hi=OA(U);if(Hi!==null){(Hi.flags&65536)===0&&(Hi.flags|=256),zA(Hi,U,C,T,u),um(G);break e}}T=G,It!==4&&(It=2),Ml===null?Ml=[T]:Ml.push(T),G=Pm(G,C),C=U;do{switch(C.tag){case 3:C.flags|=65536,u&=-u,C.lanes|=u;var Z=UA(C,G,u);$1(C,Z);break e;case 1:T=G;var E=C.type,_=C.stateNode;if((C.flags&128)===0&&(typeof E.getDerivedStateFromError=="function"||_!==null&&typeof _.componentDidCatch=="function"&&(ca===null||!ca.has(_)))){C.flags|=65536,u&=-u,C.lanes|=u;var he=HA(C,T,u);$1(C,he);break e}}C=C.return}while(C!==null)}AS(d)}catch(xe){u=xe,Ut===d&&d!==null&&(Ut=d=d.return);continue}break}while(1)}function yS(){var o=pf.current;return pf.current=$c,o===null?$c:o}function Gm(){(It===0||It===3||It===2)&&(It=4),Ft===null||(ds&268435455)===0&&(hf&268435455)===0||pa(Ft,tr)}function xf(o,u){var d=Ve;Ve|=2;var v=yS();(Ft!==o||tr!==u)&&(Ui=null,ps(o,u));do try{Zj();break}catch(A){vS(o,A)}while(1);if($h(),Ve=d,pf.current=v,Ut!==null)throw Error(s(261));return Ft=null,tr=0,It}function Zj(){for(;Ut!==null;)gS(Ut)}function Xj(){for(;Ut!==null&&!wj();)gS(Ut)}function gS(o){var u=PS(o.alternate,o,Qr);o.memoizedProps=o.pendingProps,u===null?AS(o):Ut=u,Om.current=null}function AS(o){var u=o;do{var d=u.alternate;if(o=u.return,(u.flags&32768)===0){if(d=Cj(d,u,Qr),d!==null){Ut=d;return}}else{if(d=Ej(d,u),d!==null){d.flags&=32767,Ut=d;return}if(o!==null)o.flags|=32768,o.subtreeFlags=0,o.deletions=null;else{It=6,Ut=null;return}}if(u=u.sibling,u!==null){Ut=u;return}Ut=u=o}while(u!==null);It===0&&(It=5)}function hs(o,u,d){var v=He,A=Rt.transition;try{Rt.transition=null,He=1,Qj(o,u,d,v)}finally{Rt.transition=A,He=v}return null}function Qj(o,u,d,v){do ms();while(fa!==null);if((Ve&6)!==0)throw Error(s(327));d=o.finishedWork;var A=o.finishedLanes;if(d===null)return null;if(o.finishedWork=null,o.finishedLanes=0,d===o.current)throw Error(s(177));o.callbackNode=null,o.callbackPriority=0;var T=d.lanes|d.childLanes;if(Pj(o,T),o===Ft&&(Ut=Ft=null,tr=0),(d.subtreeFlags&2064)===0&&(d.flags&2064)===0||vf||(vf=!0,wS(Xh,function(){return ms(),null})),T=(d.flags&15990)!==0,(d.subtreeFlags&15990)!==0||T){T=Rt.transition,Rt.transition=null;var U=He;He=1;var C=Ve;Ve|=4,Om.current=null,Dj(o,d),sS(d,o),ne(o.containerInfo),o.current=d,Gj(d),kj(),Ve=C,He=U,Rt.transition=T}else o.current=d;if(vf&&(vf=!1,fa=o,yf=A),T=o.pendingLanes,T===0&&(ca=null),Tj(d.stateNode),Mr(o,Kt()),u!==null)for(v=o.onRecoverableError,d=0;d<u.length;d++)v(u[d]);if(mf)throw mf=!1,o=Fm,Fm=null,o;return(yf&1)!==0&&o.tag!==0&&ms(),T=o.pendingLanes,(T&1)!==0?o===Im?Ol++:(Ol=0,Im=o):Ol=0,ti(),null}function ms(){if(fa!==null){var o=B1(yf),u=Rt.transition,d=He;try{if(Rt.transition=null,He=16>o?16:o,fa===null)var v=!1;else{if(o=fa,fa=null,yf=0,(Ve&6)!==0)throw Error(s(331));var A=Ve;for(Ve|=4,me=o.current;me!==null;){var T=me,U=T.child;if((me.flags&16)!==0){var C=T.deletions;if(C!==null){for(var G=0;G<C.length;G++){var de=C[G];for(me=de;me!==null;){var Ae=me;switch(Ae.tag){case 0:case 11:case 15:Wl(8,Ae,T)}var je=Ae.child;if(je!==null)je.return=Ae,me=je;else for(;me!==null;){Ae=me;var we=Ae.sibling,st=Ae.return;if(rS(Ae),Ae===de){me=null;break}if(we!==null){we.return=st,me=we;break}me=st}}}var Xe=T.alternate;if(Xe!==null){var Or=Xe.child;if(Or!==null){Xe.child=null;do{var Hi=Or.sibling;Or.sibling=null,Or=Hi}while(Or!==null)}}me=T}}if((T.subtreeFlags&2064)!==0&&U!==null)U.return=T,me=U;else e:for(;me!==null;){if(T=me,(T.flags&2048)!==0)switch(T.tag){case 0:case 11:case 15:Wl(9,T,T.return)}var Z=T.sibling;if(Z!==null){Z.return=T.return,me=Z;break e}me=T.return}}var E=o.current;for(me=E;me!==null;){U=me;var _=U.child;if((U.subtreeFlags&2064)!==0&&_!==null)_.return=U,me=_;else e:for(U=E;me!==null;){if(C=me,(C.flags&2048)!==0)try{switch(C.tag){case 0:case 11:case 15:of(9,C)}}catch(xe){ft(C,C.return,xe)}if(C===U){me=null;break e}var he=C.sibling;if(he!==null){he.return=C.return,me=he;break e}me=C.return}}if(Ve=A,ti(),ei&&typeof ei.onPostCommitFiberRoot=="function")try{ei.onPostCommitFiberRoot(Oc,o)}catch{}v=!0}return v}finally{He=d,Rt.transition=u}}return!1}function SS(o,u,d){u=Pm(d,u),u=UA(o,u,1),ua(o,u),u=dr(),o=Sf(o,1),o!==null&&(Sl(o,1,u),Mr(o,u))}function ft(o,u,d){if(o.tag===3)SS(o,o,d);else for(;u!==null;){if(u.tag===3){SS(u,o,d);break}else if(u.tag===1){var v=u.stateNode;if(typeof u.type.getDerivedStateFromError=="function"||typeof v.componentDidCatch=="function"&&(ca===null||!ca.has(v))){o=Pm(d,o),o=HA(u,o,1),ua(u,o),o=dr(),u=Sf(u,1),u!==null&&(Sl(u,1,o),Mr(u,o));break}}u=u.return}}function _j(o,u,d){var v=o.pingCache;v!==null&&v.delete(u),u=dr(),o.pingedLanes|=o.suspendedLanes&d,Ft===o&&(tr&d)===d&&(It===4||It===3&&(tr&130023424)===tr&&500>Kt()-Ym?ps(o,0):zm|=d),Mr(o,u)}function xS(o,u){u===0&&((o.mode&1)===0?u=1:(u=Hc,Hc<<=1,(Hc&130023424)===0&&(Hc=4194304)));var d=dr();o=Sf(o,u),o!==null&&(Sl(o,u,d),Mr(o,d))}function $j(o){var u=o.memoizedState,d=0;u!==null&&(d=u.retryLane),xS(o,d)}function e8(o,u){var d=0;switch(o.tag){case 13:var v=o.stateNode,A=o.memoizedState;A!==null&&(d=A.retryLane);break;case 19:v=o.stateNode;break;default:throw Error(s(314))}v!==null&&v.delete(u),xS(o,d)}var PS;PS=function(o,u,d){if(o!==null)if(o.memoizedProps!==u.pendingProps||Nr.current)Ur=!0;else{if((o.lanes&d)===0&&(u.flags&128)===0)return Ur=!1,Ij(o,u,d);Ur=(o.flags&131072)!==0}else Ur=!1,ct&&(u.flags&1048576)!==0&&aA(u,Gc,u.index);switch(u.lanes=0,u.tag){case 2:var v=u.type;o!==null&&(o.alternate=null,u.alternate=null,u.flags|=2),o=u.pendingProps;var A=Xs(u,lr.current);_s(u,d),A=vm(null,u,v,o,A,d);var T=ym();return u.flags|=1,typeof A=="object"&&A!==null&&typeof A.render=="function"&&A.$$typeof===void 0?(u.tag=1,u.memoizedState=null,u.updateQueue=null,Wr(v)?(T=!0,Wc(u)):T=!1,u.memoizedState=A.state!==null&&A.state!==void 0?A.state:null,rm(u),A.updater=Jc,u.stateNode=A,A._reactInternals=u,im(u,v,o,d),u=bm(null,u,v,!0,T,d)):(u.tag=0,ct&&T&&am(u),br(null,u,A,d),u=u.child),u;case 16:v=u.elementType;e:{switch(o!==null&&(o.alternate=null,u.alternate=null,u.flags|=2),o=u.pendingProps,A=v._init,v=A(v._payload),u.type=v,A=u.tag=r8(v),o=Nn(v,o),A){case 0:u=km(null,u,v,o,d);break e;case 1:u=GA(null,u,v,o,d);break e;case 11:u=FA(null,u,v,o,d);break e;case 14:u=IA(null,u,v,Nn(v.type,o),d);break e}throw Error(s(306,v,""))}return u;case 0:return v=u.type,A=u.pendingProps,A=u.elementType===v?A:Nn(v,A),km(o,u,v,A,d);case 1:return v=u.type,A=u.pendingProps,A=u.elementType===v?A:Nn(v,A),GA(o,u,v,A,d);case 3:e:{if(KA(u),o===null)throw Error(s(387));v=u.pendingProps,T=u.memoizedState,A=T.element,_1(o,u),Ec(u,v,null,d);var U=u.memoizedState;if(v=U.element,$e&&T.isDehydrated)if(T={element:v,isDehydrated:!1,cache:U.cache,pendingSuspenseBoundaries:U.pendingSuspenseBoundaries,transitions:U.transitions},u.updateQueue.baseState=T,u.memoizedState=T,u.flags&256){A=Error(s(423)),u=BA(o,u,v,d,A);break e}else if(v!==A){A=Error(s(424)),u=BA(o,u,v,d,A);break e}else for($e&&(Xr=nj(u.stateNode.containerInfo),Zr=u,ct=!0,Un=null,xl=!1),d=fA(u,null,v,d),u.child=d;d;)d.flags=d.flags&-3|4096,d=d.sibling;else{if(to(),v===A){u=Wi(o,u,d);break e}br(o,u,v,d)}u=u.child}return u;case 5:return dA(u),o===null&&lm(u),v=u.type,A=u.pendingProps,T=o!==null?o.memoizedProps:null,U=A.children,Be(v,A)?U=null:T!==null&&Be(v,T)&&(u.flags|=32),DA(o,u),br(o,u,U,d),u.child;case 6:return o===null&&lm(u),null;case 13:return XA(o,u,d);case 4:return cm(u,u.stateNode.containerInfo),v=u.pendingProps,o===null?u.child=ro(u,null,v,d):br(o,u,v,d),u.child;case 11:return v=u.type,A=u.pendingProps,A=u.elementType===v?A:Nn(v,A),FA(o,u,v,A,d);case 7:return br(o,u,u.pendingProps,d),u.child;case 8:return br(o,u,u.pendingProps.children,d),u.child;case 12:return br(o,u,u.pendingProps.children,d),u.child;case 10:e:{if(v=u.type._context,A=u.pendingProps,T=u.memoizedProps,U=A.value,Q1(u,v,U),T!==null)if(Ln(T.value,U)){if(T.children===A.children&&!Nr.current){u=Wi(o,u,d);break e}}else for(T=u.child,T!==null&&(T.return=u);T!==null;){var C=T.dependencies;if(C!==null){U=T.child;for(var G=C.firstContext;G!==null;){if(G.context===v){if(T.tag===1){G=Vi(-1,d&-d),G.tag=2;var de=T.updateQueue;if(de!==null){de=de.shared;var Ae=de.pending;Ae===null?G.next=G:(G.next=Ae.next,Ae.next=G),de.pending=G}}T.lanes|=d,G=T.alternate,G!==null&&(G.lanes|=d),tm(T.return,d,u),C.lanes|=d;break}G=G.next}}else if(T.tag===10)U=T.type===u.type?null:T.child;else if(T.tag===18){if(U=T.return,U===null)throw Error(s(341));U.lanes|=d,C=U.alternate,C!==null&&(C.lanes|=d),tm(U,d,u),U=T.sibling}else U=T.child;if(U!==null)U.return=T;else for(U=T;U!==null;){if(U===u){U=null;break}if(T=U.sibling,T!==null){T.return=U.return,U=T;break}U=U.return}T=U}br(o,u,A.children,d),u=u.child}return u;case 9:return A=u.type,v=u.pendingProps.children,_s(u,d),A=hn(A),v=v(A),u.flags|=1,br(o,u,v,d),u.child;case 14:return v=u.type,A=Nn(v,u.pendingProps),A=Nn(v.type,A),IA(o,u,v,A,d);case 15:return EA(o,u,u.type,u.pendingProps,d);case 17:return v=u.type,A=u.pendingProps,A=u.elementType===v?A:Nn(v,A),o!==null&&(o.alternate=null,u.alternate=null,u.flags|=2),u.tag=1,Wr(v)?(o=!0,Wc(u)):o=!1,_s(u,d),nA(u,v,A),im(u,v,A,d),bm(null,u,v,!0,o,d);case 19:return eS(o,u,d);case 22:return JA(o,u,d)}throw Error(s(156,u.tag))};function wS(o,u){return Bh(o,u)}function t8(o,u,d,v){this.tag=o,this.key=d,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=u,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=v,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function An(o,u,d,v){return new t8(o,u,d,v)}function Km(o){return o=o.prototype,!(!o||!o.isReactComponent)}function r8(o){if(typeof o=="function")return Km(o)?1:0;if(o!=null){if(o=o.$$typeof,o===k)return 11;if(o===x)return 14}return 2}function ha(o,u){var d=o.alternate;return d===null?(d=An(o.tag,u,o.key,o.mode),d.elementType=o.elementType,d.type=o.type,d.stateNode=o.stateNode,d.alternate=o,o.alternate=d):(d.pendingProps=u,d.type=o.type,d.flags=0,d.subtreeFlags=0,d.deletions=null),d.flags=o.flags&14680064,d.childLanes=o.childLanes,d.lanes=o.lanes,d.child=o.child,d.memoizedProps=o.memoizedProps,d.memoizedState=o.memoizedState,d.updateQueue=o.updateQueue,u=o.dependencies,d.dependencies=u===null?null:{lanes:u.lanes,firstContext:u.firstContext},d.sibling=o.sibling,d.index=o.index,d.ref=o.ref,d}function Pf(o,u,d,v,A,T){var U=2;if(v=o,typeof o=="function")Km(o)&&(U=1);else if(typeof o=="string")U=5;else e:switch(o){case p:return vs(d.children,A,T,u);case h:U=8,A|=8;break;case m:return o=An(12,d,u,A|2),o.elementType=m,o.lanes=T,o;case q:return o=An(13,d,u,A),o.elementType=q,o.lanes=T,o;case P:return o=An(19,d,u,A),o.elementType=P,o.lanes=T,o;case j:return wf(d,A,T,u);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case g:U=10;break e;case y:U=9;break e;case k:U=11;break e;case x:U=14;break e;case b:U=16,v=null;break e}throw Error(s(130,o==null?o:typeof o,""))}return u=An(U,d,u,A),u.elementType=o,u.type=v,u.lanes=T,u}function vs(o,u,d,v){return o=An(7,o,v,u),o.lanes=d,o}function wf(o,u,d,v){return o=An(22,o,v,u),o.elementType=j,o.lanes=d,o.stateNode={},o}function Bm(o,u,d){return o=An(6,o,null,u),o.lanes=d,o}function Zm(o,u,d){return u=An(4,o.children!==null?o.children:[],o.key,u),u.lanes=d,u.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},u}function n8(o,u,d,v,A){this.tag=u,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=qt,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Gh(0),this.expirationTimes=Gh(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Gh(0),this.identifierPrefix=v,this.onRecoverableError=A,$e&&(this.mutableSourceEagerHydrationData=null)}function kS(o,u,d,v,A,T,U,C,G){return o=new n8(o,u,d,C,G),u===1?(u=1,T===!0&&(u|=8)):u=0,T=An(3,null,null,u),o.current=T,T.stateNode=o,T.memoizedState={element:v,isDehydrated:d,cache:null,transitions:null,pendingSuspenseBoundaries:null},rm(T),o}function bS(o){if(!o)return oa;o=o._reactInternals;e:{if(O(o)!==o||o.tag!==1)throw Error(s(170));var u=o;do{switch(u.tag){case 3:u=u.stateNode.context;break e;case 1:if(Wr(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break e}}u=u.return}while(u!==null);throw Error(s(171))}if(o.tag===1){var d=o.type;if(Wr(d))return D1(o,d,u)}return u}function qS(o){var u=o._reactInternals;if(u===void 0)throw typeof o.render=="function"?Error(s(188)):(o=Object.keys(o).join(","),Error(s(268,o)));return o=J(u),o===null?null:o.stateNode}function TS(o,u){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var d=o.retryLane;o.retryLane=d!==0&&d<u?d:u}}function kf(o,u){TS(o,u),(o=o.alternate)&&TS(o,u)}function i8(o){return o=J(o),o===null?null:o.stateNode}function a8(){return null}return r.attemptContinuousHydration=function(o){if(o.tag===13){var u=dr();_r(o,134217728,u),kf(o,134217728)}},r.attemptDiscreteHydration=function(o){if(o.tag===13){var u=dr();_r(o,1,u),kf(o,1)}},r.attemptHydrationAtCurrentPriority=function(o){if(o.tag===13){var u=dr(),d=da(o);_r(o,d,u),kf(o,d)}},r.attemptSynchronousHydration=function(o){switch(o.tag){case 3:var u=o.stateNode;if(u.current.memoizedState.isDehydrated){var d=Al(u.pendingLanes);d!==0&&(Kh(u,d|1),Mr(u,Kt()),(Ve&6)===0&&(oo(),ti()))}break;case 13:var v=dr();mS(function(){return _r(o,1,v)}),kf(o,1)}},r.batchedUpdates=function(o,u){var d=Ve;Ve|=1;try{return o(u)}finally{Ve=d,Ve===0&&(oo(),zc&&ti())}},r.createComponentSelector=function(o){return{$$typeof:lf,value:o}},r.createContainer=function(o,u,d,v,A,T,U){return kS(o,u,!1,null,d,v,A,T,U)},r.createHasPseudoClassSelector=function(o){return{$$typeof:uf,value:o}},r.createHydrationContainer=function(o,u,d,v,A,T,U,C,G){return o=kS(d,v,!0,o,A,T,U,C,G),o.context=bS(null),d=o.current,v=dr(),A=da(d),T=Vi(v,A),T.callback=u!=null?u:null,ua(d,T),o.current.lanes=A,Sl(o,A,v),Mr(o,v),o},r.createPortal=function(o,u,d){var v=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:f,key:v==null?null:""+v,children:o,containerInfo:u,implementation:d}},r.createRoleSelector=function(o){return{$$typeof:cf,value:o}},r.createTestNameSelector=function(o){return{$$typeof:ff,value:o}},r.createTextSelector=function(o){return{$$typeof:df,value:o}},r.deferredUpdates=function(o){var u=He,d=Rt.transition;try{return Rt.transition=null,He=16,o()}finally{He=u,Rt.transition=d}},r.discreteUpdates=function(o,u,d,v,A){var T=He,U=Rt.transition;try{return Rt.transition=null,He=1,o(u,d,v,A)}finally{He=T,Rt.transition=U,Ve===0&&oo()}},r.findAllNodes=Mm,r.findBoundingRects=function(o,u){if(!dn)throw Error(s(363));u=Mm(o,u),o=[];for(var d=0;d<u.length;d++)o.push(Lr(u[d]));for(u=o.length-1;0<u;u--){d=o[u];for(var v=d.x,A=v+d.width,T=d.y,U=T+d.height,C=u-1;0<=C;C--)if(u!==C){var G=o[C],de=G.x,Ae=de+G.width,je=G.y,we=je+G.height;if(v>=de&&T>=je&&A<=Ae&&U<=we){o.splice(u,1);break}else if(v!==de||d.width!==G.width||we<T||je>U){if(!(T!==je||d.height!==G.height||Ae<v||de>A)){de>v&&(G.width+=de-v,G.x=v),Ae<A&&(G.width=A-de),o.splice(u,1);break}}else{je>T&&(G.height+=je-T,G.y=T),we<U&&(G.height=U-je),o.splice(u,1);break}}}return o},r.findHostInstance=qS,r.findHostInstanceWithNoPortals=function(o){return o=F(o),o=o!==null?re(o):null,o===null?null:o.stateNode},r.findHostInstanceWithWarning=function(o){return qS(o)},r.flushControlled=function(o){var u=Ve;Ve|=1;var d=Rt.transition,v=He;try{Rt.transition=null,He=1,o()}finally{He=v,Rt.transition=d,Ve=u,Ve===0&&(oo(),ti())}},r.flushPassiveEffects=ms,r.flushSync=mS,r.focusWithin=function(o,u){if(!dn)throw Error(s(363));for(o=Wm(o),u=fS(o,u),u=Array.from(u),o=0;o<u.length;){var d=u[o++];if(!pn(d)){if(d.tag===5&&vl(d.stateNode))return!0;for(d=d.child;d!==null;)u.push(d),d=d.sibling}}return!1},r.getCurrentUpdatePriority=function(){return He},r.getFindAllNodesFailureDescription=function(o,u){if(!dn)throw Error(s(363));var d=0,v=[];o=[Wm(o),0];for(var A=0;A<o.length;){var T=o[A++],U=o[A++],C=u[U];if((T.tag!==5||!pn(T))&&(Um(T,C)&&(v.push(Hm(C)),U++,U>d&&(d=U)),U<u.length))for(T=T.child;T!==null;)o.push(T,U),T=T.sibling}if(d<u.length){for(o=[];d<u.length;d++)o.push(Hm(u[d]));return`findAllNodes was able to match part of the selector:
  `+(v.join(" > ")+`

No matching component was found for:
  `)+o.join(" > ")}return null},r.getPublicRootInstance=function(o){if(o=o.current,!o.child)return null;switch(o.child.tag){case 5:return te(o.child.stateNode);default:return o.child.stateNode}},r.injectIntoDevTools=function(o){if(o={bundleType:o.bundleType,version:o.version,rendererPackageName:o.rendererPackageName,rendererConfig:o.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:l.ReactCurrentDispatcher,findHostInstanceByFiber:i8,findFiberByHostInstance:o.findFiberByHostInstance||a8,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.1.0"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__=="undefined")o=!1;else{var u=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(u.isDisabled||!u.supportsFiber)o=!0;else{try{Oc=u.inject(o),ei=u}catch{}o=!!u.checkDCE}}return o},r.isAlreadyRendering=function(){return!1},r.observeVisibleRects=function(o,u,d,v){if(!dn)throw Error(s(363));o=Mm(o,u);var A=L(o,d,v).disconnect;return{disconnect:function(){A()}}},r.registerMutableSourceForHydration=function(o,u){var d=u._getVersion;d=d(u._source),o.mutableSourceEagerHydrationData==null?o.mutableSourceEagerHydrationData=[u,d]:o.mutableSourceEagerHydrationData.push(u,d)},r.runWithPriority=function(o,u){var d=He;try{return He=o,u()}finally{He=d}},r.shouldError=function(){return null},r.shouldSuspend=function(){return!1},r.updateContainer=function(o,u,d,v){var A=u.current,T=dr(),U=da(A);return d=bS(d),u.context===null?u.context=d:u.pendingContext=d,u=Vi(T,U),u.payload={element:o},v=v===void 0?null:v,v!==null&&(u.callback=v),ua(A,u),o=_r(A,U,T),o!==null&&Ic(o,A,U),U},r};AT.exports=ZF;var XF=AT.exports,w1={exports:{}},Bs={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Bs.ConcurrentRoot=1;Bs.ContinuousEventPriority=4;Bs.DefaultEventPriority=16;Bs.DiscreteEventPriority=1;Bs.IdleEventPriority=536870912;Bs.LegacyRoot=0;w1.exports=Bs;const Dw={children:!0,ref:!0,key:!0,style:!0,forwardedRef:!0,unstable_applyCache:!0,unstable_applyDrawHitFromCache:!0};let Gw=!1,Kw=!1;const k1=".react-konva-event",QF=`ReactKonva: You have a Konva node with draggable = true and position defined but no onDragMove or onDragEnd events are handled.
Position of a node will be changed during drag&drop, so you should update state of the react app as well.
Consider to add onDragMove or onDragEnd events.
For more info see: https://github.com/konvajs/react-konva/issues/256
`,_F=`ReactKonva: You are using "zIndex" attribute for a Konva node.
react-konva may get confused with ordering. Just define correct order of elements in your render function of a component.
For more info see: https://github.com/konvajs/react-konva/issues/194
`,$F={};function Lh(t,e,r=$F){if(e===r&&console.error("same props"),!Gw&&"zIndex"in e&&(console.warn(_F),Gw=!0),!Kw&&e.draggable){var n=e.x!==void 0||e.y!==void 0,i=e.onDragEnd||e.onDragMove;n&&!i&&(console.warn(QF),Kw=!0)}for(var a in r)if(!Dw[a]){var s=a.slice(0,2)==="on",l=r[a]!==e[a];if(s&&l){var c=a.substr(2).toLowerCase();c.substr(0,7)==="content"&&(c="content"+c.substr(7,1).toUpperCase()+c.substr(8)),t.off(c,r[a])}var f=!e.hasOwnProperty(a);f&&t.setAttr(a,void 0)}var p=e._useStrictMode,h={},m=!1;const g={};for(var a in e)if(!Dw[a]){var s=a.slice(0,2)==="on",y=r[a]!==e[a];if(s&&y){var c=a.substr(2).toLowerCase();c.substr(0,7)==="content"&&(c="content"+c.substr(7,1).toUpperCase()+c.substr(8)),e[a]&&(g[c]=e[a])}!s&&(e[a]!==r[a]||p&&e[a]!==t.getAttr(a))&&(m=!0,h[a]=e[a])}m&&(t.setAttrs(h),ss(t));for(var c in g)t.on(c+k1,g[c])}function ss(t){if(!ye.autoDrawEnabled){var e=t.getLayer()||t.getStage();e&&e.batchDraw()}}const ST={},eI={};Ys.Node.prototype._applyProps=Lh;function tI(t,e){if(typeof e=="string"){console.error(`Do not use plain text as child of Konva.Node. You are using text: ${e}`);return}t.add(e),ss(t)}function rI(t,e,r){let n=Ys[t];n||(console.error(`Konva has no node with the type ${t}. Group will be used instead. If you use minimal version of react-konva, just import required nodes into Konva: "import "konva/lib/shapes/${t}"  If you want to render DOM elements as part of canvas tree take a look into this demo: https://konvajs.github.io/docs/react/DOM_Portal.html`),n=Ys.Group);const i={},a={};for(var s in e){var l=s.slice(0,2)==="on";l?a[s]=e[s]:i[s]=e[s]}const c=new n(i);return Lh(c,a),c}function nI(t,e,r){console.error(`Text components are not supported for now in ReactKonva. Your text is: "${t}"`)}function iI(t,e,r){return!1}function aI(t){return t}function sI(){return null}function oI(){return null}function lI(t,e,r,n){return eI}function uI(){}function cI(t){}function fI(t,e){return!1}function dI(){return ST}function pI(){return ST}const hI=setTimeout,mI=clearTimeout,vI=-1;function yI(t,e){return!1}const gI=!1,AI=!0,SI=!0;function xI(t,e){e.parent===t?e.moveToTop():t.add(e),ss(t)}function PI(t,e){e.parent===t?e.moveToTop():t.add(e),ss(t)}function xT(t,e,r){e._remove(),t.add(e),e.setZIndex(r.getZIndex()),ss(t)}function wI(t,e,r){xT(t,e,r)}function kI(t,e){e.destroy(),e.off(k1),ss(t)}function bI(t,e){e.destroy(),e.off(k1),ss(t)}function qI(t,e,r){console.error(`Text components are not yet supported in ReactKonva. You text is: "${r}"`)}function TI(t,e,r){}function jI(t,e,r,n,i){Lh(t,i,n)}function RI(t){t.hide(),ss(t)}function VI(t){}function LI(t,e){(e.visible==null||e.visible)&&t.show()}function NI(t,e){}function WI(t){}function UI(){}const HI=()=>w1.exports.DefaultEventPriority;var MI=Object.freeze(Object.defineProperty({__proto__:null,appendInitialChild:tI,createInstance:rI,createTextInstance:nI,finalizeInitialChildren:iI,getPublicInstance:aI,prepareForCommit:sI,preparePortalMount:oI,prepareUpdate:lI,resetAfterCommit:uI,resetTextContent:cI,shouldDeprioritizeSubtree:fI,getRootHostContext:dI,getChildHostContext:pI,scheduleTimeout:hI,cancelTimeout:mI,noTimeout:vI,shouldSetTextContent:yI,isPrimaryRenderer:gI,warnsIfNotActing:AI,supportsMutation:SI,appendChild:xI,appendChildToContainer:PI,insertBefore:xT,insertInContainerBefore:wI,removeChild:kI,removeChildFromContainer:bI,commitTextUpdate:qI,commitMount:TI,commitUpdate:jI,hideInstance:RI,hideTextInstance:VI,unhideInstance:LI,unhideTextInstance:NI,clearContainer:WI,detachDeletedInstance:UI,getCurrentEventPriority:HI,now:Oo.exports.unstable_now,idlePriority:Oo.exports.unstable_IdlePriority,run:Oo.exports.unstable_runWithPriority},Symbol.toStringTag,{value:"Module"}));function OI(t){const e=St.useRef();return St.useLayoutEffect(()=>{e.current=t}),e.current}const zI=t=>{const e=St.useRef(),r=St.useRef(),n=St.useRef(),i=OI(t),a=s=>{const{forwardedRef:l}=t;!l||(typeof l=="function"?l(s):l.current=s)};return St.useLayoutEffect(()=>(r.current=new Ys.Stage({width:t.width,height:t.height,container:e.current}),a(r.current),n.current=pu.createContainer(r.current,w1.exports.ConcurrentRoot,!1,null),pu.updateContainer(t.children,n.current),()=>{!Ys.isBrowser||(a(null),pu.updateContainer(null,n.current,null),r.current.destroy())}),[]),St.useLayoutEffect(()=>{a(r.current),Lh(r.current,t,i),pu.updateContainer(t.children,n.current,null)}),St.createElement("div",{ref:e,accessKey:t.accessKey,className:t.className,role:t.role,style:t.style,tabIndex:t.tabIndex,title:t.title})},YI="Layer",Bw="Ring",pu=XF(MI);pu.injectIntoDevTools({findHostInstanceByFiber:()=>null,bundleType:0,version:St.version,rendererPackageName:"react-konva"});const CI=St.forwardRef((t,e)=>St.createElement(zI,VS(qf({},t),{forwardedRef:e})));function FI(t,e){const r=[];for(let n=0;n<Th;n++){const i=II(n,t[n],e);r.push(i)}return r}function II(t,e,r){return e?$(tn,{sx:{color:Sg[t]},onClick:()=>r(t),children:`Delete #${t}`},`dartHandleDeleteButton_${t}`):$(tn,{sx:{color:Sg[t]},onClick:()=>r(t),children:`Add #${t}`},`dartHandleAddButton_${t}`)}BF.KonvaEventObject;const EI=ke("div")(({})=>({})),JI=ke("div")(({})=>({})),DI=ke(CI)(()=>({position:"absolute"})),GI=ke("div")(()=>({display:"flex",placeContent:"space-evenly"}));function KI(t){if(!t)return[];const e=[];for(const r of t){let n=!0;n=n&&!!r,n=n&&r.x!==-1&&r.y!==-1,e.push(n)}return e}function BI({imageBase64:t,imageResolution:e,imageLabel:r,updatePlaneCoordinate:n,updateDartPoint:i,reset:a}){const[s,l]=Y.exports.useState(()=>KI(r==null?void 0:r.dartPoints)),c=(p,h)=>{const m=p.target.x(),g=p.target.y(),y=Math.min(Math.max(m,0),e.x),k=Math.min(Math.max(g,0),e.y);h({x:y,y:k})},f=p=>{s[p]=!s[p],l([...s])};return r?Fe(EI,{id:"labelImageRoot",children:[$(DI,{id:"labelImageContainer",width:e.x,height:e.y,children:Fe(YI,{id:"labelImageLayer",children:[r.planeCoordinates.map((p,h)=>$(Bw,{name:`planeCoordinateHandle_${h}`,draggable:!0,x:p.x,y:p.y,fill:v6,outerRadius:Pw,innerRadius:ww,onDragEnd:m=>c(m,g=>n(g,h))},`planeCoordinateHandle_${h}`)),r.dartPoints.map((p,h)=>s[h]?$(Bw,{name:`dartPointHandle_${h}`,draggable:!0,x:p.x,y:p.y,fill:Sg[h],outerRadius:Pw,innerRadius:ww,onDragEnd:m=>c(m,g=>i(g,h))},`dartPointHandle_${h}`):null)]})}),$(JI,{id:"throwImageContainer",children:$("img",{src:`data:image/jpeg;base64,${t}`,alt:"",style:{width:e.x,height:e.y}})}),Fe(GI,{children:[$(tn,{id:"resetLabelingButton",onClick:a,children:"Reset"}),FI(s,f)]})]}):null}const Zw=ke("div")(()=>({height:"inherit",display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center"})),ZI=ke("div")(({theme:t})=>({textAlign:"center",paddingBottom:t.spacing(5)})),XI=ke("div")(()=>({display:"flex",justifyContent:"center"})),Xw=ke(Td)(()=>({width:60,height:60,alignSelf:"center",margin:40}));function QI(t){const e=t.map(r=>r.imageLabel).values();return Array.from(e)}let ry;function _I(){const[t,e]=Y.exports.useState(!0),[r,n]=Y.exports.useState([]),[i,a]=Y.exports.useState(-1),[s,l]=Y.exports.useState([]);let[c,f]=Y.exports.useState(0);const[p,h]=Y.exports.useState([]),{data:m,status:g}=S6(i,{skip:!t});if(g==="fulfilled"&&!!m){c=0,a(m.throwSequence.id),f(c),l(m.throwSequence.throws);const M=QI(m.throwSequence.throws);h(M),ry=M,e(!1)}const k=!!r&&r.length>0,{status:q}=x6({throwSequenceId:i,imageLabels:r},{skip:!k});if(k&&q==="fulfilled"&&n([]),!p||p.length===0)return $(Zw,{children:$(q4,{})});const{id:P,image:x,imageResolution:b}=s[c],j=()=>{let M=c+1;M%=Th;const F=M===0;f(M),F&&(n(p),e(!0))},R=()=>{const M=c-1;f(M),p.length-1>=0&&f(M)},V=(M,F)=>{const J=[...p],X=qf({},J[c]),re=[...J[c].planeCoordinates];re[F]=M,X.planeCoordinates=re,J[c]=X,h(J)},N=(M,F)=>{const J=[...p],X=qf({},J[c]),re=[...J[c].dartPoints];re[F]=M,X.dartPoints=re,J[c]=X,h(J)},H=()=>{!ry||h(ry)},O=c===0;return Fe(Zw,{children:[Fe(ZI,{children:[$(Oa,{variant:"h2",color:"primary",children:"Labeling"}),$(Oa,{variant:"h4",color:"primary",children:`ThrowSequence ${i}`}),$(Oa,{variant:"h5",color:"primary",children:`Throw ${P}`})]}),Fe(XI,{children:[$(Xw,{size:"large",disabled:O,onClick:R,children:$(C5,{color:O?"disabled":"primary",sx:{fontSize:"2em"}})}),$(BI,{imageBase64:x,imageResolution:b,imageLabel:p[c],updatePlaneCoordinate:V,updateDartPoint:N,reset:H}),$(Xw,{size:"large",disabled:!1,onClick:j,children:$(Y5,{color:"primary",sx:{fontSize:"2em"}})})]})]})}var b1={},$I=ea.exports;Object.defineProperty(b1,"__esModule",{value:!0});var PT=b1.default=void 0,eE=$I(ta),Qw=rs,tE=(0,eE.default)([(0,Qw.jsx)("circle",{cx:"12",cy:"12",r:"3.2"},"0"),(0,Qw.jsx)("path",{d:"M9 2 7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"},"1")],"CameraAlt");PT=b1.default=tE;var q1={},rE=ea.exports;Object.defineProperty(q1,"__esModule",{value:!0});var wT=q1.default=void 0,nE=rE(ta),iE=rs,aE=(0,nE.default)((0,iE.jsx)("path",{d:"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"}),"Check");wT=q1.default=aE;var T1={},sE=ea.exports;Object.defineProperty(T1,"__esModule",{value:!0});var kT=T1.default=void 0,oE=sE(ta),lE=rs,uE=(0,oE.default)((0,lE.jsx)("path",{d:"M12 5V1L7 6l5 5V7c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6H4c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8z"}),"Replay");kT=T1.default=uE;var bT={},Nh={};Nh.byteLength=dE;Nh.toByteArray=hE;Nh.fromByteArray=yE;var pi=[],Sn=[],cE=typeof Uint8Array!="undefined"?Uint8Array:Array,ny="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(var Ao=0,fE=ny.length;Ao<fE;++Ao)pi[Ao]=ny[Ao],Sn[ny.charCodeAt(Ao)]=Ao;Sn["-".charCodeAt(0)]=62;Sn["_".charCodeAt(0)]=63;function qT(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=t.indexOf("=");r===-1&&(r=e);var n=r===e?0:4-r%4;return[r,n]}function dE(t){var e=qT(t),r=e[0],n=e[1];return(r+n)*3/4-n}function pE(t,e,r){return(e+r)*3/4-r}function hE(t){var e,r=qT(t),n=r[0],i=r[1],a=new cE(pE(t,n,i)),s=0,l=i>0?n-4:n,c;for(c=0;c<l;c+=4)e=Sn[t.charCodeAt(c)]<<18|Sn[t.charCodeAt(c+1)]<<12|Sn[t.charCodeAt(c+2)]<<6|Sn[t.charCodeAt(c+3)],a[s++]=e>>16&255,a[s++]=e>>8&255,a[s++]=e&255;return i===2&&(e=Sn[t.charCodeAt(c)]<<2|Sn[t.charCodeAt(c+1)]>>4,a[s++]=e&255),i===1&&(e=Sn[t.charCodeAt(c)]<<10|Sn[t.charCodeAt(c+1)]<<4|Sn[t.charCodeAt(c+2)]>>2,a[s++]=e>>8&255,a[s++]=e&255),a}function mE(t){return pi[t>>18&63]+pi[t>>12&63]+pi[t>>6&63]+pi[t&63]}function vE(t,e,r){for(var n,i=[],a=e;a<r;a+=3)n=(t[a]<<16&16711680)+(t[a+1]<<8&65280)+(t[a+2]&255),i.push(mE(n));return i.join("")}function yE(t){for(var e,r=t.length,n=r%3,i=[],a=16383,s=0,l=r-n;s<l;s+=a)i.push(vE(t,s,s+a>l?l:s+a));return n===1?(e=t[r-1],i.push(pi[e>>2]+pi[e<<4&63]+"==")):n===2&&(e=(t[r-2]<<8)+t[r-1],i.push(pi[e>>10]+pi[e>>4&63]+pi[e<<2&63]+"=")),i.join("")}var j1={};/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */j1.read=function(t,e,r,n,i){var a,s,l=i*8-n-1,c=(1<<l)-1,f=c>>1,p=-7,h=r?i-1:0,m=r?-1:1,g=t[e+h];for(h+=m,a=g&(1<<-p)-1,g>>=-p,p+=l;p>0;a=a*256+t[e+h],h+=m,p-=8);for(s=a&(1<<-p)-1,a>>=-p,p+=n;p>0;s=s*256+t[e+h],h+=m,p-=8);if(a===0)a=1-f;else{if(a===c)return s?NaN:(g?-1:1)*(1/0);s=s+Math.pow(2,n),a=a-f}return(g?-1:1)*s*Math.pow(2,a-n)};j1.write=function(t,e,r,n,i,a){var s,l,c,f=a*8-i-1,p=(1<<f)-1,h=p>>1,m=i===23?Math.pow(2,-24)-Math.pow(2,-77):0,g=n?0:a-1,y=n?1:-1,k=e<0||e===0&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(l=isNaN(e)?1:0,s=p):(s=Math.floor(Math.log(e)/Math.LN2),e*(c=Math.pow(2,-s))<1&&(s--,c*=2),s+h>=1?e+=m/c:e+=m*Math.pow(2,1-h),e*c>=2&&(s++,c/=2),s+h>=p?(l=0,s=p):s+h>=1?(l=(e*c-1)*Math.pow(2,i),s=s+h):(l=e*Math.pow(2,h-1)*Math.pow(2,i),s=0));i>=8;t[r+g]=l&255,g+=y,l/=256,i-=8);for(s=s<<i|l,f+=i;f>0;t[r+g]=s&255,g+=y,s/=256,f-=8);t[r+g-y]|=k*128};/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */(function(t){const e=Nh,r=j1,n=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;t.Buffer=l,t.SlowBuffer=x,t.INSPECT_MAX_BYTES=50;const i=2147483647;t.kMaxLength=i,l.TYPED_ARRAY_SUPPORT=a(),!l.TYPED_ARRAY_SUPPORT&&typeof console!="undefined"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function a(){try{const L=new Uint8Array(1),S={foo:function(){return 42}};return Object.setPrototypeOf(S,Uint8Array.prototype),Object.setPrototypeOf(L,S),L.foo()===42}catch{return!1}}Object.defineProperty(l.prototype,"parent",{enumerable:!0,get:function(){if(!!l.isBuffer(this))return this.buffer}}),Object.defineProperty(l.prototype,"offset",{enumerable:!0,get:function(){if(!!l.isBuffer(this))return this.byteOffset}});function s(L){if(L>i)throw new RangeError('The value "'+L+'" is invalid for option "size"');const S=new Uint8Array(L);return Object.setPrototypeOf(S,l.prototype),S}function l(L,S,w){if(typeof L=="number"){if(typeof S=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return h(L)}return c(L,S,w)}l.poolSize=8192;function c(L,S,w){if(typeof L=="string")return m(L,S);if(ArrayBuffer.isView(L))return y(L);if(L==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof L);if(Lr(L,ArrayBuffer)||L&&Lr(L.buffer,ArrayBuffer)||typeof SharedArrayBuffer!="undefined"&&(Lr(L,SharedArrayBuffer)||L&&Lr(L.buffer,SharedArrayBuffer)))return k(L,S,w);if(typeof L=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');const W=L.valueOf&&L.valueOf();if(W!=null&&W!==L)return l.from(W,S,w);const I=q(L);if(I)return I;if(typeof Symbol!="undefined"&&Symbol.toPrimitive!=null&&typeof L[Symbol.toPrimitive]=="function")return l.from(L[Symbol.toPrimitive]("string"),S,w);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof L)}l.from=function(L,S,w){return c(L,S,w)},Object.setPrototypeOf(l.prototype,Uint8Array.prototype),Object.setPrototypeOf(l,Uint8Array);function f(L){if(typeof L!="number")throw new TypeError('"size" argument must be of type number');if(L<0)throw new RangeError('The value "'+L+'" is invalid for option "size"')}function p(L,S,w){return f(L),L<=0?s(L):S!==void 0?typeof w=="string"?s(L).fill(S,w):s(L).fill(S):s(L)}l.alloc=function(L,S,w){return p(L,S,w)};function h(L){return f(L),s(L<0?0:P(L)|0)}l.allocUnsafe=function(L){return h(L)},l.allocUnsafeSlow=function(L){return h(L)};function m(L,S){if((typeof S!="string"||S==="")&&(S="utf8"),!l.isEncoding(S))throw new TypeError("Unknown encoding: "+S);const w=b(L,S)|0;let W=s(w);const I=W.write(L,S);return I!==w&&(W=W.slice(0,I)),W}function g(L){const S=L.length<0?0:P(L.length)|0,w=s(S);for(let W=0;W<S;W+=1)w[W]=L[W]&255;return w}function y(L){if(Lr(L,Uint8Array)){const S=new Uint8Array(L);return k(S.buffer,S.byteOffset,S.byteLength)}return g(L)}function k(L,S,w){if(S<0||L.byteLength<S)throw new RangeError('"offset" is outside of buffer bounds');if(L.byteLength<S+(w||0))throw new RangeError('"length" is outside of buffer bounds');let W;return S===void 0&&w===void 0?W=new Uint8Array(L):w===void 0?W=new Uint8Array(L,S):W=new Uint8Array(L,S,w),Object.setPrototypeOf(W,l.prototype),W}function q(L){if(l.isBuffer(L)){const S=P(L.length)|0,w=s(S);return w.length===0||L.copy(w,0,0,S),w}if(L.length!==void 0)return typeof L.length!="number"||os(L.length)?s(0):g(L);if(L.type==="Buffer"&&Array.isArray(L.data))return g(L.data)}function P(L){if(L>=i)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i.toString(16)+" bytes");return L|0}function x(L){return+L!=L&&(L=0),l.alloc(+L)}l.isBuffer=function(S){return S!=null&&S._isBuffer===!0&&S!==l.prototype},l.compare=function(S,w){if(Lr(S,Uint8Array)&&(S=l.from(S,S.offset,S.byteLength)),Lr(w,Uint8Array)&&(w=l.from(w,w.offset,w.byteLength)),!l.isBuffer(S)||!l.isBuffer(w))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(S===w)return 0;let W=S.length,I=w.length;for(let B=0,ee=Math.min(W,I);B<ee;++B)if(S[B]!==w[B]){W=S[B],I=w[B];break}return W<I?-1:I<W?1:0},l.isEncoding=function(S){switch(String(S).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},l.concat=function(S,w){if(!Array.isArray(S))throw new TypeError('"list" argument must be an Array of Buffers');if(S.length===0)return l.alloc(0);let W;if(w===void 0)for(w=0,W=0;W<S.length;++W)w+=S[W].length;const I=l.allocUnsafe(w);let B=0;for(W=0;W<S.length;++W){let ee=S[W];if(Lr(ee,Uint8Array))B+ee.length>I.length?(l.isBuffer(ee)||(ee=l.from(ee)),ee.copy(I,B)):Uint8Array.prototype.set.call(I,ee,B);else if(l.isBuffer(ee))ee.copy(I,B);else throw new TypeError('"list" argument must be an Array of Buffers');B+=ee.length}return I};function b(L,S){if(l.isBuffer(L))return L.length;if(ArrayBuffer.isView(L)||Lr(L,ArrayBuffer))return L.byteLength;if(typeof L!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof L);const w=L.length,W=arguments.length>2&&arguments[2]===!0;if(!W&&w===0)return 0;let I=!1;for(;;)switch(S){case"ascii":case"latin1":case"binary":return w;case"utf8":case"utf-8":return Tt(L).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return w*2;case"hex":return w>>>1;case"base64":return dn(L).length;default:if(I)return W?-1:Tt(L).length;S=(""+S).toLowerCase(),I=!0}}l.byteLength=b;function j(L,S,w){let W=!1;if((S===void 0||S<0)&&(S=0),S>this.length||((w===void 0||w>this.length)&&(w=this.length),w<=0)||(w>>>=0,S>>>=0,w<=S))return"";for(L||(L="utf8");;)switch(L){case"hex":return oe(this,S,w);case"utf8":case"utf-8":return re(this,S,w);case"ascii":return ie(this,S,w);case"latin1":case"binary":return K(this,S,w);case"base64":return X(this,S,w);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ne(this,S,w);default:if(W)throw new TypeError("Unknown encoding: "+L);L=(L+"").toLowerCase(),W=!0}}l.prototype._isBuffer=!0;function R(L,S,w){const W=L[S];L[S]=L[w],L[w]=W}l.prototype.swap16=function(){const S=this.length;if(S%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let w=0;w<S;w+=2)R(this,w,w+1);return this},l.prototype.swap32=function(){const S=this.length;if(S%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let w=0;w<S;w+=4)R(this,w,w+3),R(this,w+1,w+2);return this},l.prototype.swap64=function(){const S=this.length;if(S%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let w=0;w<S;w+=8)R(this,w,w+7),R(this,w+1,w+6),R(this,w+2,w+5),R(this,w+3,w+4);return this},l.prototype.toString=function(){const S=this.length;return S===0?"":arguments.length===0?re(this,0,S):j.apply(this,arguments)},l.prototype.toLocaleString=l.prototype.toString,l.prototype.equals=function(S){if(!l.isBuffer(S))throw new TypeError("Argument must be a Buffer");return this===S?!0:l.compare(this,S)===0},l.prototype.inspect=function(){let S="";const w=t.INSPECT_MAX_BYTES;return S=this.toString("hex",0,w).replace(/(.{2})/g,"$1 ").trim(),this.length>w&&(S+=" ... "),"<Buffer "+S+">"},n&&(l.prototype[n]=l.prototype.inspect),l.prototype.compare=function(S,w,W,I,B){if(Lr(S,Uint8Array)&&(S=l.from(S,S.offset,S.byteLength)),!l.isBuffer(S))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof S);if(w===void 0&&(w=0),W===void 0&&(W=S?S.length:0),I===void 0&&(I=0),B===void 0&&(B=this.length),w<0||W>S.length||I<0||B>this.length)throw new RangeError("out of range index");if(I>=B&&w>=W)return 0;if(I>=B)return-1;if(w>=W)return 1;if(w>>>=0,W>>>=0,I>>>=0,B>>>=0,this===S)return 0;let ee=B-I,Te=W-w;const ut=Math.min(ee,Te),et=this.slice(I,B),it=S.slice(w,W);for(let Ee=0;Ee<ut;++Ee)if(et[Ee]!==it[Ee]){ee=et[Ee],Te=it[Ee];break}return ee<Te?-1:Te<ee?1:0};function V(L,S,w,W,I){if(L.length===0)return-1;if(typeof w=="string"?(W=w,w=0):w>2147483647?w=2147483647:w<-2147483648&&(w=-2147483648),w=+w,os(w)&&(w=I?0:L.length-1),w<0&&(w=L.length+w),w>=L.length){if(I)return-1;w=L.length-1}else if(w<0)if(I)w=0;else return-1;if(typeof S=="string"&&(S=l.from(S,W)),l.isBuffer(S))return S.length===0?-1:N(L,S,w,W,I);if(typeof S=="number")return S=S&255,typeof Uint8Array.prototype.indexOf=="function"?I?Uint8Array.prototype.indexOf.call(L,S,w):Uint8Array.prototype.lastIndexOf.call(L,S,w):N(L,[S],w,W,I);throw new TypeError("val must be string, number or Buffer")}function N(L,S,w,W,I){let B=1,ee=L.length,Te=S.length;if(W!==void 0&&(W=String(W).toLowerCase(),W==="ucs2"||W==="ucs-2"||W==="utf16le"||W==="utf-16le")){if(L.length<2||S.length<2)return-1;B=2,ee/=2,Te/=2,w/=2}function ut(it,Ee){return B===1?it[Ee]:it.readUInt16BE(Ee*B)}let et;if(I){let it=-1;for(et=w;et<ee;et++)if(ut(L,et)===ut(S,it===-1?0:et-it)){if(it===-1&&(it=et),et-it+1===Te)return it*B}else it!==-1&&(et-=et-it),it=-1}else for(w+Te>ee&&(w=ee-Te),et=w;et>=0;et--){let it=!0;for(let Ee=0;Ee<Te;Ee++)if(ut(L,et+Ee)!==ut(S,Ee)){it=!1;break}if(it)return et}return-1}l.prototype.includes=function(S,w,W){return this.indexOf(S,w,W)!==-1},l.prototype.indexOf=function(S,w,W){return V(this,S,w,W,!0)},l.prototype.lastIndexOf=function(S,w,W){return V(this,S,w,W,!1)};function H(L,S,w,W){w=Number(w)||0;const I=L.length-w;W?(W=Number(W),W>I&&(W=I)):W=I;const B=S.length;W>B/2&&(W=B/2);let ee;for(ee=0;ee<W;++ee){const Te=parseInt(S.substr(ee*2,2),16);if(os(Te))return ee;L[w+ee]=Te}return ee}function O(L,S,w,W){return $n(Tt(S,L.length-w),L,w,W)}function M(L,S,w,W){return $n(hl(S),L,w,W)}function F(L,S,w,W){return $n(dn(S),L,w,W)}function J(L,S,w,W){return $n(ml(S,L.length-w),L,w,W)}l.prototype.write=function(S,w,W,I){if(w===void 0)I="utf8",W=this.length,w=0;else if(W===void 0&&typeof w=="string")I=w,W=this.length,w=0;else if(isFinite(w))w=w>>>0,isFinite(W)?(W=W>>>0,I===void 0&&(I="utf8")):(I=W,W=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");const B=this.length-w;if((W===void 0||W>B)&&(W=B),S.length>0&&(W<0||w<0)||w>this.length)throw new RangeError("Attempt to write outside buffer bounds");I||(I="utf8");let ee=!1;for(;;)switch(I){case"hex":return H(this,S,w,W);case"utf8":case"utf-8":return O(this,S,w,W);case"ascii":case"latin1":case"binary":return M(this,S,w,W);case"base64":return F(this,S,w,W);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return J(this,S,w,W);default:if(ee)throw new TypeError("Unknown encoding: "+I);I=(""+I).toLowerCase(),ee=!0}},l.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function X(L,S,w){return S===0&&w===L.length?e.fromByteArray(L):e.fromByteArray(L.slice(S,w))}function re(L,S,w){w=Math.min(L.length,w);const W=[];let I=S;for(;I<w;){const B=L[I];let ee=null,Te=B>239?4:B>223?3:B>191?2:1;if(I+Te<=w){let ut,et,it,Ee;switch(Te){case 1:B<128&&(ee=B);break;case 2:ut=L[I+1],(ut&192)===128&&(Ee=(B&31)<<6|ut&63,Ee>127&&(ee=Ee));break;case 3:ut=L[I+1],et=L[I+2],(ut&192)===128&&(et&192)===128&&(Ee=(B&15)<<12|(ut&63)<<6|et&63,Ee>2047&&(Ee<55296||Ee>57343)&&(ee=Ee));break;case 4:ut=L[I+1],et=L[I+2],it=L[I+3],(ut&192)===128&&(et&192)===128&&(it&192)===128&&(Ee=(B&15)<<18|(ut&63)<<12|(et&63)<<6|it&63,Ee>65535&&Ee<1114112&&(ee=Ee))}}ee===null?(ee=65533,Te=1):ee>65535&&(ee-=65536,W.push(ee>>>10&1023|55296),ee=56320|ee&1023),W.push(ee),I+=Te}return te(W)}const ae=4096;function te(L){const S=L.length;if(S<=ae)return String.fromCharCode.apply(String,L);let w="",W=0;for(;W<S;)w+=String.fromCharCode.apply(String,L.slice(W,W+=ae));return w}function ie(L,S,w){let W="";w=Math.min(L.length,w);for(let I=S;I<w;++I)W+=String.fromCharCode(L[I]&127);return W}function K(L,S,w){let W="";w=Math.min(L.length,w);for(let I=S;I<w;++I)W+=String.fromCharCode(L[I]);return W}function oe(L,S,w){const W=L.length;(!S||S<0)&&(S=0),(!w||w<0||w>W)&&(w=W);let I="";for(let B=S;B<w;++B)I+=pn[L[B]];return I}function ne(L,S,w){const W=L.slice(S,w);let I="";for(let B=0;B<W.length-1;B+=2)I+=String.fromCharCode(W[B]+W[B+1]*256);return I}l.prototype.slice=function(S,w){const W=this.length;S=~~S,w=w===void 0?W:~~w,S<0?(S+=W,S<0&&(S=0)):S>W&&(S=W),w<0?(w+=W,w<0&&(w=0)):w>W&&(w=W),w<S&&(w=S);const I=this.subarray(S,w);return Object.setPrototypeOf(I,l.prototype),I};function ue(L,S,w){if(L%1!==0||L<0)throw new RangeError("offset is not uint");if(L+S>w)throw new RangeError("Trying to access beyond buffer length")}l.prototype.readUintLE=l.prototype.readUIntLE=function(S,w,W){S=S>>>0,w=w>>>0,W||ue(S,w,this.length);let I=this[S],B=1,ee=0;for(;++ee<w&&(B*=256);)I+=this[S+ee]*B;return I},l.prototype.readUintBE=l.prototype.readUIntBE=function(S,w,W){S=S>>>0,w=w>>>0,W||ue(S,w,this.length);let I=this[S+--w],B=1;for(;w>0&&(B*=256);)I+=this[S+--w]*B;return I},l.prototype.readUint8=l.prototype.readUInt8=function(S,w){return S=S>>>0,w||ue(S,1,this.length),this[S]},l.prototype.readUint16LE=l.prototype.readUInt16LE=function(S,w){return S=S>>>0,w||ue(S,2,this.length),this[S]|this[S+1]<<8},l.prototype.readUint16BE=l.prototype.readUInt16BE=function(S,w){return S=S>>>0,w||ue(S,2,this.length),this[S]<<8|this[S+1]},l.prototype.readUint32LE=l.prototype.readUInt32LE=function(S,w){return S=S>>>0,w||ue(S,4,this.length),(this[S]|this[S+1]<<8|this[S+2]<<16)+this[S+3]*16777216},l.prototype.readUint32BE=l.prototype.readUInt32BE=function(S,w){return S=S>>>0,w||ue(S,4,this.length),this[S]*16777216+(this[S+1]<<16|this[S+2]<<8|this[S+3])},l.prototype.readBigUInt64LE=or(function(S){S=S>>>0,$e(S,"offset");const w=this[S],W=this[S+7];(w===void 0||W===void 0)&&$t(S,this.length-8);const I=w+this[++S]*2**8+this[++S]*2**16+this[++S]*2**24,B=this[++S]+this[++S]*2**8+this[++S]*2**16+W*2**24;return BigInt(I)+(BigInt(B)<<BigInt(32))}),l.prototype.readBigUInt64BE=or(function(S){S=S>>>0,$e(S,"offset");const w=this[S],W=this[S+7];(w===void 0||W===void 0)&&$t(S,this.length-8);const I=w*2**24+this[++S]*2**16+this[++S]*2**8+this[++S],B=this[++S]*2**24+this[++S]*2**16+this[++S]*2**8+W;return(BigInt(I)<<BigInt(32))+BigInt(B)}),l.prototype.readIntLE=function(S,w,W){S=S>>>0,w=w>>>0,W||ue(S,w,this.length);let I=this[S],B=1,ee=0;for(;++ee<w&&(B*=256);)I+=this[S+ee]*B;return B*=128,I>=B&&(I-=Math.pow(2,8*w)),I},l.prototype.readIntBE=function(S,w,W){S=S>>>0,w=w>>>0,W||ue(S,w,this.length);let I=w,B=1,ee=this[S+--I];for(;I>0&&(B*=256);)ee+=this[S+--I]*B;return B*=128,ee>=B&&(ee-=Math.pow(2,8*w)),ee},l.prototype.readInt8=function(S,w){return S=S>>>0,w||ue(S,1,this.length),this[S]&128?(255-this[S]+1)*-1:this[S]},l.prototype.readInt16LE=function(S,w){S=S>>>0,w||ue(S,2,this.length);const W=this[S]|this[S+1]<<8;return W&32768?W|4294901760:W},l.prototype.readInt16BE=function(S,w){S=S>>>0,w||ue(S,2,this.length);const W=this[S+1]|this[S]<<8;return W&32768?W|4294901760:W},l.prototype.readInt32LE=function(S,w){return S=S>>>0,w||ue(S,4,this.length),this[S]|this[S+1]<<8|this[S+2]<<16|this[S+3]<<24},l.prototype.readInt32BE=function(S,w){return S=S>>>0,w||ue(S,4,this.length),this[S]<<24|this[S+1]<<16|this[S+2]<<8|this[S+3]},l.prototype.readBigInt64LE=or(function(S){S=S>>>0,$e(S,"offset");const w=this[S],W=this[S+7];(w===void 0||W===void 0)&&$t(S,this.length-8);const I=this[S+4]+this[S+5]*2**8+this[S+6]*2**16+(W<<24);return(BigInt(I)<<BigInt(32))+BigInt(w+this[++S]*2**8+this[++S]*2**16+this[++S]*2**24)}),l.prototype.readBigInt64BE=or(function(S){S=S>>>0,$e(S,"offset");const w=this[S],W=this[S+7];(w===void 0||W===void 0)&&$t(S,this.length-8);const I=(w<<24)+this[++S]*2**16+this[++S]*2**8+this[++S];return(BigInt(I)<<BigInt(32))+BigInt(this[++S]*2**24+this[++S]*2**16+this[++S]*2**8+W)}),l.prototype.readFloatLE=function(S,w){return S=S>>>0,w||ue(S,4,this.length),r.read(this,S,!0,23,4)},l.prototype.readFloatBE=function(S,w){return S=S>>>0,w||ue(S,4,this.length),r.read(this,S,!1,23,4)},l.prototype.readDoubleLE=function(S,w){return S=S>>>0,w||ue(S,8,this.length),r.read(this,S,!0,52,8)},l.prototype.readDoubleBE=function(S,w){return S=S>>>0,w||ue(S,8,this.length),r.read(this,S,!1,52,8)};function pe(L,S,w,W,I,B){if(!l.isBuffer(L))throw new TypeError('"buffer" argument must be a Buffer instance');if(S>I||S<B)throw new RangeError('"value" argument is out of bounds');if(w+W>L.length)throw new RangeError("Index out of range")}l.prototype.writeUintLE=l.prototype.writeUIntLE=function(S,w,W,I){if(S=+S,w=w>>>0,W=W>>>0,!I){const Te=Math.pow(2,8*W)-1;pe(this,S,w,W,Te,0)}let B=1,ee=0;for(this[w]=S&255;++ee<W&&(B*=256);)this[w+ee]=S/B&255;return w+W},l.prototype.writeUintBE=l.prototype.writeUIntBE=function(S,w,W,I){if(S=+S,w=w>>>0,W=W>>>0,!I){const Te=Math.pow(2,8*W)-1;pe(this,S,w,W,Te,0)}let B=W-1,ee=1;for(this[w+B]=S&255;--B>=0&&(ee*=256);)this[w+B]=S/ee&255;return w+W},l.prototype.writeUint8=l.prototype.writeUInt8=function(S,w,W){return S=+S,w=w>>>0,W||pe(this,S,w,1,255,0),this[w]=S&255,w+1},l.prototype.writeUint16LE=l.prototype.writeUInt16LE=function(S,w,W){return S=+S,w=w>>>0,W||pe(this,S,w,2,65535,0),this[w]=S&255,this[w+1]=S>>>8,w+2},l.prototype.writeUint16BE=l.prototype.writeUInt16BE=function(S,w,W){return S=+S,w=w>>>0,W||pe(this,S,w,2,65535,0),this[w]=S>>>8,this[w+1]=S&255,w+2},l.prototype.writeUint32LE=l.prototype.writeUInt32LE=function(S,w,W){return S=+S,w=w>>>0,W||pe(this,S,w,4,4294967295,0),this[w+3]=S>>>24,this[w+2]=S>>>16,this[w+1]=S>>>8,this[w]=S&255,w+4},l.prototype.writeUint32BE=l.prototype.writeUInt32BE=function(S,w,W){return S=+S,w=w>>>0,W||pe(this,S,w,4,4294967295,0),this[w]=S>>>24,this[w+1]=S>>>16,this[w+2]=S>>>8,this[w+3]=S&255,w+4};function Pe(L,S,w,W,I){kr(S,W,I,L,w,7);let B=Number(S&BigInt(4294967295));L[w++]=B,B=B>>8,L[w++]=B,B=B>>8,L[w++]=B,B=B>>8,L[w++]=B;let ee=Number(S>>BigInt(32)&BigInt(4294967295));return L[w++]=ee,ee=ee>>8,L[w++]=ee,ee=ee>>8,L[w++]=ee,ee=ee>>8,L[w++]=ee,w}function be(L,S,w,W,I){kr(S,W,I,L,w,7);let B=Number(S&BigInt(4294967295));L[w+7]=B,B=B>>8,L[w+6]=B,B=B>>8,L[w+5]=B,B=B>>8,L[w+4]=B;let ee=Number(S>>BigInt(32)&BigInt(4294967295));return L[w+3]=ee,ee=ee>>8,L[w+2]=ee,ee=ee>>8,L[w+1]=ee,ee=ee>>8,L[w]=ee,w+8}l.prototype.writeBigUInt64LE=or(function(S,w=0){return Pe(this,S,w,BigInt(0),BigInt("0xffffffffffffffff"))}),l.prototype.writeBigUInt64BE=or(function(S,w=0){return be(this,S,w,BigInt(0),BigInt("0xffffffffffffffff"))}),l.prototype.writeIntLE=function(S,w,W,I){if(S=+S,w=w>>>0,!I){const ut=Math.pow(2,8*W-1);pe(this,S,w,W,ut-1,-ut)}let B=0,ee=1,Te=0;for(this[w]=S&255;++B<W&&(ee*=256);)S<0&&Te===0&&this[w+B-1]!==0&&(Te=1),this[w+B]=(S/ee>>0)-Te&255;return w+W},l.prototype.writeIntBE=function(S,w,W,I){if(S=+S,w=w>>>0,!I){const ut=Math.pow(2,8*W-1);pe(this,S,w,W,ut-1,-ut)}let B=W-1,ee=1,Te=0;for(this[w+B]=S&255;--B>=0&&(ee*=256);)S<0&&Te===0&&this[w+B+1]!==0&&(Te=1),this[w+B]=(S/ee>>0)-Te&255;return w+W},l.prototype.writeInt8=function(S,w,W){return S=+S,w=w>>>0,W||pe(this,S,w,1,127,-128),S<0&&(S=255+S+1),this[w]=S&255,w+1},l.prototype.writeInt16LE=function(S,w,W){return S=+S,w=w>>>0,W||pe(this,S,w,2,32767,-32768),this[w]=S&255,this[w+1]=S>>>8,w+2},l.prototype.writeInt16BE=function(S,w,W){return S=+S,w=w>>>0,W||pe(this,S,w,2,32767,-32768),this[w]=S>>>8,this[w+1]=S&255,w+2},l.prototype.writeInt32LE=function(S,w,W){return S=+S,w=w>>>0,W||pe(this,S,w,4,2147483647,-2147483648),this[w]=S&255,this[w+1]=S>>>8,this[w+2]=S>>>16,this[w+3]=S>>>24,w+4},l.prototype.writeInt32BE=function(S,w,W){return S=+S,w=w>>>0,W||pe(this,S,w,4,2147483647,-2147483648),S<0&&(S=4294967295+S+1),this[w]=S>>>24,this[w+1]=S>>>16,this[w+2]=S>>>8,this[w+3]=S&255,w+4},l.prototype.writeBigInt64LE=or(function(S,w=0){return Pe(this,S,w,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),l.prototype.writeBigInt64BE=or(function(S,w=0){return be(this,S,w,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});function Be(L,S,w,W,I,B){if(w+W>L.length)throw new RangeError("Index out of range");if(w<0)throw new RangeError("Index out of range")}function Ze(L,S,w,W,I){return S=+S,w=w>>>0,I||Be(L,S,w,4),r.write(L,S,w,W,23,4),w+4}l.prototype.writeFloatLE=function(S,w,W){return Ze(this,S,w,!0,W)},l.prototype.writeFloatBE=function(S,w,W){return Ze(this,S,w,!1,W)};function vt(L,S,w,W,I){return S=+S,w=w>>>0,I||Be(L,S,w,8),r.write(L,S,w,W,52,8),w+8}l.prototype.writeDoubleLE=function(S,w,W){return vt(this,S,w,!0,W)},l.prototype.writeDoubleBE=function(S,w,W){return vt(this,S,w,!1,W)},l.prototype.copy=function(S,w,W,I){if(!l.isBuffer(S))throw new TypeError("argument should be a Buffer");if(W||(W=0),!I&&I!==0&&(I=this.length),w>=S.length&&(w=S.length),w||(w=0),I>0&&I<W&&(I=W),I===W||S.length===0||this.length===0)return 0;if(w<0)throw new RangeError("targetStart out of bounds");if(W<0||W>=this.length)throw new RangeError("Index out of range");if(I<0)throw new RangeError("sourceEnd out of bounds");I>this.length&&(I=this.length),S.length-w<I-W&&(I=S.length-w+W);const B=I-W;return this===S&&typeof Uint8Array.prototype.copyWithin=="function"?this.copyWithin(w,W,I):Uint8Array.prototype.set.call(S,this.subarray(W,I),w),B},l.prototype.fill=function(S,w,W,I){if(typeof S=="string"){if(typeof w=="string"?(I=w,w=0,W=this.length):typeof W=="string"&&(I=W,W=this.length),I!==void 0&&typeof I!="string")throw new TypeError("encoding must be a string");if(typeof I=="string"&&!l.isEncoding(I))throw new TypeError("Unknown encoding: "+I);if(S.length===1){const ee=S.charCodeAt(0);(I==="utf8"&&ee<128||I==="latin1")&&(S=ee)}}else typeof S=="number"?S=S&255:typeof S=="boolean"&&(S=Number(S));if(w<0||this.length<w||this.length<W)throw new RangeError("Out of range index");if(W<=w)return this;w=w>>>0,W=W===void 0?this.length:W>>>0,S||(S=0);let B;if(typeof S=="number")for(B=w;B<W;++B)this[B]=S;else{const ee=l.isBuffer(S)?S:l.from(S,I),Te=ee.length;if(Te===0)throw new TypeError('The value "'+S+'" is invalid for argument "value"');for(B=0;B<W-w;++B)this[B+w]=ee[B%Te]}return this};const _t={};function qt(L,S,w){_t[L]=class extends w{constructor(){super(),Object.defineProperty(this,"message",{value:S.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${L}]`,this.stack,delete this.name}get code(){return L}set code(I){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:I,writable:!0})}toString(){return`${this.name} [${L}]: ${this.message}`}}}qt("ERR_BUFFER_OUT_OF_BOUNDS",function(L){return L?`${L} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),qt("ERR_INVALID_ARG_TYPE",function(L,S){return`The "${L}" argument must be of type number. Received type ${typeof S}`},TypeError),qt("ERR_OUT_OF_RANGE",function(L,S,w){let W=`The value of "${L}" is out of range.`,I=w;return Number.isInteger(w)&&Math.abs(w)>2**32?I=wr(String(w)):typeof w=="bigint"&&(I=String(w),(w>BigInt(2)**BigInt(32)||w<-(BigInt(2)**BigInt(32)))&&(I=wr(I)),I+="n"),W+=` It must be ${S}. Received ${I}`,W},RangeError);function wr(L){let S="",w=L.length;const W=L[0]==="-"?1:0;for(;w>=W+4;w-=3)S=`_${L.slice(w-3,w)}${S}`;return`${L.slice(0,w)}${S}`}function _e(L,S,w){$e(S,"offset"),(L[S]===void 0||L[S+w]===void 0)&&$t(S,L.length-(w+1))}function kr(L,S,w,W,I,B){if(L>w||L<S){const ee=typeof S=="bigint"?"n":"";let Te;throw B>3?S===0||S===BigInt(0)?Te=`>= 0${ee} and < 2${ee} ** ${(B+1)*8}${ee}`:Te=`>= -(2${ee} ** ${(B+1)*8-1}${ee}) and < 2 ** ${(B+1)*8-1}${ee}`:Te=`>= ${S}${ee} and <= ${w}${ee}`,new _t.ERR_OUT_OF_RANGE("value",Te,L)}_e(W,I,B)}function $e(L,S){if(typeof L!="number")throw new _t.ERR_INVALID_ARG_TYPE(S,"number",L)}function $t(L,S,w){throw Math.floor(L)!==L?($e(L,w),new _t.ERR_OUT_OF_RANGE(w||"offset","an integer",L)):S<0?new _t.ERR_BUFFER_OUT_OF_BOUNDS:new _t.ERR_OUT_OF_RANGE(w||"offset",`>= ${w?1:0} and <= ${S}`,L)}const aa=/[^+/0-9A-Za-z-_]/g;function ji(L){if(L=L.split("=")[0],L=L.trim().replace(aa,""),L.length<2)return"";for(;L.length%4!==0;)L=L+"=";return L}function Tt(L,S){S=S||1/0;let w;const W=L.length;let I=null;const B=[];for(let ee=0;ee<W;++ee){if(w=L.charCodeAt(ee),w>55295&&w<57344){if(!I){if(w>56319){(S-=3)>-1&&B.push(239,191,189);continue}else if(ee+1===W){(S-=3)>-1&&B.push(239,191,189);continue}I=w;continue}if(w<56320){(S-=3)>-1&&B.push(239,191,189),I=w;continue}w=(I-55296<<10|w-56320)+65536}else I&&(S-=3)>-1&&B.push(239,191,189);if(I=null,w<128){if((S-=1)<0)break;B.push(w)}else if(w<2048){if((S-=2)<0)break;B.push(w>>6|192,w&63|128)}else if(w<65536){if((S-=3)<0)break;B.push(w>>12|224,w>>6&63|128,w&63|128)}else if(w<1114112){if((S-=4)<0)break;B.push(w>>18|240,w>>12&63|128,w>>6&63|128,w&63|128)}else throw new Error("Invalid code point")}return B}function hl(L){const S=[];for(let w=0;w<L.length;++w)S.push(L.charCodeAt(w)&255);return S}function ml(L,S){let w,W,I;const B=[];for(let ee=0;ee<L.length&&!((S-=2)<0);++ee)w=L.charCodeAt(ee),W=w>>8,I=w%256,B.push(I),B.push(W);return B}function dn(L){return e.toByteArray(ji(L))}function $n(L,S,w,W){let I;for(I=0;I<W&&!(I+w>=S.length||I>=L.length);++I)S[I+w]=L[I];return I}function Lr(L,S){return L instanceof S||L!=null&&L.constructor!=null&&L.constructor.name!=null&&L.constructor.name===S.name}function os(L){return L!==L}const pn=function(){const L="0123456789abcdef",S=new Array(256);for(let w=0;w<16;++w){const W=w*16;for(let I=0;I<16;++I)S[W+I]=L[w]+L[I]}return S}();function or(L){return typeof BigInt=="undefined"?vl:L}function vl(){throw new Error("BigInt not supported")}})(bT);const gE=t=>{const[e,r]=Y.exports.useState(1),[n,i]=Y.exports.useState(0),a=[],s=c=>{r(1),i(c),t.setScoreCallback(1*c)},l=()=>{r(1),i(25),t.setScoreCallback(1*25)};for(let c=0;c<=20;c++)a.push($(tn,{variant:n===c?"contained":"text",onClick:()=>{s(c)},children:c}));return a.push($(tn,{variant:n===25?"contained":"text",onClick:()=>{l()},children:25})),Fe(yh,{children:[a,$("br",{}),$(tn,{variant:e===1?"contained":"text",onClick:()=>{r(1),t.setScoreCallback(1*n)},children:"x1"}),$(tn,{variant:e===2?"contained":"text",onClick:()=>{r(2),t.setScoreCallback(2*n)},children:"x2"}),$(tn,{disabled:n===25,variant:e===3?"contained":"text",onClick:()=>{r(3),t.setScoreCallback(3*n)},children:"x3"})]})},AE="http://192.168.2.40:8000";class SE{constructor(e){Qm(this,"piUrl");Qm(this,"newImageRoute","new-image");this.piUrl=e}async newImage(){return M5.get("https://reshape.sport1.de/c/t/61df2ed2-cfd6-4b0e-a177-715d645ae283/1200x675",{responseType:"arraybuffer"}).then(r=>r.data)}}const xE=new SE(AE),PE=()=>{const t=Ph(),e=Tu(p=>p.newThrowState),[r,n]=Y.exports.useState(""),[i,a]=Y.exports.useState(0),[s,l]=Y.exports.useState(!1),c=async()=>{l(!0);const p=await xE.newImage(),h=`data:image/png;base64,${bT.Buffer.from(p).toString("base64")}`;console.log(`set img string to ${h}`),n(h),l(!1)},f=()=>{console.log("store state",e),e.length===2?(t(vg.actions.addThrow({score:i,imgString:r})),t(gp.nextState())):(console.log("next throw"),t(vg.actions.addThrow({score:i,imgString:r})),n(""))};return $(yh,{children:Fe(Q0,{sx:{display:"flex",flexDirection:"column",alignItems:"center",justifyContent:"center",minHeight:"100vh"},children:[Fe("p",{children:["Capture throw ",1+e.length,"/3"]}),$("div",{hidden:r!=="",children:$(Td,{size:"large",onClick:()=>{c()},children:$(PT,{sx:{fontSize:"3em"}})})}),Fe("div",{hidden:r==="",children:[$(Td,{size:"large",disabled:s,onClick:f,children:$(wT,{sx:{fontSize:"2em"}})}),$(Td,{size:"large",disabled:s,onClick:c,children:$(kT,{sx:{fontSize:"2em"}})})]}),$(AM,{sx:{mt:3,display:"flex",flexDirection:"column",alignItems:"center",justifyContent:"center"},children:$(Dq,{children:$("img",{src:r,alt:""})},0)}),Fe("p",{children:["Score: ",i]}),$("br",{}),$(gE,{setScoreCallback:p=>a(p)})]})})};var R1={},wE=ea.exports;Object.defineProperty(R1,"__esModule",{value:!0});var TT=R1.default=void 0,kE=wE(ta),bE=rs,qE=(0,kE.default)((0,bE.jsx)("path",{d:"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z"}),"CloudUpload");TT=R1.default=qE;var V1={},TE=ea.exports;Object.defineProperty(V1,"__esModule",{value:!0});var jT=V1.default=void 0,jE=TE(ta),RE=rs,VE=(0,jE.default)((0,RE.jsx)("path",{d:"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"}),"Cancel");jT=V1.default=VE;const LE=({open:t,title:e,text:r,cancel:n,confirm:i,autoFocus:a})=>Fe(B4,{open:t,children:[$(dM,{children:e}),$(oM,{children:r}),Fe(eM,{children:[$(tn,{autoFocus:a==="ok",onClick:i,children:"Ok"}),$(tn,{autoFocus:a!=="ok",onClick:n,children:"No"})]})]}),NE=()=>{const t=Tu(s=>s.newThrowState),[e,r]=Y.exports.useState(!1),n=()=>{},i=()=>{r(!1)},a=()=>{r(!0)};return Fe(yh,{maxWidth:"lg",children:[$(LE,{open:e,autoFocus:"no",cancel:()=>r(!1),confirm:i,title:"Cancel new Throw?",text:""}),Fe(Q0,{textAlign:"center",children:[$(Oa,{variant:"h3",children:"Upload ?"}),$("br",{}),$(XM,{direction:"row",justifyContent:"center",alignItems:"center",spacing:4,children:t.map((s,l)=>Fe(Dq,{children:[$("img",{src:s.imgString,alt:"",style:{height:"300px",width:"300px"}}),$(HM,{position:"below",title:$("p",{children:s.score})})]},`throw_${l}`))}),Fe(v4,{variant:"outlined",style:{marginTop:"50px"},children:[$(tn,{size:"large",sx:{minWidth:"160px"},onClick:n,endIcon:$(TT,{sx:{fontSize:"2em"}}),children:"Upload"}),$(tn,{onClick:a,endIcon:$(jT,{sx:{fontSize:"2em"}}),children:"Cancel"})]})]})]})},WE=()=>{const t=Ph(),e=Tu(s=>s.appNavigationState),r=Tu(s=>s.labellingNavigationState),n=Tu(s=>s.collectionNavigationState);return Fe(cy,{children:[Fe($3,{children:[$(RP,{onClick:()=>{t(gp.resetState()),t($P.resetState()),t(ew.setState("labelling"))},children:"Labelling"}),$(RP,{onClick:()=>{t(gp.resetState()),t($P.resetState()),t(ew.setState("collection"))},children:"Collect Data"})]}),Fe(cy,{children:[e==="collection"&&n===Go.Init&&$(j6,{}),e==="collection"&&n===Go.NewThrow&&$(PE,{}),e==="collection"&&n===Go.ConfirmNewThrow&&$(NE,{}),e==="labelling"&&r===Ap.Init&&$(_I,{})]})]})};function Wh(t,e){if(typeof e!="function"&&e!==null)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&up(t,e)}function Tc(t,e){if(e&&(Ca(e)==="object"||typeof e=="function"))return e;if(e!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return Gi(t)}function ki(t){return ki=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(r){return r.__proto__||Object.getPrototypeOf(r)},ki(t)}function UE(t){if(typeof Symbol!="undefined"&&t[Symbol.iterator]!=null||t["@@iterator"]!=null)return Array.from(t)}function HE(t){return a5(t)||UE(t)||s5(t)||o5()}function _w(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter(function(i){return Object.getOwnPropertyDescriptor(t,i).enumerable})),r.push.apply(r,n)}return r}function $w(t){for(var e=1;e<arguments.length;e++){var r=arguments[e]!=null?arguments[e]:{};e%2?_w(Object(r),!0).forEach(function(n){Bn(t,n,r[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):_w(Object(r)).forEach(function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(r,n))})}return t}var ME={type:"logger",log:function(e){this.output("log",e)},warn:function(e){this.output("warn",e)},error:function(e){this.output("error",e)},output:function(e,r){console&&console[e]&&console[e].apply(console,r)}},OE=function(){function t(e){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};Zn(this,t),this.init(e,r)}return Xn(t,[{key:"init",value:function(r){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};this.prefix=n.prefix||"i18next:",this.logger=r||ME,this.options=n,this.debug=n.debug}},{key:"setDebug",value:function(r){this.debug=r}},{key:"log",value:function(){for(var r=arguments.length,n=new Array(r),i=0;i<r;i++)n[i]=arguments[i];return this.forward(n,"log","",!0)}},{key:"warn",value:function(){for(var r=arguments.length,n=new Array(r),i=0;i<r;i++)n[i]=arguments[i];return this.forward(n,"warn","",!0)}},{key:"error",value:function(){for(var r=arguments.length,n=new Array(r),i=0;i<r;i++)n[i]=arguments[i];return this.forward(n,"error","")}},{key:"deprecate",value:function(){for(var r=arguments.length,n=new Array(r),i=0;i<r;i++)n[i]=arguments[i];return this.forward(n,"warn","WARNING DEPRECATED: ",!0)}},{key:"forward",value:function(r,n,i,a){return a&&!this.debug?null:(typeof r[0]=="string"&&(r[0]="".concat(i).concat(this.prefix," ").concat(r[0])),this.logger[n](r))}},{key:"create",value:function(r){return new t(this.logger,$w($w({},{prefix:"".concat(this.prefix,":").concat(r,":")}),this.options))}}]),t}(),mi=new OE,Ba=function(){function t(){Zn(this,t),this.observers={}}return Xn(t,[{key:"on",value:function(r,n){var i=this;return r.split(" ").forEach(function(a){i.observers[a]=i.observers[a]||[],i.observers[a].push(n)}),this}},{key:"off",value:function(r,n){if(!!this.observers[r]){if(!n){delete this.observers[r];return}this.observers[r]=this.observers[r].filter(function(i){return i!==n})}}},{key:"emit",value:function(r){for(var n=arguments.length,i=new Array(n>1?n-1:0),a=1;a<n;a++)i[a-1]=arguments[a];if(this.observers[r]){var s=[].concat(this.observers[r]);s.forEach(function(c){c.apply(void 0,i)})}if(this.observers["*"]){var l=[].concat(this.observers["*"]);l.forEach(function(c){c.apply(c,[r].concat(i))})}}}]),t}();function tu(){var t,e,r=new Promise(function(n,i){t=n,e=i});return r.resolve=t,r.reject=e,r}function e2(t){return t==null?"":""+t}function zE(t,e,r){t.forEach(function(n){e[n]&&(r[n]=e[n])})}function L1(t,e,r){function n(l){return l&&l.indexOf("###")>-1?l.replace(/###/g,"."):l}function i(){return!t||typeof t=="string"}for(var a=typeof e!="string"?[].concat(e):e.split(".");a.length>1;){if(i())return{};var s=n(a.shift());!t[s]&&r&&(t[s]=new r),Object.prototype.hasOwnProperty.call(t,s)?t=t[s]:t={}}return i()?{}:{obj:t,k:n(a.shift())}}function t2(t,e,r){var n=L1(t,e,Object),i=n.obj,a=n.k;i[a]=r}function YE(t,e,r,n){var i=L1(t,e,Object),a=i.obj,s=i.k;a[s]=a[s]||[],n&&(a[s]=a[s].concat(r)),n||a[s].push(r)}function kp(t,e){var r=L1(t,e),n=r.obj,i=r.k;if(!!n)return n[i]}function r2(t,e,r){var n=kp(t,r);return n!==void 0?n:kp(e,r)}function RT(t,e,r){for(var n in e)n!=="__proto__"&&n!=="constructor"&&(n in t?typeof t[n]=="string"||t[n]instanceof String||typeof e[n]=="string"||e[n]instanceof String?r&&(t[n]=e[n]):RT(t[n],e[n],r):t[n]=e[n]);return t}function So(t){return t.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}var CE={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};function FE(t){return typeof t=="string"?t.replace(/[&<>"'\/]/g,function(e){return CE[e]}):t}var Uh=typeof window!="undefined"&&window.navigator&&typeof window.navigator.userAgentData=="undefined"&&window.navigator.userAgent&&window.navigator.userAgent.indexOf("MSIE")>-1,IE=[" ",",","?","!",";"];function EE(t,e,r){e=e||"",r=r||"";var n=IE.filter(function(l){return e.indexOf(l)<0&&r.indexOf(l)<0});if(n.length===0)return!0;var i=new RegExp("(".concat(n.map(function(l){return l==="?"?"\\?":l}).join("|"),")")),a=!i.test(t);if(!a){var s=t.indexOf(r);s>0&&!i.test(t.substring(0,s))&&(a=!0)}return a}function n2(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter(function(i){return Object.getOwnPropertyDescriptor(t,i).enumerable})),r.push.apply(r,n)}return r}function cd(t){for(var e=1;e<arguments.length;e++){var r=arguments[e]!=null?arguments[e]:{};e%2?n2(Object(r),!0).forEach(function(n){Bn(t,n,r[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):n2(Object(r)).forEach(function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(r,n))})}return t}function JE(t){var e=DE();return function(){var n=ki(t),i;if(e){var a=ki(this).constructor;i=Reflect.construct(n,arguments,a)}else i=n.apply(this,arguments);return Tc(this,i)}}function DE(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}function VT(t,e){var r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:".";if(!!t){if(t[e])return t[e];for(var n=e.split(r),i=t,a=0;a<n.length;++a){if(!i||typeof i[n[a]]=="string"&&a+1<n.length)return;if(i[n[a]]===void 0){for(var s=2,l=n.slice(a,a+s).join(r),c=i[l];c===void 0&&n.length>a+s;)s++,l=n.slice(a,a+s).join(r),c=i[l];if(c===void 0)return;if(c===null)return null;if(e.endsWith(l)){if(typeof c=="string")return c;if(l&&typeof c[l]=="string")return c[l]}var f=n.slice(a+s).join(r);return f?VT(c,f,r):void 0}i=i[n[a]]}return i}}var GE=function(t){Wh(r,t);var e=JE(r);function r(n){var i,a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{ns:["translation"],defaultNS:"translation"};return Zn(this,r),i=e.call(this),Uh&&Ba.call(Gi(i)),i.data=n||{},i.options=a,i.options.keySeparator===void 0&&(i.options.keySeparator="."),i.options.ignoreJSONStructure===void 0&&(i.options.ignoreJSONStructure=!0),i}return Xn(r,[{key:"addNamespaces",value:function(i){this.options.ns.indexOf(i)<0&&this.options.ns.push(i)}},{key:"removeNamespaces",value:function(i){var a=this.options.ns.indexOf(i);a>-1&&this.options.ns.splice(a,1)}},{key:"getResource",value:function(i,a,s){var l=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},c=l.keySeparator!==void 0?l.keySeparator:this.options.keySeparator,f=l.ignoreJSONStructure!==void 0?l.ignoreJSONStructure:this.options.ignoreJSONStructure,p=[i,a];s&&typeof s!="string"&&(p=p.concat(s)),s&&typeof s=="string"&&(p=p.concat(c?s.split(c):s)),i.indexOf(".")>-1&&(p=i.split("."));var h=kp(this.data,p);return h||!f||typeof s!="string"?h:VT(this.data&&this.data[i]&&this.data[i][a],s,c)}},{key:"addResource",value:function(i,a,s,l){var c=arguments.length>4&&arguments[4]!==void 0?arguments[4]:{silent:!1},f=this.options.keySeparator;f===void 0&&(f=".");var p=[i,a];s&&(p=p.concat(f?s.split(f):s)),i.indexOf(".")>-1&&(p=i.split("."),l=a,a=p[1]),this.addNamespaces(a),t2(this.data,p,l),c.silent||this.emit("added",i,a,s,l)}},{key:"addResources",value:function(i,a,s){var l=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{silent:!1};for(var c in s)(typeof s[c]=="string"||Object.prototype.toString.apply(s[c])==="[object Array]")&&this.addResource(i,a,c,s[c],{silent:!0});l.silent||this.emit("added",i,a,s)}},{key:"addResourceBundle",value:function(i,a,s,l,c){var f=arguments.length>5&&arguments[5]!==void 0?arguments[5]:{silent:!1},p=[i,a];i.indexOf(".")>-1&&(p=i.split("."),l=s,s=a,a=p[1]),this.addNamespaces(a);var h=kp(this.data,p)||{};l?RT(h,s,c):h=cd(cd({},h),s),t2(this.data,p,h),f.silent||this.emit("added",i,a,s)}},{key:"removeResourceBundle",value:function(i,a){this.hasResourceBundle(i,a)&&delete this.data[i][a],this.removeNamespaces(a),this.emit("removed",i,a)}},{key:"hasResourceBundle",value:function(i,a){return this.getResource(i,a)!==void 0}},{key:"getResourceBundle",value:function(i,a){return a||(a=this.options.defaultNS),this.options.compatibilityAPI==="v1"?cd(cd({},{}),this.getResource(i,a)):this.getResource(i,a)}},{key:"getDataByLanguage",value:function(i){return this.data[i]}},{key:"hasLanguageSomeTranslations",value:function(i){var a=this.getDataByLanguage(i),s=a&&Object.keys(a)||[];return!!s.find(function(l){return a[l]&&Object.keys(a[l]).length>0})}},{key:"toJSON",value:function(){return this.data}}]),r}(Ba),LT={processors:{},addPostProcessor:function(e){this.processors[e.name]=e},handle:function(e,r,n,i,a){var s=this;return e.forEach(function(l){s.processors[l]&&(r=s.processors[l].process(r,n,i,a))}),r}};function i2(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter(function(i){return Object.getOwnPropertyDescriptor(t,i).enumerable})),r.push.apply(r,n)}return r}function qr(t){for(var e=1;e<arguments.length;e++){var r=arguments[e]!=null?arguments[e]:{};e%2?i2(Object(r),!0).forEach(function(n){Bn(t,n,r[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i2(Object(r)).forEach(function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(r,n))})}return t}function KE(t){var e=BE();return function(){var n=ki(t),i;if(e){var a=ki(this).constructor;i=Reflect.construct(n,arguments,a)}else i=n.apply(this,arguments);return Tc(this,i)}}function BE(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}var a2={},s2=function(t){Wh(r,t);var e=KE(r);function r(n){var i,a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};return Zn(this,r),i=e.call(this),Uh&&Ba.call(Gi(i)),zE(["resourceStore","languageUtils","pluralResolver","interpolator","backendConnector","i18nFormat","utils"],n,Gi(i)),i.options=a,i.options.keySeparator===void 0&&(i.options.keySeparator="."),i.logger=mi.create("translator"),i}return Xn(r,[{key:"changeLanguage",value:function(i){i&&(this.language=i)}},{key:"exists",value:function(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{interpolation:{}};if(i==null)return!1;var s=this.resolve(i,a);return s&&s.res!==void 0}},{key:"extractFromKey",value:function(i,a){var s=a.nsSeparator!==void 0?a.nsSeparator:this.options.nsSeparator;s===void 0&&(s=":");var l=a.keySeparator!==void 0?a.keySeparator:this.options.keySeparator,c=a.ns||this.options.defaultNS||[],f=s&&i.indexOf(s)>-1,p=!this.options.userDefinedKeySeparator&&!a.keySeparator&&!this.options.userDefinedNsSeparator&&!a.nsSeparator&&!EE(i,s,l);if(f&&!p){var h=i.match(this.interpolator.nestingRegexp);if(h&&h.length>0)return{key:i,namespaces:c};var m=i.split(s);(s!==l||s===l&&this.options.ns.indexOf(m[0])>-1)&&(c=m.shift()),i=m.join(l)}return typeof c=="string"&&(c=[c]),{key:i,namespaces:c}}},{key:"translate",value:function(i,a,s){var l=this;if(Ca(a)!=="object"&&this.options.overloadTranslationOptionHandler&&(a=this.options.overloadTranslationOptionHandler(arguments)),a||(a={}),i==null)return"";Array.isArray(i)||(i=[String(i)]);var c=a.returnDetails!==void 0?a.returnDetails:this.options.returnDetails,f=a.keySeparator!==void 0?a.keySeparator:this.options.keySeparator,p=this.extractFromKey(i[i.length-1],a),h=p.key,m=p.namespaces,g=m[m.length-1],y=a.lng||this.language,k=a.appendNamespaceToCIMode||this.options.appendNamespaceToCIMode;if(y&&y.toLowerCase()==="cimode"){if(k){var q=a.nsSeparator||this.options.nsSeparator;return c?(P.res="".concat(g).concat(q).concat(h),P):"".concat(g).concat(q).concat(h)}return c?(P.res=h,P):h}var P=this.resolve(i,a),x=P&&P.res,b=P&&P.usedKey||h,j=P&&P.exactUsedKey||h,R=Object.prototype.toString.apply(x),V=["[object Number]","[object Function]","[object RegExp]"],N=a.joinArrays!==void 0?a.joinArrays:this.options.joinArrays,H=!this.i18nFormat||this.i18nFormat.handleAsObject,O=typeof x!="string"&&typeof x!="boolean"&&typeof x!="number";if(H&&x&&O&&V.indexOf(R)<0&&!(typeof N=="string"&&R==="[object Array]")){if(!a.returnObjects&&!this.options.returnObjects){this.options.returnedObjectHandler||this.logger.warn("accessing an object - but returnObjects options is not enabled!");var M=this.options.returnedObjectHandler?this.options.returnedObjectHandler(b,x,qr(qr({},a),{},{ns:m})):"key '".concat(h," (").concat(this.language,")' returned an object instead of string.");return c?(P.res=M,P):M}if(f){var F=R==="[object Array]",J=F?[]:{},X=F?j:b;for(var re in x)if(Object.prototype.hasOwnProperty.call(x,re)){var ae="".concat(X).concat(f).concat(re);J[re]=this.translate(ae,qr(qr({},a),{joinArrays:!1,ns:m})),J[re]===ae&&(J[re]=x[re])}x=J}}else if(H&&typeof N=="string"&&R==="[object Array]")x=x.join(N),x&&(x=this.extendTranslation(x,i,a,s));else{var te=!1,ie=!1,K=a.count!==void 0&&typeof a.count!="string",oe=r.hasDefaultValue(a),ne=K?this.pluralResolver.getSuffix(y,a.count,a):"",ue=a["defaultValue".concat(ne)]||a.defaultValue;!this.isValidLookup(x)&&oe&&(te=!0,x=ue),this.isValidLookup(x)||(ie=!0,x=h);var pe=a.missingKeyNoValueFallbackToKey||this.options.missingKeyNoValueFallbackToKey,Pe=pe&&ie?void 0:x,be=oe&&ue!==x&&this.options.updateMissing;if(ie||te||be){if(this.logger.log(be?"updateKey":"missingKey",y,g,h,be?ue:x),f){var Be=this.resolve(h,qr(qr({},a),{},{keySeparator:!1}));Be&&Be.res&&this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.")}var Ze=[],vt=this.languageUtils.getFallbackCodes(this.options.fallbackLng,a.lng||this.language);if(this.options.saveMissingTo==="fallback"&&vt&&vt[0])for(var _t=0;_t<vt.length;_t++)Ze.push(vt[_t]);else this.options.saveMissingTo==="all"?Ze=this.languageUtils.toResolveHierarchy(a.lng||this.language):Ze.push(a.lng||this.language);var qt=function(_e,kr,$e){var $t=oe&&$e!==x?$e:Pe;l.options.missingKeyHandler?l.options.missingKeyHandler(_e,g,kr,$t,be,a):l.backendConnector&&l.backendConnector.saveMissing&&l.backendConnector.saveMissing(_e,g,kr,$t,be,a),l.emit("missingKey",_e,g,kr,x)};this.options.saveMissing&&(this.options.saveMissingPlurals&&K?Ze.forEach(function(wr){l.pluralResolver.getSuffixes(wr,a).forEach(function(_e){qt([wr],h+_e,a["defaultValue".concat(_e)]||ue)})}):qt(Ze,h,ue))}x=this.extendTranslation(x,i,a,P,s),ie&&x===h&&this.options.appendNamespaceToMissingKey&&(x="".concat(g,":").concat(h)),(ie||te)&&this.options.parseMissingKeyHandler&&(this.options.compatibilityAPI!=="v1"?x=this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey?"".concat(g,":").concat(h):h,te?x:void 0):x=this.options.parseMissingKeyHandler(x))}return c?(P.res=x,P):x}},{key:"extendTranslation",value:function(i,a,s,l,c){var f=this;if(this.i18nFormat&&this.i18nFormat.parse)i=this.i18nFormat.parse(i,qr(qr({},this.options.interpolation.defaultVariables),s),l.usedLng,l.usedNS,l.usedKey,{resolved:l});else if(!s.skipInterpolation){s.interpolation&&this.interpolator.init(qr(qr({},s),{interpolation:qr(qr({},this.options.interpolation),s.interpolation)}));var p=typeof i=="string"&&(s&&s.interpolation&&s.interpolation.skipOnVariables!==void 0?s.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables),h;if(p){var m=i.match(this.interpolator.nestingRegexp);h=m&&m.length}var g=s.replace&&typeof s.replace!="string"?s.replace:s;if(this.options.interpolation.defaultVariables&&(g=qr(qr({},this.options.interpolation.defaultVariables),g)),i=this.interpolator.interpolate(i,g,s.lng||this.language,s),p){var y=i.match(this.interpolator.nestingRegexp),k=y&&y.length;h<k&&(s.nest=!1)}s.nest!==!1&&(i=this.interpolator.nest(i,function(){for(var x=arguments.length,b=new Array(x),j=0;j<x;j++)b[j]=arguments[j];return c&&c[0]===b[0]&&!s.context?(f.logger.warn("It seems you are nesting recursively key: ".concat(b[0]," in key: ").concat(a[0])),null):f.translate.apply(f,b.concat([a]))},s)),s.interpolation&&this.interpolator.reset()}var q=s.postProcess||this.options.postProcess,P=typeof q=="string"?[q]:q;return i!=null&&P&&P.length&&s.applyPostProcessor!==!1&&(i=LT.handle(P,i,a,this.options&&this.options.postProcessPassResolved?qr({i18nResolved:l},s):s,this)),i}},{key:"resolve",value:function(i){var a=this,s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},l,c,f,p,h;return typeof i=="string"&&(i=[i]),i.forEach(function(m){if(!a.isValidLookup(l)){var g=a.extractFromKey(m,s),y=g.key;c=y;var k=g.namespaces;a.options.fallbackNS&&(k=k.concat(a.options.fallbackNS));var q=s.count!==void 0&&typeof s.count!="string",P=q&&!s.ordinal&&s.count===0&&a.pluralResolver.shouldUseIntlApi(),x=s.context!==void 0&&(typeof s.context=="string"||typeof s.context=="number")&&s.context!=="",b=s.lngs?s.lngs:a.languageUtils.toResolveHierarchy(s.lng||a.language,s.fallbackLng);k.forEach(function(j){a.isValidLookup(l)||(h=j,!a2["".concat(b[0],"-").concat(j)]&&a.utils&&a.utils.hasLoadedNamespace&&!a.utils.hasLoadedNamespace(h)&&(a2["".concat(b[0],"-").concat(j)]=!0,a.logger.warn('key "'.concat(c,'" for languages "').concat(b.join(", "),`" won't get resolved as namespace "`).concat(h,'" was not yet loaded'),"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")),b.forEach(function(R){if(!a.isValidLookup(l)){p=R;var V=[y];if(a.i18nFormat&&a.i18nFormat.addLookupKeys)a.i18nFormat.addLookupKeys(V,y,R,j,s);else{var N;q&&(N=a.pluralResolver.getSuffix(R,s.count,s));var H="_zero";if(q&&(V.push(y+N),P&&V.push(y+H)),x){var O="".concat(y).concat(a.options.contextSeparator).concat(s.context);V.push(O),q&&(V.push(O+N),P&&V.push(O+H))}}for(var M;M=V.pop();)a.isValidLookup(l)||(f=M,l=a.getResource(R,j,M,s))}}))})}}),{res:l,usedKey:c,exactUsedKey:f,usedLng:p,usedNS:h}}},{key:"isValidLookup",value:function(i){return i!==void 0&&!(!this.options.returnNull&&i===null)&&!(!this.options.returnEmptyString&&i==="")}},{key:"getResource",value:function(i,a,s){var l=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{};return this.i18nFormat&&this.i18nFormat.getResource?this.i18nFormat.getResource(i,a,s,l):this.resourceStore.getResource(i,a,s,l)}}],[{key:"hasDefaultValue",value:function(i){var a="defaultValue";for(var s in i)if(Object.prototype.hasOwnProperty.call(i,s)&&a===s.substring(0,a.length)&&i[s]!==void 0)return!0;return!1}}]),r}(Ba);function iy(t){return t.charAt(0).toUpperCase()+t.slice(1)}var ZE=function(){function t(e){Zn(this,t),this.options=e,this.supportedLngs=this.options.supportedLngs||!1,this.logger=mi.create("languageUtils")}return Xn(t,[{key:"getScriptPartFromCode",value:function(r){if(!r||r.indexOf("-")<0)return null;var n=r.split("-");return n.length===2||(n.pop(),n[n.length-1].toLowerCase()==="x")?null:this.formatLanguageCode(n.join("-"))}},{key:"getLanguagePartFromCode",value:function(r){if(!r||r.indexOf("-")<0)return r;var n=r.split("-");return this.formatLanguageCode(n[0])}},{key:"formatLanguageCode",value:function(r){if(typeof r=="string"&&r.indexOf("-")>-1){var n=["hans","hant","latn","cyrl","cans","mong","arab"],i=r.split("-");return this.options.lowerCaseLng?i=i.map(function(a){return a.toLowerCase()}):i.length===2?(i[0]=i[0].toLowerCase(),i[1]=i[1].toUpperCase(),n.indexOf(i[1].toLowerCase())>-1&&(i[1]=iy(i[1].toLowerCase()))):i.length===3&&(i[0]=i[0].toLowerCase(),i[1].length===2&&(i[1]=i[1].toUpperCase()),i[0]!=="sgn"&&i[2].length===2&&(i[2]=i[2].toUpperCase()),n.indexOf(i[1].toLowerCase())>-1&&(i[1]=iy(i[1].toLowerCase())),n.indexOf(i[2].toLowerCase())>-1&&(i[2]=iy(i[2].toLowerCase()))),i.join("-")}return this.options.cleanCode||this.options.lowerCaseLng?r.toLowerCase():r}},{key:"isSupportedCode",value:function(r){return(this.options.load==="languageOnly"||this.options.nonExplicitSupportedLngs)&&(r=this.getLanguagePartFromCode(r)),!this.supportedLngs||!this.supportedLngs.length||this.supportedLngs.indexOf(r)>-1}},{key:"getBestMatchFromCodes",value:function(r){var n=this;if(!r)return null;var i;return r.forEach(function(a){if(!i){var s=n.formatLanguageCode(a);(!n.options.supportedLngs||n.isSupportedCode(s))&&(i=s)}}),!i&&this.options.supportedLngs&&r.forEach(function(a){if(!i){var s=n.getLanguagePartFromCode(a);if(n.isSupportedCode(s))return i=s;i=n.options.supportedLngs.find(function(l){if(l.indexOf(s)===0)return l})}}),i||(i=this.getFallbackCodes(this.options.fallbackLng)[0]),i}},{key:"getFallbackCodes",value:function(r,n){if(!r)return[];if(typeof r=="function"&&(r=r(n)),typeof r=="string"&&(r=[r]),Object.prototype.toString.apply(r)==="[object Array]")return r;if(!n)return r.default||[];var i=r[n];return i||(i=r[this.getScriptPartFromCode(n)]),i||(i=r[this.formatLanguageCode(n)]),i||(i=r[this.getLanguagePartFromCode(n)]),i||(i=r.default),i||[]}},{key:"toResolveHierarchy",value:function(r,n){var i=this,a=this.getFallbackCodes(n||this.options.fallbackLng||[],r),s=[],l=function(f){!f||(i.isSupportedCode(f)?s.push(f):i.logger.warn("rejecting language code not found in supportedLngs: ".concat(f)))};return typeof r=="string"&&r.indexOf("-")>-1?(this.options.load!=="languageOnly"&&l(this.formatLanguageCode(r)),this.options.load!=="languageOnly"&&this.options.load!=="currentOnly"&&l(this.getScriptPartFromCode(r)),this.options.load!=="currentOnly"&&l(this.getLanguagePartFromCode(r))):typeof r=="string"&&l(this.formatLanguageCode(r)),a.forEach(function(c){s.indexOf(c)<0&&l(i.formatLanguageCode(c))}),s}}]),t}(),XE=[{lngs:["ach","ak","am","arn","br","fil","gun","ln","mfe","mg","mi","oc","pt","pt-BR","tg","tl","ti","tr","uz","wa"],nr:[1,2],fc:1},{lngs:["af","an","ast","az","bg","bn","ca","da","de","dev","el","en","eo","es","et","eu","fi","fo","fur","fy","gl","gu","ha","hi","hu","hy","ia","it","kk","kn","ku","lb","mai","ml","mn","mr","nah","nap","nb","ne","nl","nn","no","nso","pa","pap","pms","ps","pt-PT","rm","sco","se","si","so","son","sq","sv","sw","ta","te","tk","ur","yo"],nr:[1,2],fc:2},{lngs:["ay","bo","cgg","fa","ht","id","ja","jbo","ka","km","ko","ky","lo","ms","sah","su","th","tt","ug","vi","wo","zh"],nr:[1],fc:3},{lngs:["be","bs","cnr","dz","hr","ru","sr","uk"],nr:[1,2,5],fc:4},{lngs:["ar"],nr:[0,1,2,3,11,100],fc:5},{lngs:["cs","sk"],nr:[1,2,5],fc:6},{lngs:["csb","pl"],nr:[1,2,5],fc:7},{lngs:["cy"],nr:[1,2,3,8],fc:8},{lngs:["fr"],nr:[1,2],fc:9},{lngs:["ga"],nr:[1,2,3,7,11],fc:10},{lngs:["gd"],nr:[1,2,3,20],fc:11},{lngs:["is"],nr:[1,2],fc:12},{lngs:["jv"],nr:[0,1],fc:13},{lngs:["kw"],nr:[1,2,3,4],fc:14},{lngs:["lt"],nr:[1,2,10],fc:15},{lngs:["lv"],nr:[1,2,0],fc:16},{lngs:["mk"],nr:[1,2],fc:17},{lngs:["mnk"],nr:[0,1,2],fc:18},{lngs:["mt"],nr:[1,2,11,20],fc:19},{lngs:["or"],nr:[2,1],fc:2},{lngs:["ro"],nr:[1,2,20],fc:20},{lngs:["sl"],nr:[5,1,2,3],fc:21},{lngs:["he","iw"],nr:[1,2,20,21],fc:22}],QE={1:function(e){return Number(e>1)},2:function(e){return Number(e!=1)},3:function(e){return 0},4:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},5:function(e){return Number(e==0?0:e==1?1:e==2?2:e%100>=3&&e%100<=10?3:e%100>=11?4:5)},6:function(e){return Number(e==1?0:e>=2&&e<=4?1:2)},7:function(e){return Number(e==1?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},8:function(e){return Number(e==1?0:e==2?1:e!=8&&e!=11?2:3)},9:function(e){return Number(e>=2)},10:function(e){return Number(e==1?0:e==2?1:e<7?2:e<11?3:4)},11:function(e){return Number(e==1||e==11?0:e==2||e==12?1:e>2&&e<20?2:3)},12:function(e){return Number(e%10!=1||e%100==11)},13:function(e){return Number(e!==0)},14:function(e){return Number(e==1?0:e==2?1:e==3?2:3)},15:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&(e%100<10||e%100>=20)?1:2)},16:function(e){return Number(e%10==1&&e%100!=11?0:e!==0?1:2)},17:function(e){return Number(e==1||e%10==1&&e%100!=11?0:1)},18:function(e){return Number(e==0?0:e==1?1:2)},19:function(e){return Number(e==1?0:e==0||e%100>1&&e%100<11?1:e%100>10&&e%100<20?2:3)},20:function(e){return Number(e==1?0:e==0||e%100>0&&e%100<20?1:2)},21:function(e){return Number(e%100==1?1:e%100==2?2:e%100==3||e%100==4?3:0)},22:function(e){return Number(e==1?0:e==2?1:(e<0||e>10)&&e%10==0?2:3)}},_E=["v1","v2","v3"],o2={zero:0,one:1,two:2,few:3,many:4,other:5};function $E(){var t={};return XE.forEach(function(e){e.lngs.forEach(function(r){t[r]={numbers:e.nr,plurals:QE[e.fc]}})}),t}var e9=function(){function t(e){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};Zn(this,t),this.languageUtils=e,this.options=r,this.logger=mi.create("pluralResolver"),(!this.options.compatibilityJSON||this.options.compatibilityJSON==="v4")&&(typeof Intl=="undefined"||!Intl.PluralRules)&&(this.options.compatibilityJSON="v3",this.logger.error("Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.")),this.rules=$E()}return Xn(t,[{key:"addRule",value:function(r,n){this.rules[r]=n}},{key:"getRule",value:function(r){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(this.shouldUseIntlApi())try{return new Intl.PluralRules(r,{type:n.ordinal?"ordinal":"cardinal"})}catch{return}return this.rules[r]||this.rules[this.languageUtils.getLanguagePartFromCode(r)]}},{key:"needsPlural",value:function(r){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},i=this.getRule(r,n);return this.shouldUseIntlApi()?i&&i.resolvedOptions().pluralCategories.length>1:i&&i.numbers.length>1}},{key:"getPluralFormsOfKey",value:function(r,n){var i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};return this.getSuffixes(r,i).map(function(a){return"".concat(n).concat(a)})}},{key:"getSuffixes",value:function(r){var n=this,i=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},a=this.getRule(r,i);return a?this.shouldUseIntlApi()?a.resolvedOptions().pluralCategories.sort(function(s,l){return o2[s]-o2[l]}).map(function(s){return"".concat(n.options.prepend).concat(s)}):a.numbers.map(function(s){return n.getSuffix(r,s,i)}):[]}},{key:"getSuffix",value:function(r,n){var i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},a=this.getRule(r,i);return a?this.shouldUseIntlApi()?"".concat(this.options.prepend).concat(a.select(n)):this.getSuffixRetroCompatible(a,n):(this.logger.warn("no plural rule found for: ".concat(r)),"")}},{key:"getSuffixRetroCompatible",value:function(r,n){var i=this,a=r.noAbs?r.plurals(n):r.plurals(Math.abs(n)),s=r.numbers[a];this.options.simplifyPluralSuffix&&r.numbers.length===2&&r.numbers[0]===1&&(s===2?s="plural":s===1&&(s=""));var l=function(){return i.options.prepend&&s.toString()?i.options.prepend+s.toString():s.toString()};return this.options.compatibilityJSON==="v1"?s===1?"":typeof s=="number"?"_plural_".concat(s.toString()):l():this.options.compatibilityJSON==="v2"||this.options.simplifyPluralSuffix&&r.numbers.length===2&&r.numbers[0]===1?l():this.options.prepend&&a.toString()?this.options.prepend+a.toString():a.toString()}},{key:"shouldUseIntlApi",value:function(){return!_E.includes(this.options.compatibilityJSON)}}]),t}();function l2(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter(function(i){return Object.getOwnPropertyDescriptor(t,i).enumerable})),r.push.apply(r,n)}return r}function zn(t){for(var e=1;e<arguments.length;e++){var r=arguments[e]!=null?arguments[e]:{};e%2?l2(Object(r),!0).forEach(function(n){Bn(t,n,r[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):l2(Object(r)).forEach(function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(r,n))})}return t}var t9=function(){function t(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};Zn(this,t),this.logger=mi.create("interpolator"),this.options=e,this.format=e.interpolation&&e.interpolation.format||function(r){return r},this.init(e)}return Xn(t,[{key:"init",value:function(){var r=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};r.interpolation||(r.interpolation={escapeValue:!0});var n=r.interpolation;this.escape=n.escape!==void 0?n.escape:FE,this.escapeValue=n.escapeValue!==void 0?n.escapeValue:!0,this.useRawValueToEscape=n.useRawValueToEscape!==void 0?n.useRawValueToEscape:!1,this.prefix=n.prefix?So(n.prefix):n.prefixEscaped||"{{",this.suffix=n.suffix?So(n.suffix):n.suffixEscaped||"}}",this.formatSeparator=n.formatSeparator?n.formatSeparator:n.formatSeparator||",",this.unescapePrefix=n.unescapeSuffix?"":n.unescapePrefix||"-",this.unescapeSuffix=this.unescapePrefix?"":n.unescapeSuffix||"",this.nestingPrefix=n.nestingPrefix?So(n.nestingPrefix):n.nestingPrefixEscaped||So("$t("),this.nestingSuffix=n.nestingSuffix?So(n.nestingSuffix):n.nestingSuffixEscaped||So(")"),this.nestingOptionsSeparator=n.nestingOptionsSeparator?n.nestingOptionsSeparator:n.nestingOptionsSeparator||",",this.maxReplaces=n.maxReplaces?n.maxReplaces:1e3,this.alwaysFormat=n.alwaysFormat!==void 0?n.alwaysFormat:!1,this.resetRegExp()}},{key:"reset",value:function(){this.options&&this.init(this.options)}},{key:"resetRegExp",value:function(){var r="".concat(this.prefix,"(.+?)").concat(this.suffix);this.regexp=new RegExp(r,"g");var n="".concat(this.prefix).concat(this.unescapePrefix,"(.+?)").concat(this.unescapeSuffix).concat(this.suffix);this.regexpUnescape=new RegExp(n,"g");var i="".concat(this.nestingPrefix,"(.+?)").concat(this.nestingSuffix);this.nestingRegexp=new RegExp(i,"g")}},{key:"interpolate",value:function(r,n,i,a){var s=this,l,c,f,p=this.options&&this.options.interpolation&&this.options.interpolation.defaultVariables||{};function h(q){return q.replace(/\$/g,"$$$$")}var m=function(P){if(P.indexOf(s.formatSeparator)<0){var x=r2(n,p,P);return s.alwaysFormat?s.format(x,void 0,i,zn(zn(zn({},a),n),{},{interpolationkey:P})):x}var b=P.split(s.formatSeparator),j=b.shift().trim(),R=b.join(s.formatSeparator).trim();return s.format(r2(n,p,j),R,i,zn(zn(zn({},a),n),{},{interpolationkey:j}))};this.resetRegExp();var g=a&&a.missingInterpolationHandler||this.options.missingInterpolationHandler,y=a&&a.interpolation&&a.interpolation.skipOnVariables!==void 0?a.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables,k=[{regex:this.regexpUnescape,safeValue:function(P){return h(P)}},{regex:this.regexp,safeValue:function(P){return s.escapeValue?h(s.escape(P)):h(P)}}];return k.forEach(function(q){for(f=0;l=q.regex.exec(r);){var P=l[1].trim();if(c=m(P),c===void 0)if(typeof g=="function"){var x=g(r,l,a);c=typeof x=="string"?x:""}else if(a&&a.hasOwnProperty(P))c="";else if(y){c=l[0];continue}else s.logger.warn("missed to pass in variable ".concat(P," for interpolating ").concat(r)),c="";else typeof c!="string"&&!s.useRawValueToEscape&&(c=e2(c));var b=q.safeValue(c);if(r=r.replace(l[0],b),y?(q.regex.lastIndex+=c.length,q.regex.lastIndex-=l[0].length):q.regex.lastIndex=0,f++,f>=s.maxReplaces)break}}),r}},{key:"nest",value:function(r,n){var i=this,a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},s,l,c=zn({},a);c.applyPostProcessor=!1,delete c.defaultValue;function f(g,y){var k=this.nestingOptionsSeparator;if(g.indexOf(k)<0)return g;var q=g.split(new RegExp("".concat(k,"[ ]*{"))),P="{".concat(q[1]);g=q[0],P=this.interpolate(P,c),P=P.replace(/'/g,'"');try{c=JSON.parse(P),y&&(c=zn(zn({},y),c))}catch(x){return this.logger.warn("failed parsing options string in nesting for key ".concat(g),x),"".concat(g).concat(k).concat(P)}return delete c.defaultValue,g}for(;s=this.nestingRegexp.exec(r);){var p=[],h=!1;if(s[0].indexOf(this.formatSeparator)!==-1&&!/{.*}/.test(s[1])){var m=s[1].split(this.formatSeparator).map(function(g){return g.trim()});s[1]=m.shift(),p=m,h=!0}if(l=n(f.call(this,s[1].trim(),c),c),l&&s[0]===r&&typeof l!="string")return l;typeof l!="string"&&(l=e2(l)),l||(this.logger.warn("missed to resolve ".concat(s[1]," for nesting ").concat(r)),l=""),h&&(l=p.reduce(function(g,y){return i.format(g,y,a.lng,zn(zn({},a),{},{interpolationkey:s[1].trim()}))},l.trim())),r=r.replace(s[0],l),this.regexp.lastIndex=0}return r}}]),t}();function u2(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter(function(i){return Object.getOwnPropertyDescriptor(t,i).enumerable})),r.push.apply(r,n)}return r}function Aa(t){for(var e=1;e<arguments.length;e++){var r=arguments[e]!=null?arguments[e]:{};e%2?u2(Object(r),!0).forEach(function(n){Bn(t,n,r[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):u2(Object(r)).forEach(function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(r,n))})}return t}function r9(t){var e=t.toLowerCase().trim(),r={};if(t.indexOf("(")>-1){var n=t.split("(");e=n[0].toLowerCase().trim();var i=n[1].substring(0,n[1].length-1);if(e==="currency"&&i.indexOf(":")<0)r.currency||(r.currency=i.trim());else if(e==="relativetime"&&i.indexOf(":")<0)r.range||(r.range=i.trim());else{var a=i.split(";");a.forEach(function(s){if(!!s){var l=s.split(":"),c=HE(l),f=c[0],p=c.slice(1),h=p.join(":").trim().replace(/^'+|'+$/g,"");r[f.trim()]||(r[f.trim()]=h),h==="false"&&(r[f.trim()]=!1),h==="true"&&(r[f.trim()]=!0),isNaN(h)||(r[f.trim()]=parseInt(h,10))}})}}return{formatName:e,formatOptions:r}}var n9=function(){function t(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};Zn(this,t),this.logger=mi.create("formatter"),this.options=e,this.formats={number:function(n,i,a){return new Intl.NumberFormat(i,a).format(n)},currency:function(n,i,a){return new Intl.NumberFormat(i,Aa(Aa({},a),{},{style:"currency"})).format(n)},datetime:function(n,i,a){return new Intl.DateTimeFormat(i,Aa({},a)).format(n)},relativetime:function(n,i,a){return new Intl.RelativeTimeFormat(i,Aa({},a)).format(n,a.range||"day")},list:function(n,i,a){return new Intl.ListFormat(i,Aa({},a)).format(n)}},this.init(e)}return Xn(t,[{key:"init",value:function(r){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{interpolation:{}},i=n.interpolation;this.formatSeparator=i.formatSeparator?i.formatSeparator:i.formatSeparator||","}},{key:"add",value:function(r,n){this.formats[r.toLowerCase().trim()]=n}},{key:"format",value:function(r,n,i,a){var s=this,l=n.split(this.formatSeparator),c=l.reduce(function(f,p){var h=r9(p),m=h.formatName,g=h.formatOptions;if(s.formats[m]){var y=f;try{var k=a&&a.formatParams&&a.formatParams[a.interpolationkey]||{},q=k.locale||k.lng||a.locale||a.lng||i;y=s.formats[m](f,q,Aa(Aa(Aa({},g),a),k))}catch(P){s.logger.warn(P)}return y}else s.logger.warn("there was no format function for ".concat(m));return f},r);return c}}]),t}();function c2(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter(function(i){return Object.getOwnPropertyDescriptor(t,i).enumerable})),r.push.apply(r,n)}return r}function f2(t){for(var e=1;e<arguments.length;e++){var r=arguments[e]!=null?arguments[e]:{};e%2?c2(Object(r),!0).forEach(function(n){Bn(t,n,r[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):c2(Object(r)).forEach(function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(r,n))})}return t}function i9(t){var e=a9();return function(){var n=ki(t),i;if(e){var a=ki(this).constructor;i=Reflect.construct(n,arguments,a)}else i=n.apply(this,arguments);return Tc(this,i)}}function a9(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}function s9(t,e){t.pending[e]!==void 0&&(delete t.pending[e],t.pendingCount--)}var o9=function(t){Wh(r,t);var e=i9(r);function r(n,i,a){var s,l=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{};return Zn(this,r),s=e.call(this),Uh&&Ba.call(Gi(s)),s.backend=n,s.store=i,s.services=a,s.languageUtils=a.languageUtils,s.options=l,s.logger=mi.create("backendConnector"),s.waitingReads=[],s.maxParallelReads=l.maxParallelReads||10,s.readingCalls=0,s.state={},s.queue=[],s.backend&&s.backend.init&&s.backend.init(a,l.backend,l),s}return Xn(r,[{key:"queueLoad",value:function(i,a,s,l){var c=this,f={},p={},h={},m={};return i.forEach(function(g){var y=!0;a.forEach(function(k){var q="".concat(g,"|").concat(k);!s.reload&&c.store.hasResourceBundle(g,k)?c.state[q]=2:c.state[q]<0||(c.state[q]===1?p[q]===void 0&&(p[q]=!0):(c.state[q]=1,y=!1,p[q]===void 0&&(p[q]=!0),f[q]===void 0&&(f[q]=!0),m[k]===void 0&&(m[k]=!0)))}),y||(h[g]=!0)}),(Object.keys(f).length||Object.keys(p).length)&&this.queue.push({pending:p,pendingCount:Object.keys(p).length,loaded:{},errors:[],callback:l}),{toLoad:Object.keys(f),pending:Object.keys(p),toLoadLanguages:Object.keys(h),toLoadNamespaces:Object.keys(m)}}},{key:"loaded",value:function(i,a,s){var l=i.split("|"),c=l[0],f=l[1];a&&this.emit("failedLoading",c,f,a),s&&this.store.addResourceBundle(c,f,s),this.state[i]=a?-1:2;var p={};this.queue.forEach(function(h){YE(h.loaded,[c],f),s9(h,i),a&&h.errors.push(a),h.pendingCount===0&&!h.done&&(Object.keys(h.loaded).forEach(function(m){p[m]||(p[m]={});var g=h.loaded[m];g.length&&g.forEach(function(y){p[m][y]===void 0&&(p[m][y]=!0)})}),h.done=!0,h.errors.length?h.callback(h.errors):h.callback())}),this.emit("loaded",p),this.queue=this.queue.filter(function(h){return!h.done})}},{key:"read",value:function(i,a,s){var l=this,c=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,f=arguments.length>4&&arguments[4]!==void 0?arguments[4]:350,p=arguments.length>5?arguments[5]:void 0;if(!i.length)return p(null,{});if(this.readingCalls>=this.maxParallelReads){this.waitingReads.push({lng:i,ns:a,fcName:s,tried:c,wait:f,callback:p});return}return this.readingCalls++,this.backend[s](i,a,function(h,m){if(h&&m&&c<5){setTimeout(function(){l.read.call(l,i,a,s,c+1,f*2,p)},f);return}if(l.readingCalls--,l.waitingReads.length>0){var g=l.waitingReads.shift();l.read(g.lng,g.ns,g.fcName,g.tried,g.wait,g.callback)}p(h,m)})}},{key:"prepareLoading",value:function(i,a){var s=this,l=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},c=arguments.length>3?arguments[3]:void 0;if(!this.backend)return this.logger.warn("No backend was added via i18next.use. Will not load resources."),c&&c();typeof i=="string"&&(i=this.languageUtils.toResolveHierarchy(i)),typeof a=="string"&&(a=[a]);var f=this.queueLoad(i,a,l,c);if(!f.toLoad.length)return f.pending.length||c(),null;f.toLoad.forEach(function(p){s.loadOne(p)})}},{key:"load",value:function(i,a,s){this.prepareLoading(i,a,{},s)}},{key:"reload",value:function(i,a,s){this.prepareLoading(i,a,{reload:!0},s)}},{key:"loadOne",value:function(i){var a=this,s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"",l=i.split("|"),c=l[0],f=l[1];this.read(c,f,"read",void 0,void 0,function(p,h){p&&a.logger.warn("".concat(s,"loading namespace ").concat(f," for language ").concat(c," failed"),p),!p&&h&&a.logger.log("".concat(s,"loaded namespace ").concat(f," for language ").concat(c),h),a.loaded(i,p,h)})}},{key:"saveMissing",value:function(i,a,s,l,c){var f=arguments.length>5&&arguments[5]!==void 0?arguments[5]:{};if(this.services.utils&&this.services.utils.hasLoadedNamespace&&!this.services.utils.hasLoadedNamespace(a)){this.logger.warn('did not save key "'.concat(s,'" as the namespace "').concat(a,'" was not yet loaded'),"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");return}s==null||s===""||(this.backend&&this.backend.create&&this.backend.create(i,a,s,l,null,f2(f2({},f),{},{isUpdate:c})),!(!i||!i[0])&&this.store.addResource(i[0],a,s,l))}}]),r}(Ba);function l9(){return{debug:!1,initImmediate:!0,ns:["translation"],defaultNS:["translation"],fallbackLng:["dev"],fallbackNS:!1,supportedLngs:!1,nonExplicitSupportedLngs:!1,load:"all",preload:!1,simplifyPluralSuffix:!0,keySeparator:".",nsSeparator:":",pluralSeparator:"_",contextSeparator:"_",partialBundledLanguages:!1,saveMissing:!1,updateMissing:!1,saveMissingTo:"fallback",saveMissingPlurals:!0,missingKeyHandler:!1,missingInterpolationHandler:!1,postProcess:!1,postProcessPassResolved:!1,returnNull:!0,returnEmptyString:!0,returnObjects:!1,joinArrays:!1,returnedObjectHandler:!1,parseMissingKeyHandler:!1,appendNamespaceToMissingKey:!1,appendNamespaceToCIMode:!1,overloadTranslationOptionHandler:function(e){var r={};if(Ca(e[1])==="object"&&(r=e[1]),typeof e[1]=="string"&&(r.defaultValue=e[1]),typeof e[2]=="string"&&(r.tDescription=e[2]),Ca(e[2])==="object"||Ca(e[3])==="object"){var n=e[3]||e[2];Object.keys(n).forEach(function(i){r[i]=n[i]})}return r},interpolation:{escapeValue:!0,format:function(e,r,n,i){return e},prefix:"{{",suffix:"}}",formatSeparator:",",unescapePrefix:"-",nestingPrefix:"$t(",nestingSuffix:")",nestingOptionsSeparator:",",maxReplaces:1e3,skipOnVariables:!0}}}function d2(t){return typeof t.ns=="string"&&(t.ns=[t.ns]),typeof t.fallbackLng=="string"&&(t.fallbackLng=[t.fallbackLng]),typeof t.fallbackNS=="string"&&(t.fallbackNS=[t.fallbackNS]),t.supportedLngs&&t.supportedLngs.indexOf("cimode")<0&&(t.supportedLngs=t.supportedLngs.concat(["cimode"])),t}function p2(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter(function(i){return Object.getOwnPropertyDescriptor(t,i).enumerable})),r.push.apply(r,n)}return r}function li(t){for(var e=1;e<arguments.length;e++){var r=arguments[e]!=null?arguments[e]:{};e%2?p2(Object(r),!0).forEach(function(n){Bn(t,n,r[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):p2(Object(r)).forEach(function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(r,n))})}return t}function u9(t){var e=c9();return function(){var n=ki(t),i;if(e){var a=ki(this).constructor;i=Reflect.construct(n,arguments,a)}else i=n.apply(this,arguments);return Tc(this,i)}}function c9(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}function fd(){}function f9(t){var e=Object.getOwnPropertyNames(Object.getPrototypeOf(t));e.forEach(function(r){typeof t[r]=="function"&&(t[r]=t[r].bind(t))})}var bp=function(t){Wh(r,t);var e=u9(r);function r(){var n,i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},a=arguments.length>1?arguments[1]:void 0;if(Zn(this,r),n=e.call(this),Uh&&Ba.call(Gi(n)),n.options=d2(i),n.services={},n.logger=mi,n.modules={external:[]},f9(Gi(n)),a&&!n.isInitialized&&!i.isClone){if(!n.options.initImmediate)return n.init(i,a),Tc(n,Gi(n));setTimeout(function(){n.init(i,a)},0)}return n}return Xn(r,[{key:"init",value:function(){var i=this,a=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},s=arguments.length>1?arguments[1]:void 0;typeof a=="function"&&(s=a,a={}),!a.defaultNS&&a.ns&&(typeof a.ns=="string"?a.defaultNS=a.ns:a.ns.indexOf("translation")<0&&(a.defaultNS=a.ns[0]));var l=l9();this.options=li(li(li({},l),this.options),d2(a)),this.options.compatibilityAPI!=="v1"&&(this.options.interpolation=li(li({},l.interpolation),this.options.interpolation)),a.keySeparator!==void 0&&(this.options.userDefinedKeySeparator=a.keySeparator),a.nsSeparator!==void 0&&(this.options.userDefinedNsSeparator=a.nsSeparator);function c(P){return P?typeof P=="function"?new P:P:null}if(!this.options.isClone){this.modules.logger?mi.init(c(this.modules.logger),this.options):mi.init(null,this.options);var f;this.modules.formatter?f=this.modules.formatter:typeof Intl!="undefined"&&(f=n9);var p=new ZE(this.options);this.store=new GE(this.options.resources,this.options);var h=this.services;h.logger=mi,h.resourceStore=this.store,h.languageUtils=p,h.pluralResolver=new e9(p,{prepend:this.options.pluralSeparator,compatibilityJSON:this.options.compatibilityJSON,simplifyPluralSuffix:this.options.simplifyPluralSuffix}),f&&(!this.options.interpolation.format||this.options.interpolation.format===l.interpolation.format)&&(h.formatter=c(f),h.formatter.init(h,this.options),this.options.interpolation.format=h.formatter.format.bind(h.formatter)),h.interpolator=new t9(this.options),h.utils={hasLoadedNamespace:this.hasLoadedNamespace.bind(this)},h.backendConnector=new o9(c(this.modules.backend),h.resourceStore,h,this.options),h.backendConnector.on("*",function(P){for(var x=arguments.length,b=new Array(x>1?x-1:0),j=1;j<x;j++)b[j-1]=arguments[j];i.emit.apply(i,[P].concat(b))}),this.modules.languageDetector&&(h.languageDetector=c(this.modules.languageDetector),h.languageDetector.init(h,this.options.detection,this.options)),this.modules.i18nFormat&&(h.i18nFormat=c(this.modules.i18nFormat),h.i18nFormat.init&&h.i18nFormat.init(this)),this.translator=new s2(this.services,this.options),this.translator.on("*",function(P){for(var x=arguments.length,b=new Array(x>1?x-1:0),j=1;j<x;j++)b[j-1]=arguments[j];i.emit.apply(i,[P].concat(b))}),this.modules.external.forEach(function(P){P.init&&P.init(i)})}if(this.format=this.options.interpolation.format,s||(s=fd),this.options.fallbackLng&&!this.services.languageDetector&&!this.options.lng){var m=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);m.length>0&&m[0]!=="dev"&&(this.options.lng=m[0])}!this.services.languageDetector&&!this.options.lng&&this.logger.warn("init: no languageDetector is used and no lng is defined");var g=["getResource","hasResourceBundle","getResourceBundle","getDataByLanguage"];g.forEach(function(P){i[P]=function(){var x;return(x=i.store)[P].apply(x,arguments)}});var y=["addResource","addResources","addResourceBundle","removeResourceBundle"];y.forEach(function(P){i[P]=function(){var x;return(x=i.store)[P].apply(x,arguments),i}});var k=tu(),q=function(){var x=function(j,R){i.isInitialized&&!i.initializedStoreOnce&&i.logger.warn("init: i18next is already initialized. You should call init just once!"),i.isInitialized=!0,i.options.isClone||i.logger.log("initialized",i.options),i.emit("initialized",i.options),k.resolve(R),s(j,R)};if(i.languages&&i.options.compatibilityAPI!=="v1"&&!i.isInitialized)return x(null,i.t.bind(i));i.changeLanguage(i.options.lng,x)};return this.options.resources||!this.options.initImmediate?q():setTimeout(q,0),k}},{key:"loadResources",value:function(i){var a=this,s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:fd,l=s,c=typeof i=="string"?i:this.language;if(typeof i=="function"&&(l=i),!this.options.resources||this.options.partialBundledLanguages){if(c&&c.toLowerCase()==="cimode")return l();var f=[],p=function(g){if(!!g){var y=a.services.languageUtils.toResolveHierarchy(g);y.forEach(function(k){f.indexOf(k)<0&&f.push(k)})}};if(c)p(c);else{var h=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);h.forEach(function(m){return p(m)})}this.options.preload&&this.options.preload.forEach(function(m){return p(m)}),this.services.backendConnector.load(f,this.options.ns,function(m){!m&&!a.resolvedLanguage&&a.language&&a.setResolvedLanguage(a.language),l(m)})}else l(null)}},{key:"reloadResources",value:function(i,a,s){var l=tu();return i||(i=this.languages),a||(a=this.options.ns),s||(s=fd),this.services.backendConnector.reload(i,a,function(c){l.resolve(),s(c)}),l}},{key:"use",value:function(i){if(!i)throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");if(!i.type)throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");return i.type==="backend"&&(this.modules.backend=i),(i.type==="logger"||i.log&&i.warn&&i.error)&&(this.modules.logger=i),i.type==="languageDetector"&&(this.modules.languageDetector=i),i.type==="i18nFormat"&&(this.modules.i18nFormat=i),i.type==="postProcessor"&&LT.addPostProcessor(i),i.type==="formatter"&&(this.modules.formatter=i),i.type==="3rdParty"&&this.modules.external.push(i),this}},{key:"setResolvedLanguage",value:function(i){if(!(!i||!this.languages)&&!(["cimode","dev"].indexOf(i)>-1))for(var a=0;a<this.languages.length;a++){var s=this.languages[a];if(!(["cimode","dev"].indexOf(s)>-1)&&this.store.hasLanguageSomeTranslations(s)){this.resolvedLanguage=s;break}}}},{key:"changeLanguage",value:function(i,a){var s=this;this.isLanguageChangingTo=i;var l=tu();this.emit("languageChanging",i);var c=function(m){s.language=m,s.languages=s.services.languageUtils.toResolveHierarchy(m),s.resolvedLanguage=void 0,s.setResolvedLanguage(m)},f=function(m,g){g?(c(g),s.translator.changeLanguage(g),s.isLanguageChangingTo=void 0,s.emit("languageChanged",g),s.logger.log("languageChanged",g)):s.isLanguageChangingTo=void 0,l.resolve(function(){return s.t.apply(s,arguments)}),a&&a(m,function(){return s.t.apply(s,arguments)})},p=function(m){!i&&!m&&s.services.languageDetector&&(m=[]);var g=typeof m=="string"?m:s.services.languageUtils.getBestMatchFromCodes(m);g&&(s.language||c(g),s.translator.language||s.translator.changeLanguage(g),s.services.languageDetector&&s.services.languageDetector.cacheUserLanguage(g)),s.loadResources(g,function(y){f(y,g)})};return!i&&this.services.languageDetector&&!this.services.languageDetector.async?p(this.services.languageDetector.detect()):!i&&this.services.languageDetector&&this.services.languageDetector.async?this.services.languageDetector.detect(p):p(i),l}},{key:"getFixedT",value:function(i,a,s){var l=this,c=function f(p,h){var m;if(Ca(h)!=="object"){for(var g=arguments.length,y=new Array(g>2?g-2:0),k=2;k<g;k++)y[k-2]=arguments[k];m=l.options.overloadTranslationOptionHandler([p,h].concat(y))}else m=li({},h);m.lng=m.lng||f.lng,m.lngs=m.lngs||f.lngs,m.ns=m.ns||f.ns;var q=l.options.keySeparator||".",P=s?"".concat(s).concat(q).concat(p):p;return l.t(P,m)};return typeof i=="string"?c.lng=i:c.lngs=i,c.ns=a,c.keyPrefix=s,c}},{key:"t",value:function(){var i;return this.translator&&(i=this.translator).translate.apply(i,arguments)}},{key:"exists",value:function(){var i;return this.translator&&(i=this.translator).exists.apply(i,arguments)}},{key:"setDefaultNamespace",value:function(i){this.options.defaultNS=i}},{key:"hasLoadedNamespace",value:function(i){var a=this,s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(!this.isInitialized)return this.logger.warn("hasLoadedNamespace: i18next was not initialized",this.languages),!1;if(!this.languages||!this.languages.length)return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty",this.languages),!1;var l=this.resolvedLanguage||this.languages[0],c=this.options?this.options.fallbackLng:!1,f=this.languages[this.languages.length-1];if(l.toLowerCase()==="cimode")return!0;var p=function(g,y){var k=a.services.backendConnector.state["".concat(g,"|").concat(y)];return k===-1||k===2};if(s.precheck){var h=s.precheck(this,p);if(h!==void 0)return h}return!!(this.hasResourceBundle(l,i)||!this.services.backendConnector.backend||this.options.resources&&!this.options.partialBundledLanguages||p(l,i)&&(!c||p(f,i)))}},{key:"loadNamespaces",value:function(i,a){var s=this,l=tu();return this.options.ns?(typeof i=="string"&&(i=[i]),i.forEach(function(c){s.options.ns.indexOf(c)<0&&s.options.ns.push(c)}),this.loadResources(function(c){l.resolve(),a&&a(c)}),l):(a&&a(),Promise.resolve())}},{key:"loadLanguages",value:function(i,a){var s=tu();typeof i=="string"&&(i=[i]);var l=this.options.preload||[],c=i.filter(function(f){return l.indexOf(f)<0});return c.length?(this.options.preload=l.concat(c),this.loadResources(function(f){s.resolve(),a&&a(f)}),s):(a&&a(),Promise.resolve())}},{key:"dir",value:function(i){if(i||(i=this.resolvedLanguage||(this.languages&&this.languages.length>0?this.languages[0]:this.language)),!i)return"rtl";var a=["ar","shu","sqr","ssh","xaa","yhd","yud","aao","abh","abv","acm","acq","acw","acx","acy","adf","ads","aeb","aec","afb","ajp","apc","apd","arb","arq","ars","ary","arz","auz","avl","ayh","ayl","ayn","ayp","bbz","pga","he","iw","ps","pbt","pbu","pst","prp","prd","ug","ur","ydd","yds","yih","ji","yi","hbo","men","xmn","fa","jpr","peo","pes","prs","dv","sam","ckb"];return a.indexOf(this.services.languageUtils.getLanguagePartFromCode(i))>-1||i.toLowerCase().indexOf("-arab")>1?"rtl":"ltr"}},{key:"cloneInstance",value:function(){var i=this,a=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:fd,l=li(li(li({},this.options),a),{isClone:!0}),c=new r(l),f=["store","services","language"];return f.forEach(function(p){c[p]=i[p]}),c.services=li({},this.services),c.services.utils={hasLoadedNamespace:c.hasLoadedNamespace.bind(c)},c.translator=new s2(c.services,c.options),c.translator.on("*",function(p){for(var h=arguments.length,m=new Array(h>1?h-1:0),g=1;g<h;g++)m[g-1]=arguments[g];c.emit.apply(c,[p].concat(m))}),c.init(l,s),c.translator.options=c.options,c.translator.backendConnector.services.utils={hasLoadedNamespace:c.hasLoadedNamespace.bind(c)},c}},{key:"toJSON",value:function(){return{options:this.options,store:this.store,language:this.language,languages:this.languages,resolvedLanguage:this.resolvedLanguage}}}]),r}(Ba);Bn(bp,"createInstance",function(){var t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},e=arguments.length>1?arguments[1]:void 0;return new bp(t,e)});var Pr=bp.createInstance();Pr.createInstance=bp.createInstance;Pr.createInstance;Pr.init;Pr.loadResources;Pr.reloadResources;Pr.use;Pr.changeLanguage;Pr.getFixedT;Pr.t;Pr.exists;Pr.setDefaultNamespace;Pr.hasLoadedNamespace;Pr.loadNamespaces;Pr.loadLanguages;const d9={newThrow:"Neuer Wurf",imagePreview:{title:"Bilder"}},p9={newThrow:"New Throw",imagePreview:{title:"Images"}};Pr.use(KO).init({fallbackLng:"de",fallbackNS:["common"],debug:!1,interpolation:{escapeValue:!1},resources:{de:{common:d9},en:{common:p9}}});const h9="",m9="",v9="",y9="";function g9(t,e){const r=[];for(let n=0;n<O5;n++){const i=A9(n,t,e);r.push({x:i.x,y:i.y})}return r}function A9(t,e,r,n=40){switch(t%O5){case 0:return{x:.5*e,y:n};case 1:return{x:e-n,y:.5*r};case 2:return{x:.5*e,y:r-n};case 3:return{x:n,y:.5*r};default:return{x:.5*e,y:.5*r}}}function S9(t,e){const r=[];for(let n=0;n<Th;n++){const i=x9(n,t,e);r.push({x:i.x,y:i.y})}return r}function x9(t,e,r,n=40){switch(t){case 0:return{x:.5*e,y:.5*r+n};case 1:return{x:.5*e+n,y:.5*r-n};case 2:return{x:.5*e-n,y:.5*r-n};default:return{x:.5*e,y:.5*r}}}const P9=[h9,m9,v9,y9];function w9(t){const e=[];for(let r=0;r<t;r++)e.push(!1);return e}function k9(t){const e=[];for(let r=0;r<t;r++){const n=b9(r);e.push(n)}return e}function b9(t){const e=q9();return{id:t,playerName:"Tim",throws:e}}function q9(){const t=[];for(let e=0;e<3;e++){const r=T9(e+1);t.push(r)}return t}function T9(t){const e=g9(Dv,Gv),r=S9(Dv,Gv);return{id:t,score:t*13,image:P9[t],imageResolution:{x:Dv,y:Gv},imageLabel:{planeCoordinates:e,dartPoints:r}}}var j9=Object.create;function Vg(){var t=j9(null);return t.__=void 0,delete t.__,t}var NT=function(e,r,n){this.path=e,this.matcher=r,this.delegate=n};NT.prototype.to=function(e,r){var n=this.delegate;if(n&&n.willAddRoute&&(e=n.willAddRoute(this.matcher.target,e)),this.matcher.add(this.path,e),r){if(r.length===0)throw new Error("You must have an argument in the function passed to `to`");this.matcher.addChild(this.path,e,r,this.delegate)}};var qp=function(e){this.routes=Vg(),this.children=Vg(),this.target=e};qp.prototype.add=function(e,r){this.routes[e]=r};qp.prototype.addChild=function(e,r,n,i){var a=new qp(r);this.children[e]=a;var s=N1(e,a,i);i&&i.contextEntered&&i.contextEntered(r,s),n(s)};function N1(t,e,r){function n(i,a){var s=t+i;if(a)a(N1(s,e,r));else return new NT(s,e,r)}return n}function R9(t,e,r){for(var n=0,i=0;i<t.length;i++)n+=t[i].path.length;e=e.substr(n);var a={path:e,handler:r};t.push(a)}function WT(t,e,r,n){for(var i=e.routes,a=Object.keys(i),s=0;s<a.length;s++){var l=a[s],c=t.slice();R9(c,l,i[l]);var f=e.children[l];f?WT(c,f,r,n):r.call(n,c)}}var V9=function(t,e){var r=new qp;t(N1("",r,this.delegate)),WT([],r,function(n){e?e(this,n):this.add(n)},this)};function UT(t){return t.split("/").map(W1).join("/")}var L9=/%|\//g;function W1(t){return t.length<3||t.indexOf("%")===-1?t:decodeURIComponent(t).replace(L9,encodeURIComponent)}var N9=/%(?:2(?:4|6|B|C)|3(?:B|D|A)|40)/g;function HT(t){return encodeURIComponent(t).replace(N9,decodeURIComponent)}var W9=/(\/|\.|\*|\+|\?|\||\(|\)|\[|\]|\{|\}|\\)/g,Hh=Array.isArray,U9=Object.prototype.hasOwnProperty;function MT(t,e){if(typeof t!="object"||t===null)throw new Error("You must pass an object as the second argument to `generate`.");if(!U9.call(t,e))throw new Error("You must provide param `"+e+"` to `generate`.");var r=t[e],n=typeof r=="string"?r:""+r;if(n.length===0)throw new Error("You must provide a param `"+e+"`.");return n}var jc=[];jc[0]=function(t,e){for(var r=e,n=t.value,i=0;i<n.length;i++){var a=n.charCodeAt(i);r=r.put(a,!1,!1)}return r};jc[1]=function(t,e){return e.put(47,!0,!0)};jc[2]=function(t,e){return e.put(-1,!1,!0)};jc[4]=function(t,e){return e};var Rc=[];Rc[0]=function(t){return t.value.replace(W9,"\\$1")};Rc[1]=function(){return"([^/]+)"};Rc[2]=function(){return"(.+)"};Rc[4]=function(){return""};var Vc=[];Vc[0]=function(t){return t.value};Vc[1]=function(t,e){var r=MT(e,t.value);return Lt.ENCODE_AND_DECODE_PATH_SEGMENTS?HT(r):r};Vc[2]=function(t,e){return MT(e,t.value)};Vc[4]=function(){return""};var h2=Object.freeze({}),Tp=Object.freeze([]);function H9(t,e,r){e.length>0&&e.charCodeAt(0)===47&&(e=e.substr(1));for(var n=e.split("/"),i=void 0,a=void 0,s=0;s<n.length;s++){var l=n[s],c=0,f=0;l===""?f=4:l.charCodeAt(0)===58?f=1:l.charCodeAt(0)===42?f=2:f=0,c=2<<f,c&12&&(l=l.slice(1),i=i||[],i.push(l),a=a||[],a.push((c&4)!==0)),c&14&&r[f]++,t.push({type:f,value:W1(l)})}return{names:i||Tp,shouldDecodes:a||Tp}}function m2(t,e,r){return t.char===e&&t.negate===r}var il=function(e,r,n,i,a){this.states=e,this.id=r,this.char=n,this.negate=i,this.nextStates=a?r:null,this.pattern="",this._regex=void 0,this.handlers=void 0,this.types=void 0};il.prototype.regex=function(){return this._regex||(this._regex=new RegExp(this.pattern)),this._regex};il.prototype.get=function(e,r){var n=this,i=this.nextStates;if(i!==null)if(Hh(i))for(var a=0;a<i.length;a++){var s=n.states[i[a]];if(m2(s,e,r))return s}else{var l=this.states[i];if(m2(l,e,r))return l}};il.prototype.put=function(e,r,n){var i;if(i=this.get(e,r))return i;var a=this.states;return i=new il(a,a.length,e,r,n),a[a.length]=i,this.nextStates==null?this.nextStates=i.id:Hh(this.nextStates)?this.nextStates.push(i.id):this.nextStates=[this.nextStates,i.id],i};il.prototype.match=function(e){var r=this,n=this.nextStates;if(!n)return[];var i=[];if(Hh(n))for(var a=0;a<n.length;a++){var s=r.states[n[a]];v2(s,e)&&i.push(s)}else{var l=this.states[n];v2(l,e)&&i.push(l)}return i};function v2(t,e){return t.negate?t.char!==e&&t.char!==-1:t.char===e||t.char===-1}function M9(t){return t.sort(function(e,r){var n=e.types||[0,0,0],i=n[0],a=n[1],s=n[2],l=r.types||[0,0,0],c=l[0],f=l[1],p=l[2];if(s!==p)return s-p;if(s){if(i!==c)return c-i;if(a!==f)return f-a}return a!==f?a-f:i!==c?c-i:0})}function O9(t,e){for(var r=[],n=0,i=t.length;n<i;n++){var a=t[n];r=r.concat(a.match(e))}return r}var Mh=function(e){this.length=0,this.queryParams=e||{}};Mh.prototype.splice=Array.prototype.splice;Mh.prototype.slice=Array.prototype.slice;Mh.prototype.push=Array.prototype.push;function z9(t,e,r){var n=t.handlers,i=t.regex();if(!i||!n)throw new Error("state not initialized");var a=e.match(i),s=1,l=new Mh(r);l.length=n.length;for(var c=0;c<n.length;c++){var f=n[c],p=f.names,h=f.shouldDecodes,m=h2,g=!1;if(p!==Tp&&h!==Tp)for(var y=0;y<p.length;y++){g=!0;var k=p[y],q=a&&a[s++];m===h2&&(m={}),Lt.ENCODE_AND_DECODE_PATH_SEGMENTS&&h[y]?m[k]=q&&decodeURIComponent(q):m[k]=q}l[c]={handler:f.handler,params:m,isDynamic:g}}return l}function y2(t){t=t.replace(/\+/gm,"%20");var e;try{e=decodeURIComponent(t)}catch{e=""}return e}var Lt=function(){this.names=Vg();var e=[],r=new il(e,0,-1,!0,!1);e[0]=r,this.states=e,this.rootState=r};Lt.prototype.add=function(e,r){for(var n=this.rootState,i="^",a=[0,0,0],s=new Array(e.length),l=[],c=!0,f=0,p=0;p<e.length;p++){for(var h=e[p],m=H9(l,h.path,a),g=m.names,y=m.shouldDecodes;f<l.length;f++){var k=l[f];k.type!==4&&(c=!1,n=n.put(47,!1,!1),i+="/",n=jc[k.type](k,n),i+=Rc[k.type](k))}s[p]={handler:h.handler,names:g,shouldDecodes:y}}c&&(n=n.put(47,!1,!1),i+="/"),n.handlers=s,n.pattern=i+"$",n.types=a;var q;typeof r=="object"&&r!==null&&r.as&&(q=r.as),q&&(this.names[q]={segments:l,handlers:s})};Lt.prototype.handlersFor=function(e){var r=this.names[e];if(!r)throw new Error("There is no route named "+e);for(var n=new Array(r.handlers.length),i=0;i<r.handlers.length;i++){var a=r.handlers[i];n[i]=a}return n};Lt.prototype.hasRoute=function(e){return!!this.names[e]};Lt.prototype.generate=function(e,r){var n=this.names[e],i="";if(!n)throw new Error("There is no route named "+e);for(var a=n.segments,s=0;s<a.length;s++){var l=a[s];l.type!==4&&(i+="/",i+=Vc[l.type](l,r))}return i.charAt(0)!=="/"&&(i="/"+i),r&&r.queryParams&&(i+=this.generateQueryString(r.queryParams)),i};Lt.prototype.generateQueryString=function(e){var r=[],n=Object.keys(e);n.sort();for(var i=0;i<n.length;i++){var a=n[i],s=e[a];if(s!=null){var l=encodeURIComponent(a);if(Hh(s))for(var c=0;c<s.length;c++){var f=a+"[]="+encodeURIComponent(s[c]);r.push(f)}else l+="="+encodeURIComponent(s),r.push(l)}}return r.length===0?"":"?"+r.join("&")};Lt.prototype.parseQueryString=function(e){for(var r=e.split("&"),n={},i=0;i<r.length;i++){var a=r[i].split("="),s=y2(a[0]),l=s.length,c=!1,f=void 0;a.length===1?f="true":(l>2&&s.slice(l-2)==="[]"&&(c=!0,s=s.slice(0,l-2),n[s]||(n[s]=[])),f=a[1]?y2(a[1]):""),c?n[s].push(f):n[s]=f}return n};Lt.prototype.recognize=function(e){var r,n=[this.rootState],i={},a=!1,s=e.indexOf("#");s!==-1&&(e=e.substr(0,s));var l=e.indexOf("?");if(l!==-1){var c=e.substr(l+1,e.length);e=e.substr(0,l),i=this.parseQueryString(c)}e.charAt(0)!=="/"&&(e="/"+e);var f=e;Lt.ENCODE_AND_DECODE_PATH_SEGMENTS?e=UT(e):(e=decodeURI(e),f=decodeURI(f));var p=e.length;p>1&&e.charAt(p-1)==="/"&&(e=e.substr(0,p-1),f=f.substr(0,f.length-1),a=!0);for(var h=0;h<e.length&&(n=O9(n,e.charCodeAt(h)),!!n.length);h++);for(var m=[],g=0;g<n.length;g++)n[g].handlers&&m.push(n[g]);n=M9(m);var y=m[0];return y&&y.handlers&&(a&&y.pattern&&y.pattern.slice(-5)==="(.+)$"&&(f=f+"/"),r=z9(y,f,i)),r};Lt.VERSION="0.3.4";Lt.ENCODE_AND_DECODE_PATH_SEGMENTS=!0;Lt.Normalizer={normalizeSegment:W1,normalizePath:UT,encodePathSegment:HT};Lt.prototype.map=V9;/**
 * Minimal Event interface implementation
 *
 * Original implementation by Sven Fuchs: https://gist.github.com/995028
 * Modifications and tests by Christian Johansen.
 *
 * @author Sven Fuchs (svenfuchs@artweb-design.de)
 * @author Christian Johansen (christian@cjohansen.no)
 * @license BSD
 *
 * Copyright (c) 2011 Sven Fuchs, Christian Johansen
 */var wa=function(e,r,n,i){this.type=e,this.bubbles=r,this.cancelable=n,this.target=i};wa.prototype={stopPropagation:function(){},preventDefault:function(){this.defaultPrevented=!0}};var Y9={100:"Continue",101:"Switching Protocols",200:"OK",201:"Created",202:"Accepted",203:"Non-Authoritative Information",204:"No Content",205:"Reset Content",206:"Partial Content",300:"Multiple Choice",301:"Moved Permanently",302:"Found",303:"See Other",304:"Not Modified",305:"Use Proxy",307:"Temporary Redirect",400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Timeout",409:"Conflict",410:"Gone",411:"Length Required",412:"Precondition Failed",413:"Request Entity Too Large",414:"Request-URI Too Long",415:"Unsupported Media Type",416:"Requested Range Not Satisfiable",417:"Expectation Failed",422:"Unprocessable Entity",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"HTTP Version Not Supported"};function C9(t){var e;if(typeof DOMParser!="undefined"){var r=new DOMParser;e=r.parseFromString(t,"text/xml")}else e=new ActiveXObject("Microsoft.XMLDOM"),e.async="false",e.loadXML(t);return e}var F9={"Accept-Charset":!0,"Accept-Encoding":!0,Connection:!0,"Content-Length":!0,Cookie:!0,Cookie2:!0,"Content-Transfer-Encoding":!0,Date:!0,Expect:!0,Host:!0,"Keep-Alive":!0,Referer:!0,TE:!0,Trailer:!0,"Transfer-Encoding":!0,Upgrade:!0,"User-Agent":!0,Via:!0};function I9(t,e){e.addEventListener(t,function(r){var n=e["on"+t];n&&typeof n=="function"&&n.call(r.target,r)})}function jp(){this._eventListeners={};for(var t=["loadstart","progress","load","abort","loadend"],e=t.length-1;e>=0;e--)I9(t[e],this)}jp.prototype={addEventListener:function(e,r){this._eventListeners[e]=this._eventListeners[e]||[],this._eventListeners[e].push(r)},removeEventListener:function(e,r){for(var n=this._eventListeners[e]||[],i=0,a=n.length;i<a;++i)if(n[i]==r)return n.splice(i,1)},dispatchEvent:function(e){for(var r=e.type,n=this._eventListeners[r]||[],i=0;i<n.length;i++)typeof n[i]=="function"?n[i].call(this,e):n[i].handleEvent(e);return!!e.defaultPrevented},_progress:function(e,r,n){var i=new wa("progress");i.target=this,i.lengthComputable=e,i.loaded=r,i.total=n,this.dispatchEvent(i)}};function Je(){jp.call(this),this.readyState=Je.UNSENT,this.requestHeaders={},this.requestBody=null,this.status=0,this.statusText="",this.upload=new jp,this.onabort=null,this.onerror=null,this.onload=null,this.onloadend=null,this.onloadstart=null,this.onprogress=null,this.onreadystatechange=null,this.ontimeout=null}Je.prototype=new jp;Je.UNSENT=0;Je.OPENED=1;Je.HEADERS_RECEIVED=2;Je.LOADING=3;Je.DONE=4;var g2={UNSENT:0,OPENED:1,HEADERS_RECEIVED:2,LOADING:3,DONE:4,async:!0,withCredentials:!1,open:function(e,r,n,i,a){this.method=e,this.url=r,this.async=typeof n=="boolean"?n:!0,this.username=i,this.password=a,this.responseText=null,this.response=this.responseText,this.responseXML=null,this.responseURL=r,this.requestHeaders={},this.sendFlag=!1,this._readyStateChange(Je.OPENED)},setRequestHeader:function(e,r){if(S2(this),F9[e]||/^(Sec-|Proxy-)/.test(e))throw new Error('Refused to set unsafe header "'+e+'"');this.requestHeaders[e]?this.requestHeaders[e]+=","+r:this.requestHeaders[e]=r},send:function(e){if(S2(this),!/^(get|head)$/i.test(this.method)){var r=!1;Object.keys(this.requestHeaders).forEach(function(n){n.toLowerCase()==="content-type"&&(r=!0)}),!r&&!(e||"").toString().match("FormData")&&(this.requestHeaders["Content-Type"]="text/plain;charset=UTF-8"),this.requestBody=e}this.errorFlag=!1,this.sendFlag=this.async,this._readyStateChange(Je.OPENED),typeof this.onSend=="function"&&this.onSend(this),this.dispatchEvent(new wa("loadstart",!1,!1,this))},abort:function(){this.aborted=!0,this.responseText=null,this.response=this.responseText,this.errorFlag=!0,this.requestHeaders={},this.dispatchEvent(new wa("abort",!1,!1,this)),this.readyState>Je.UNSENT&&this.sendFlag&&(this._readyStateChange(Je.UNSENT),this.sendFlag=!1),typeof this.onerror=="function"&&this.onerror()},getResponseHeader:function(e){if(this.readyState<Je.HEADERS_RECEIVED||/^Set-Cookie2?$/i.test(e))return null;e=e.toLowerCase();for(var r in this.responseHeaders)if(r.toLowerCase()==e)return this.responseHeaders[r];return null},getAllResponseHeaders:function(){if(this.readyState<Je.HEADERS_RECEIVED)return"";var e="";for(var r in this.responseHeaders)this.responseHeaders.hasOwnProperty(r)&&!/^Set-Cookie2?$/i.test(r)&&(e+=r+": "+this.responseHeaders[r]+`\r
`);return e},overrideMimeType:function(e){typeof e=="string"&&(this.forceMimeType=e.toLowerCase())},_readyStateChange:function(e){this.readyState=e,typeof this.onreadystatechange=="function"&&this.onreadystatechange(new wa("readystatechange")),this.dispatchEvent(new wa("readystatechange")),this.readyState==Je.DONE&&this.dispatchEvent(new wa("load",!1,!1,this)),(this.readyState==Je.UNSENT||this.readyState==Je.DONE)&&this.dispatchEvent(new wa("loadend",!1,!1,this))},_setResponseHeaders:function(e){this.responseHeaders={};for(var r in e)e.hasOwnProperty(r)&&(this.responseHeaders[r]=e[r]);this.forceMimeType&&(this.responseHeaders["Content-Type"]=this.forceMimeType),this.async?this._readyStateChange(Je.HEADERS_RECEIVED):this.readyState=Je.HEADERS_RECEIVED},_setResponseBody:function(e){E9(this),J9(this),D9(e);var r=this.chunkSize||10,n=0;this.responseText="",this.response=this.responseText;do this.async&&this._readyStateChange(Je.LOADING),this.responseText+=e.substring(n,n+r),this.response=this.responseText,n+=r;while(n<e.length);var i=this.getResponseHeader("Content-Type");if(this.responseText&&(!i||/(text\/xml)|(application\/xml)|(\+xml)/.test(i)))try{this.responseXML=C9(this.responseText)}catch{}this.async?this._readyStateChange(Je.DONE):this.readyState=Je.DONE},respond:function(e,r,n){this._setResponseHeaders(r||{}),this.status=typeof e=="number"?e:200,this.statusText=Y9[this.status],this._setResponseBody(n||"")}};for(var A2 in g2)Je.prototype[A2]=g2[A2];function S2(t){if(t.readyState!==Je.OPENED)throw new Error("INVALID_STATE_ERR");if(t.sendFlag)throw new Error("INVALID_STATE_ERR")}function E9(t){if(t.readyState==Je.DONE)throw new Error("Request done")}function J9(t){if(t.async&&t.readyState!=Je.HEADERS_RECEIVED)throw new Error("No headers received")}function D9(t){if(typeof t!="string"){var e=new Error("Attempted to respond to fake XMLHttpRequest with "+t+", which is not a string.");throw e.name="InvalidBodyException",e}}var x2=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{},OT=function(e,r){if(r=r.split(":")[0],e=+e,!e)return!1;switch(r){case"http":case"ws":return e!==80;case"https":case"wss":return e!==443;case"ftp":return e!==21;case"gopher":return e!==70;case"file":return!1}return e!==0},G9=Object.prototype.hasOwnProperty,K9;function P2(t){try{return decodeURIComponent(t.replace(/\+/g," "))}catch{return null}}function B9(t){for(var e=/([^=?&]+)=?([^&]*)/g,r={},n;n=e.exec(t);){var i=P2(n[1]),a=P2(n[2]);i===null||a===null||i in r||(r[i]=a)}return r}function Z9(t,e){e=e||"";var r=[],n,i;typeof e!="string"&&(e="?");for(i in t)if(G9.call(t,i)){if(n=t[i],!n&&(n===null||n===K9||isNaN(n))&&(n=""),i=encodeURIComponent(i),n=encodeURIComponent(n),i===null||n===null)continue;r.push(i+"="+n)}return r.length?e+r.join("&"):""}var X9=Z9,Q9=B9,Oh={stringify:X9,parse:Q9},_9=/^[A-Za-z][A-Za-z0-9+-.]*:\/\//,$9=/^([a-z][a-z0-9.+-]*:)?(\/\/)?([\\/]+)?([\S\s]*)/i,eJ=/^[a-zA-Z]:/,tJ="[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]",rJ=new RegExp("^"+tJ+"+");function U1(t){return(t||"").toString().replace(rJ,"")}var Lg=[["#","hash"],["?","query"],function(e,r){return Ki(r.protocol)?e.replace(/\\/g,"/"):e},["/","pathname"],["@","auth",1],[NaN,"host",void 0,1,1],[/:(\d+)$/,"port",void 0,1],[NaN,"hostname",void 0,1,1]],w2={hash:1,query:1};function zT(t){var e;typeof window!="undefined"?e=window:typeof x2!="undefined"?e=x2:typeof self!="undefined"?e=self:e={};var r=e.location||{};t=t||r;var n={},i=typeof t,a;if(t.protocol==="blob:")n=new bi(unescape(t.pathname),{});else if(i==="string"){n=new bi(t,{});for(a in w2)delete n[a]}else if(i==="object"){for(a in t)a in w2||(n[a]=t[a]);n.slashes===void 0&&(n.slashes=_9.test(t.href))}return n}function Ki(t){return t==="file:"||t==="ftp:"||t==="http:"||t==="https:"||t==="ws:"||t==="wss:"}function YT(t,e){t=U1(t),e=e||{};var r=$9.exec(t),n=r[1]?r[1].toLowerCase():"",i=!!r[2],a=!!r[3],s=0,l;return i?a?(l=r[2]+r[3]+r[4],s=r[2].length+r[3].length):(l=r[2]+r[4],s=r[2].length):a?(l=r[3]+r[4],s=r[3].length):l=r[4],n==="file:"?s>=2&&(l=l.slice(2)):Ki(n)?l=r[4]:n?i&&(l=l.slice(2)):s>=2&&Ki(e.protocol)&&(l=r[4]),{protocol:n,slashes:i||Ki(n),slashesCount:s,rest:l}}function nJ(t,e){if(t==="")return e;for(var r=(e||"/").split("/").slice(0,-1).concat(t.split("/")),n=r.length,i=r[n-1],a=!1,s=0;n--;)r[n]==="."?r.splice(n,1):r[n]===".."?(r.splice(n,1),s++):s&&(n===0&&(a=!0),r.splice(n,1),s--);return a&&r.unshift(""),(i==="."||i==="..")&&r.push(""),r.join("/")}function bi(t,e,r){if(t=U1(t),!(this instanceof bi))return new bi(t,e,r);var n,i,a,s,l,c,f=Lg.slice(),p=typeof e,h=this,m=0;for(p!=="object"&&p!=="string"&&(r=e,e=null),r&&typeof r!="function"&&(r=Oh.parse),e=zT(e),i=YT(t||"",e),n=!i.protocol&&!i.slashes,h.slashes=i.slashes||n&&e.slashes,h.protocol=i.protocol||e.protocol||"",t=i.rest,(i.protocol==="file:"&&(i.slashesCount!==2||eJ.test(t))||!i.slashes&&(i.protocol||i.slashesCount<2||!Ki(h.protocol)))&&(f[3]=[/(.*)/,"pathname"]);m<f.length;m++){if(s=f[m],typeof s=="function"){t=s(t,h);continue}a=s[0],c=s[1],a!==a?h[c]=t:typeof a=="string"?~(l=t.indexOf(a))&&(typeof s[2]=="number"?(h[c]=t.slice(0,l),t=t.slice(l+s[2])):(h[c]=t.slice(l),t=t.slice(0,l))):(l=a.exec(t))&&(h[c]=l[1],t=t.slice(0,l.index)),h[c]=h[c]||n&&s[3]&&e[c]||"",s[4]&&(h[c]=h[c].toLowerCase())}r&&(h.query=r(h.query)),n&&e.slashes&&h.pathname.charAt(0)!=="/"&&(h.pathname!==""||e.pathname!=="")&&(h.pathname=nJ(h.pathname,e.pathname)),h.pathname.charAt(0)!=="/"&&Ki(h.protocol)&&(h.pathname="/"+h.pathname),OT(h.port,h.protocol)||(h.host=h.hostname,h.port=""),h.username=h.password="",h.auth&&(s=h.auth.split(":"),h.username=s[0]||"",h.password=s[1]||""),h.origin=h.protocol!=="file:"&&Ki(h.protocol)&&h.host?h.protocol+"//"+h.host:"null",h.href=h.toString()}function iJ(t,e,r){var n=this;switch(t){case"query":typeof e=="string"&&e.length&&(e=(r||Oh.parse)(e)),n[t]=e;break;case"port":n[t]=e,OT(e,n.protocol)?e&&(n.host=n.hostname+":"+e):(n.host=n.hostname,n[t]="");break;case"hostname":n[t]=e,n.port&&(e+=":"+n.port),n.host=e;break;case"host":n[t]=e,/:\d+$/.test(e)?(e=e.split(":"),n.port=e.pop(),n.hostname=e.join(":")):(n.hostname=e,n.port="");break;case"protocol":n.protocol=e.toLowerCase(),n.slashes=!r;break;case"pathname":case"hash":if(e){var i=t==="pathname"?"/":"#";n[t]=e.charAt(0)!==i?i+e:e}else n[t]=e;break;default:n[t]=e}for(var a=0;a<Lg.length;a++){var s=Lg[a];s[4]&&(n[s[1]]=n[s[1]].toLowerCase())}return n.origin=n.protocol!=="file:"&&Ki(n.protocol)&&n.host?n.protocol+"//"+n.host:"null",n.href=n.toString(),n}function aJ(t){(!t||typeof t!="function")&&(t=Oh.stringify);var e,r=this,n=r.protocol;n&&n.charAt(n.length-1)!==":"&&(n+=":");var i=n+(r.slashes||Ki(r.protocol)?"//":"");return r.username&&(i+=r.username,r.password&&(i+=":"+r.password),i+="@"),i+=r.host+r.pathname,e=typeof r.query=="object"?t(r.query):r.query,e&&(i+=e.charAt(0)!=="?"?"?"+e:e),r.hash&&(i+=r.hash),i}bi.prototype={set:iJ,toString:aJ};bi.extractProtocol=YT;bi.location=zT;bi.trimLeft=U1;bi.qs=Oh;var sJ=bi;function Ho(t){var e=new sJ(t);e.host||(e.href=e.href);var r=e.pathname;r.charAt(0)!=="/"&&(r="/"+r);var n=e.host;return(e.port==="80"||e.port==="443")&&(n=e.hostname),{host:n,protocol:e.protocol,search:e.query,hash:e.hash,href:e.href,pathname:r,fullpath:r+(e.query||"")+(e.hash||"")}}var H1=function(){function t(){this.verbs={GET:new Lt,PUT:new Lt,POST:new Lt,DELETE:new Lt,PATCH:new Lt,HEAD:new Lt,OPTIONS:new Lt}}return t}(),Ng=function(){function t(){this.registries={}}return t.prototype.forURL=function(e){var r=Ho(e).host,n=this.registries[r];return n===void 0&&(n=this.registries[r]=new H1),n.verbs},t}(),Ar=typeof globalThis!="undefined"&&globalThis||typeof self!="undefined"&&self||typeof Ar!="undefined"&&Ar,zr={searchParams:"URLSearchParams"in Ar,iterable:"Symbol"in Ar&&"iterator"in Symbol,blob:"FileReader"in Ar&&"Blob"in Ar&&function(){try{return new Blob,!0}catch{return!1}}(),formData:"FormData"in Ar,arrayBuffer:"ArrayBuffer"in Ar};function oJ(t){return t&&DataView.prototype.isPrototypeOf(t)}if(zr.arrayBuffer)var lJ=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],uJ=ArrayBuffer.isView||function(t){return t&&lJ.indexOf(Object.prototype.toString.call(t))>-1};function Lc(t){if(typeof t!="string"&&(t=String(t)),/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(t)||t==="")throw new TypeError('Invalid character in header field name: "'+t+'"');return t.toLowerCase()}function M1(t){return typeof t!="string"&&(t=String(t)),t}function O1(t){var e={next:function(){var r=t.shift();return{done:r===void 0,value:r}}};return zr.iterable&&(e[Symbol.iterator]=function(){return e}),e}function Ot(t){this.map={},t instanceof Ot?t.forEach(function(e,r){this.append(r,e)},this):Array.isArray(t)?t.forEach(function(e){this.append(e[0],e[1])},this):t&&Object.getOwnPropertyNames(t).forEach(function(e){this.append(e,t[e])},this)}Ot.prototype.append=function(t,e){t=Lc(t),e=M1(e);var r=this.map[t];this.map[t]=r?r+", "+e:e};Ot.prototype.delete=function(t){delete this.map[Lc(t)]};Ot.prototype.get=function(t){return t=Lc(t),this.has(t)?this.map[t]:null};Ot.prototype.has=function(t){return this.map.hasOwnProperty(Lc(t))};Ot.prototype.set=function(t,e){this.map[Lc(t)]=M1(e)};Ot.prototype.forEach=function(t,e){for(var r in this.map)this.map.hasOwnProperty(r)&&t.call(e,this.map[r],r,this)};Ot.prototype.keys=function(){var t=[];return this.forEach(function(e,r){t.push(r)}),O1(t)};Ot.prototype.values=function(){var t=[];return this.forEach(function(e){t.push(e)}),O1(t)};Ot.prototype.entries=function(){var t=[];return this.forEach(function(e,r){t.push([r,e])}),O1(t)};zr.iterable&&(Ot.prototype[Symbol.iterator]=Ot.prototype.entries);function ay(t){if(t.bodyUsed)return Promise.reject(new TypeError("Already read"));t.bodyUsed=!0}function CT(t){return new Promise(function(e,r){t.onload=function(){e(t.result)},t.onerror=function(){r(t.error)}})}function cJ(t){var e=new FileReader,r=CT(e);return e.readAsArrayBuffer(t),r}function fJ(t){var e=new FileReader,r=CT(e);return e.readAsText(t),r}function dJ(t){for(var e=new Uint8Array(t),r=new Array(e.length),n=0;n<e.length;n++)r[n]=String.fromCharCode(e[n]);return r.join("")}function k2(t){if(t.slice)return t.slice(0);var e=new Uint8Array(t.byteLength);return e.set(new Uint8Array(t)),e.buffer}function FT(){return this.bodyUsed=!1,this._initBody=function(t){this.bodyUsed=this.bodyUsed,this._bodyInit=t,t?typeof t=="string"?this._bodyText=t:zr.blob&&Blob.prototype.isPrototypeOf(t)?this._bodyBlob=t:zr.formData&&FormData.prototype.isPrototypeOf(t)?this._bodyFormData=t:zr.searchParams&&URLSearchParams.prototype.isPrototypeOf(t)?this._bodyText=t.toString():zr.arrayBuffer&&zr.blob&&oJ(t)?(this._bodyArrayBuffer=k2(t.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):zr.arrayBuffer&&(ArrayBuffer.prototype.isPrototypeOf(t)||uJ(t))?this._bodyArrayBuffer=k2(t):this._bodyText=t=Object.prototype.toString.call(t):this._bodyText="",this.headers.get("content-type")||(typeof t=="string"?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):zr.searchParams&&URLSearchParams.prototype.isPrototypeOf(t)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},zr.blob&&(this.blob=function(){var t=ay(this);if(t)return t;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){if(this._bodyArrayBuffer){var t=ay(this);return t||(ArrayBuffer.isView(this._bodyArrayBuffer)?Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset,this._bodyArrayBuffer.byteOffset+this._bodyArrayBuffer.byteLength)):Promise.resolve(this._bodyArrayBuffer))}else return this.blob().then(cJ)}),this.text=function(){var t=ay(this);if(t)return t;if(this._bodyBlob)return fJ(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(dJ(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},zr.formData&&(this.formData=function(){return this.text().then(mJ)}),this.json=function(){return this.text().then(JSON.parse)},this}var pJ=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function hJ(t){var e=t.toUpperCase();return pJ.indexOf(e)>-1?e:t}function Za(t,e){if(!(this instanceof Za))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');e=e||{};var r=e.body;if(t instanceof Za){if(t.bodyUsed)throw new TypeError("Already read");this.url=t.url,this.credentials=t.credentials,e.headers||(this.headers=new Ot(t.headers)),this.method=t.method,this.mode=t.mode,this.signal=t.signal,!r&&t._bodyInit!=null&&(r=t._bodyInit,t.bodyUsed=!0)}else this.url=String(t);if(this.credentials=e.credentials||this.credentials||"same-origin",(e.headers||!this.headers)&&(this.headers=new Ot(e.headers)),this.method=hJ(e.method||this.method||"GET"),this.mode=e.mode||this.mode||null,this.signal=e.signal||this.signal,this.referrer=null,(this.method==="GET"||this.method==="HEAD")&&r)throw new TypeError("Body not allowed for GET or HEAD requests");if(this._initBody(r),(this.method==="GET"||this.method==="HEAD")&&(e.cache==="no-store"||e.cache==="no-cache")){var n=/([?&])_=[^&]*/;if(n.test(this.url))this.url=this.url.replace(n,"$1_="+new Date().getTime());else{var i=/\?/;this.url+=(i.test(this.url)?"&":"?")+"_="+new Date().getTime()}}}Za.prototype.clone=function(){return new Za(this,{body:this._bodyInit})};function mJ(t){var e=new FormData;return t.trim().split("&").forEach(function(r){if(r){var n=r.split("="),i=n.shift().replace(/\+/g," "),a=n.join("=").replace(/\+/g," ");e.append(decodeURIComponent(i),decodeURIComponent(a))}}),e}function vJ(t){var e=new Ot,r=t.replace(/\r?\n[\t ]+/g," ");return r.split("\r").map(function(n){return n.indexOf(`
`)===0?n.substr(1,n.length):n}).forEach(function(n){var i=n.split(":"),a=i.shift().trim();if(a){var s=i.join(":").trim();e.append(a,s)}}),e}FT.call(Za.prototype);function Gn(t,e){if(!(this instanceof Gn))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');e||(e={}),this.type="default",this.status=e.status===void 0?200:e.status,this.ok=this.status>=200&&this.status<300,this.statusText=e.statusText===void 0?"":""+e.statusText,this.headers=new Ot(e.headers),this.url=e.url||"",this._initBody(t)}FT.call(Gn.prototype);Gn.prototype.clone=function(){return new Gn(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new Ot(this.headers),url:this.url})};Gn.error=function(){var t=new Gn(null,{status:0,statusText:""});return t.type="error",t};var yJ=[301,302,303,307,308];Gn.redirect=function(t,e){if(yJ.indexOf(e)===-1)throw new RangeError("Invalid status code");return new Gn(null,{status:e,headers:{location:t}})};var ja=Ar.DOMException;try{new ja}catch{ja=function(e,r){this.message=e,this.name=r;var n=Error(e);this.stack=n.stack},ja.prototype=Object.create(Error.prototype),ja.prototype.constructor=ja}function z1(t,e){return new Promise(function(r,n){var i=new Za(t,e);if(i.signal&&i.signal.aborted)return n(new ja("Aborted","AbortError"));var a=new XMLHttpRequest;function s(){a.abort()}a.onload=function(){var c={status:a.status,statusText:a.statusText,headers:vJ(a.getAllResponseHeaders()||"")};c.url="responseURL"in a?a.responseURL:c.headers.get("X-Request-URL");var f="response"in a?a.response:a.responseText;setTimeout(function(){r(new Gn(f,c))},0)},a.onerror=function(){setTimeout(function(){n(new TypeError("Network request failed"))},0)},a.ontimeout=function(){setTimeout(function(){n(new TypeError("Network request failed"))},0)},a.onabort=function(){setTimeout(function(){n(new ja("Aborted","AbortError"))},0)};function l(c){try{return c===""&&Ar.location.href?Ar.location.href:c}catch{return c}}a.open(i.method,l(i.url),!0),i.credentials==="include"?a.withCredentials=!0:i.credentials==="omit"&&(a.withCredentials=!1),"responseType"in a&&(zr.blob?a.responseType="blob":zr.arrayBuffer&&i.headers.get("Content-Type")&&i.headers.get("Content-Type").indexOf("application/octet-stream")!==-1&&(a.responseType="arraybuffer")),e&&typeof e.headers=="object"&&!(e.headers instanceof Ot)?Object.getOwnPropertyNames(e.headers).forEach(function(c){a.setRequestHeader(c,M1(e.headers[c]))}):i.headers.forEach(function(c,f){a.setRequestHeader(f,c)}),i.signal&&(i.signal.addEventListener("abort",s),a.onreadystatechange=function(){a.readyState===4&&i.signal.removeEventListener("abort",s)}),a.send(typeof i._bodyInit=="undefined"?null:i._bodyInit)})}z1.polyfill=!0;Ar.fetch||(Ar.fetch=z1,Ar.Headers=Ot,Ar.Request=Za,Ar.Response=Gn);var b2=Object.freeze({__proto__:null,Headers:Ot,Request:Za,Response:Gn,get DOMException(){return ja},fetch:z1});function gJ(t,e){var r=["error","timeout","abort","readystatechange"],n=[],i=["readyState","responseText","response","responseXML","responseURL","status","statusText"],a=t._passthroughRequest=new e;a.open(t.method,t.url,t.async,t.username,t.password),t.responseType==="arraybuffer"&&(i=["readyState","response","status","statusText"],a.responseType=t.responseType),"onload"in a&&r.push("load"),t.async&&t.responseType!=="arraybuffer"&&(r.push("progress"),n.push("progress"));function s(m,g,y){for(var k=0;k<m.length;k++){var q=m[k];q in g&&(y[q]=g[q])}}function l(m,g,y){m.dispatchEvent(y),m["on"+g]&&m["on"+g](y)}function c(m){a["on"+m]=function(g){s(i,a,t),l(t,m,g)}}function f(m){a.upload&&t.upload&&t.upload["on"+m]&&(a.upload["on"+m]=function(g){l(t.upload,m,g)})}var p;for(p=0;p<r.length;p++)c(r[p]);for(p=0;p<n.length;p++)f(n[p]);t.async&&(a.timeout=t.timeout,a.withCredentials=t.withCredentials),!a.timeout&&a.timeout!==0&&(a.timeout=0);for(var h in t.requestHeaders)a.setRequestHeader(h,t.requestHeaders[h]);return a}function AJ(t){function e(){Je.call(this)}return e.prototype=Object.create(Je.prototype),e.prototype.constructor=e,e.prototype.send=function(){if(this.sendArguments=arguments,!t.pretender.running)throw new Error("You shut down a Pretender instance while there was a pending request. That request just tried to complete. Check to see if you accidentally shut down a pretender earlier than you intended to");Je.prototype.send.apply(this,arguments),t.pretender.checkPassthrough(this)?this.passthrough():t.pretender.handleRequest(this)},e.prototype.passthrough=function(){if(!this.sendArguments)throw new Error("You attempted to passthrough a FakeRequest that was never sent. Call `.send()` on the original request first");var n=gJ(this,t.pretender._nativeXMLHttpRequest);return n.send.apply(n,this.sendArguments),n},e.prototype._passthroughCheck=function(r,n){return this._passthroughRequest?this._passthroughRequest[r].apply(this._passthroughRequest,n):Je.prototype[r].apply(this,n)},e.prototype.abort=function(){return this._passthroughCheck("abort",arguments)},e.prototype.getResponseHeader=function(){return this._passthroughCheck("getResponseHeader",arguments)},e.prototype.getAllResponseHeaders=function(){return this._passthroughCheck("getAllResponseHeaders",arguments)},t.pretender._nativeXMLHttpRequest.prototype._passthroughCheck&&console.warn("You created a second Pretender instance while there was already one running. Running two Pretender servers at once will lead to unexpected results and will be removed entirely in a future major version.Please call .shutdown() on your instances when you no longer need them to respond."),e}var sy=function(){function t(){this.length=0}return t.prototype.push=function(){return 0},t}();function IT(t,e,r){var n=0,i=t.requestBody;i&&(i instanceof FormData?i.forEach(function(a){a instanceof File?n+=a.size:n+=a.length}):n=i.byteLength||i.size||i.length||0),setTimeout(function(){if(!t.aborted&&!t.status){var a=new Date().getTime()-e.getTime(),s=r<=0?0:a/r*n;t.upload._progress(!0,s,n),t._progress(!0,s,n),IT(t,e,r)}else t.status&&(t.upload._progress(!0,n,n),t._progress(!0,n,n))},50)}function SJ(t){return Object.prototype.toString.call(t)==="[object Array]"}var q2={};function ys(t){return function(e,r,n){return this.register(t,e,r,n)}}var zh=function(){function t(){var e=this;this.hosts=new Ng,this.handlers=[],this.get=ys("GET"),this.post=ys("POST"),this.put=ys("PUT"),this.delete=ys("DELETE"),this.patch=ys("PATCH"),this.head=ys("HEAD"),this.options=ys("OPTIONS"),this.passthrough=q2;var r=arguments[arguments.length-1],n=typeof r=="object"?r:null,i=n&&n.trackRequests===!1;this.handledRequests=i?new sy:[],this.passthroughRequests=i?new sy:[],this.unhandledRequests=i?new sy:[],this.requestReferences=[],this.forcePassthrough=n&&n.forcePassthrough===!0,this.disableUnhandled=n&&n.disableUnhandled===!0,this._nativeXMLHttpRequest=self.XMLHttpRequest,this.running=!1;var a={pretender:this};this.ctx=a,self.XMLHttpRequest=AJ(a),this._fetchProps=b2?["fetch","Headers","Request","Response"]:[],this._fetchProps.forEach(function(c){e["_native"+c]=self[c],self[c]=b2[c]},this),this.running=!0;for(var s=n?arguments.length-1:arguments.length,l=0;l<s;l++)this.map(arguments[l])}return t.prototype.map=function(e){e.call(this)},t.prototype.register=function(e,r,n,i){if(!n)throw new Error("The function you tried passing to Pretender to handle "+e+" "+r+" is undefined or missing.");var a=n;a.numberOfCalls=0,a.async=i,this.handlers.push(a);var s=this.hosts.forURL(r)[e];return s.add([{path:Ho(r).fullpath,handler:a}]),a},t.prototype.checkPassthrough=function(e){var r=e.method.toUpperCase(),n=Ho(e.url).fullpath,i=this.hosts.forURL(e.url)[r].recognize(n),a=i&&i[0];return a&&a.handler===q2||this.forcePassthrough?(this.passthroughRequests.push(e),this.passthroughRequest(r,n,e),!0):!1},t.prototype.handleRequest=function(e){var r=e.method.toUpperCase(),n=e.url,i=this._handlerFor(r,n,e);if(i){i.handler.numberOfCalls++;var a=i.handler.async;this.handledRequests.push(e);var s=this,l=function(f){if(!SJ(f)){var p="Remember to `return [status, headers, body];` in your route handler.";throw new Error("Nothing returned by handler for "+n+". "+p)}var h=f[0],m=s.prepareHeaders(f[1]),g=s.prepareBody(f[2],m);s.handleResponse(e,a,function(){e.respond(h,m,g),s.handledRequest(r,n,e)})};try{var c=i.handler(e);c&&typeof c.then=="function"?c.then(function(f){l(f)}):l(c)}catch(f){this.erroredRequest(r,n,e,f),this.resolve(e)}}else this.disableUnhandled||(this.unhandledRequests.push(e),this.unhandledRequest(r,n,e))},t.prototype.handleResponse=function(e,r,n){var i=typeof r=="function"?r():r;if(i=typeof i=="boolean"||typeof i=="number"?i:0,i===!1)n();else{var a=this;a.requestReferences.push({request:e,callback:n}),i!==!0&&(IT(e,new Date,i),setTimeout(function(){a.resolve(e)},i))}},t.prototype.resolve=function(e){for(var r=0,n=this.requestReferences.length;r<n;r++){var i=this.requestReferences[r];if(i.request===e){i.callback(),this.requestReferences.splice(r,1);break}}},t.prototype.requiresManualResolution=function(e,r){var n=this._handlerFor(e.toUpperCase(),r,{});if(!n)return!1;var i=n.handler.async;return typeof i=="function"?i()===!0:i===!0},t.prototype.prepareBody=function(e,r){return e},t.prototype.prepareHeaders=function(e){return e},t.prototype.handledRequest=function(e,r,n){},t.prototype.passthroughRequest=function(e,r,n){},t.prototype.unhandledRequest=function(e,r,n){throw new Error("Pretender intercepted "+e+" "+r+" but no handler was defined for this type of request")},t.prototype.erroredRequest=function(e,r,n,i){throw i.message="Pretender intercepted "+e+" "+r+" but encountered an error: "+i.message,i},t.prototype.shutdown=function(){var e=this;self.XMLHttpRequest=this._nativeXMLHttpRequest,this._fetchProps.forEach(function(r){self[r]=e["_native"+r]},this),this.ctx.pretender=void 0,this.running=!1},t.prototype._handlerFor=function(e,r,n){var i=this.hosts.forURL(r)[e],a=i.recognize(Ho(r).fullpath),s=a?a[0]:null;return s&&(n.params=s.params,n.queryParams=a.queryParams),s},t.parseURL=Ho,t.Hosts=Ng,t.Registry=H1,t}();zh.parseURL=Ho;zh.Hosts=Ng;zh.Registry=H1;const ET=10,xJ=w9(ET),JT=k9(ET);function PJ(t){const e=xJ.findIndex((r,n)=>!r&&n!==t);if(e>=0)return JT[e]}const wJ=()=>new zh(function(){this.get(`${Fi.serverUrl}${Fi.getThrowSequenceNextUnlabeled.serverRoute}`,async t=>{await T2(300);const e=t.params.exceptId,r=PJ(e),n=JSON.stringify({throwSequence:r});return[200,{"Content-Type":"application/json"},n]}),this.post(`${Fi.serverUrl}${Fi.postThrowSequenceImageLabels.serverRoute}`,async t=>{await T2(300);const e=t.params.id;if(!e&&e!==0)return[200,{},""];const r=t.requestBody,i=JSON.parse(r).imageLabels,a=JT[e];for(let s=0;s<Th;s++)a.throws[s].imageLabel=i[s];return[200,{},""]})});function T2(t){return new Promise(e=>setTimeout(e,t))}var DT,j2=ll.exports;DT=j2.createRoot,j2.hydrateRoot;wJ();const kJ=G0({palette:{mode:"dark"}}),bJ=NO({reducer:P6,middleware:t=>t().concat(Pp.middleware)}),R2=document.getElementById("root");R2&&DT(R2).render($(jN,{theme:kJ,children:$(ez,{i18n:Pr,children:Fe(az,{store:bJ,children:[$(L4,{}),$(WE,{})]})})}));
